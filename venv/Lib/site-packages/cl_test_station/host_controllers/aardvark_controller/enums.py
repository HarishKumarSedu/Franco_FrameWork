from enum import Enum
from typing import List


class AaGpios(Enum):
    """Enumeration for GPIO pins and their respective masks."""
    I2C_SCL = 0x01
    I2C_SDA = 0x02
    SPI_MISO = 0x04
    SPI_SCK = 0x08
    SPI_MOSI = 0x10
    SPI_SS = 0x20

    @property
    def bit_pos(self) -> int:
        """
        Returns bit position for each GPIO line.

        :return: Bit position
        :rtype: int
        """
        return {
            self.I2C_SCL: 0,
            self.I2C_SDA: 1,
            self.SPI_MISO: 2,
            self.SPI_SCK: 3,
            self.SPI_MOSI: 4,
            self.SPI_SS: 5,
        }[self]


class AaOperatingModes(Enum):
    """Emeration for Aardvark wrapper's configure() method"""
    GPIO_ONLY = 0x00
    SPI_AND_GPIO = 0x01
    GPIO_AND_I2C = 0x02
    SPI_AND_I2C = 0x03

    @property
    def gpios(self) -> List[AaGpios]:
        """
        Returns list of GPIOs available for a given controller configuration.

        :return: List of AaGpios that are available
        :rtype: List[AaGpios]
        """
        return {
            self.GPIO_ONLY: list(AaGpios),
            self.SPI_AND_GPIO: [AaGpios.I2C_SCL, AaGpios.I2C_SDA],
            self.GPIO_AND_I2C: [AaGpios.SPI_MISO, AaGpios.SPI_SCK, AaGpios.SPI_MOSI, AaGpios.SPI_SS],
            self.SPI_AND_I2C: []
        }[self]
