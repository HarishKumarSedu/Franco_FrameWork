from cl_test_station.components.component.component import Component
from cl_test_station.interfaces.i2c_interface import I2cInterface
from cl_test_station.test_station_object import TsoField
from enum import Enum


class EepromTypes(Enum):
    MOTHER_BOARD = 'MB'
    DAUGHTER_CARD = 'DC'


class Eeprom(Component):
    """The Eeprom Component"""
    bus_num: int = TsoField(ftype=int, required=True, desc="I2C bus number for this EEPROM")

    address: int = TsoField(ftype=int, required=False, desc="I2C address: 0x50-0x57")

    eeprom_type: EepromTypes = TsoField(ftype=str, required=True, desc="dc= standard daughtercard EEPROM, "
                                                                       "mb= standard motherboard EEPROM")

    def __init__(self, *args, **kwargs):
        try:
            kwargs['eeprom_type'] = EepromTypes(kwargs['eeprom_type'].upper())
        except ValueError:
            raise ValueError('Incorrect eeprom_type. Options are DC and MB')
        if kwargs['eeprom_type'] is EepromTypes.DAUGHTER_CARD:
            if 'register_map_name' not in kwargs:
                kwargs['register_map_name'] = 'dc_map_standard.csv'
            if 'address' not in kwargs:
                kwargs['address'] = 0x57
        elif kwargs['eeprom_type'] is EepromTypes.MOTHER_BOARD:
            if 'register_map_name' not in kwargs:
                kwargs['register_map_name'] = 'mb_map_standard.csv'
            if 'address' not in kwargs:
                kwargs['address'] = 0x50

        super().__init__(*args, **kwargs)

        self.i2c_interface_eeprom = I2cInterface(read_reg_addr_size=2,
                                                 read_reg_data_size=1,
                                                 write_reg_addr_size=2,
                                                 write_reg_data_size=1,
                                                 address_stride=1,
                                                 speed=100000,
                                                 repeat_start=True,
                                                 ainc=True,
                                                 bus_num=self.bus_num,
                                                 address=self.address,
                                                 ref_name='i2c_interface_eeprom',
                                                 container=self
                                                 )
        self.resources[self.i2c_interface_eeprom.ref_name] = self.i2c_interface_eeprom
        self.i2c_interface_eeprom.configure(self.i2c_interface_eeprom.config)

    def configure(self, config, *args, **kwargs):
        super().configure(config, *args, **kwargs)

    def construct_objects(self, *args, **kwargs):
        super().construct_objects(*args, **kwargs)

    def initialize(self, **kwargs):
        super().initialize(**kwargs)

    def shutdown(self, **kwargs):
        super().shutdown(**kwargs)
