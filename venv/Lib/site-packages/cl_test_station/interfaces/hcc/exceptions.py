class HccError(Exception):
    pass


class HccStatusException(HccError):
    """Base exception for all HCC status exceptions"""
    pass


class HccBusError(HccStatusException):
    """Exception for HCC bus errors"""
    def __init__(self, bus_err: int):
        super().__init__("Received bus error in hcc status: %d" % bus_err)


class ChecksumError(HccStatusException):
    """Base exception for HCC checksum errors"""
    pass


class WritePayloadChecksumError(ChecksumError):
    """Exception for HCC write payload checksum errors"""
    def __init__(self, wpld_chk_h:int=None, wpld:list=None):
        if wpld_chk_h is None:
            wpld_chk_h = "Unavailable"
        if wpld is None:
            wpld = "Unavailable"
        super().__init__("Failed to match HCC_WPLD_CHK_H (%s) against HCC_WPLD received from Host: %s" %
                         (str(wpld_chk_h), str(wpld)))


class HdrChecksumError(ChecksumError):
    """Exception for HCC HDR checksum errors"""
    def __init__(self, hdr_chk_h:int, hdr:list):
        super().__init__("Failed to match HCC_HDR_CHK_H (%d) against HCC_HDR received from Host: %s" %
                         (hdr_chk_h, str(hdr)))


class LinkLayerChecksumError(ChecksumError):
    """Exception for any checksum errors that dont include HDR and WPLD"""
    def __init__(self):
        super().__init__("Failed to match host-calculated checksum (excluding HDR_CHK and WPLD_CHK)")


class HccAlignmentError(HccError):
    """Exception for when hcc_count is not multiple of size configured in hcc.config"""
    def __init__(self, hcc_count, size):
        super().__init__('hcc_count=%d - Data access must be a multiple of %d Bytes' % (hcc_count, size))


class HccEndpointError(HccError):
    """Exception for HCC endpoint errors"""
    def __init__(self, hcc_ep, num_ep):
        super().__init__("hcc_ep=%d - Endpoint given is greater that number of valid endpoints (%d)" % (hcc_ep, num_ep))
