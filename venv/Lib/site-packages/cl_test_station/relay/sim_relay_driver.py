from typing import Union

from cl_test_station.test_station_object import TestStationObject
from cl_test_station.relay.enums import RelayState, cast_to_relay_state
from cl_test_station.relay.relay_driver_abc import RelayDriverAbc


class SimRelayDriver(RelayDriverAbc, TestStationObject):
    """Simple simulated RelayDriver interface implementation"""
    _state: RelayState = RelayState.OPEN

    @property
    def state(self) -> RelayState:
        """
        Returns the driver's current state

        :return: Current state
        :rtype: RelayState
        """
        return self._state

    @state.setter
    def state(self, value: Union[RelayState, str, bool, int]):
        """
        Sets the driver's current state

        :param value:
        :type value: RelayState | str | bool | int
        :return: None
        :rtype: None
        """
        self._state = cast_to_relay_state(value)
