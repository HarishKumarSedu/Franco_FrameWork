import os, sys
import Pyro5.api
import Pyro5.client
import socket


def run_remote_test(test_runner_name, test_name, execution_mode, test_parameters_keys, test_parameters_values, trim_src,
                    apply_trims_from, db_version, categories, tcorner_str, vcorner_str, ns_port = 9090):
    """
    Test runner client function to call a Python remote test running on a Pyro server

    *PLACE HOLDER PARAMS*

    :param test_runner_name:
    :param test_name:
    :param execution_mode:
    :param test_parameters_keys:
    :param test_parameters_values:
    :param trim_src:
    :param apply_trims_from:
    :param db_version:
    :param categories:
    :param tcorner_str:
    :param vcorner_str:
    :param ns_port:
    :return:
    """

    ip_addr = socket.gethostbyname(socket.gethostname())
    ns = Pyro5.api.locate_ns(port=ns_port, host=ip_addr)
    # Create the proxy to the test runner
    test_runner_proxy = Pyro5.client.Proxy(ns.lookup(test_runner_name))
    # Reconnect to the proxy, this is necessary because the proxy sometimes is not connected initially
    test_runner_proxy._pyroReconnect()

    return test_runner_proxy.run_test(test_name, execution_mode, test_parameters_keys, test_parameters_values, trim_src,
                                      apply_trims_from, db_version, categories, tcorner_str, vcorner_str)

if __name__ == "__main__":
    run_remote_test('remote_test_runner', 'TestStandFugue', 2, ['VBATT', 'Power', 'Load', 'Fs'], [0,0,0,0], 'VAL', "None", 0)
