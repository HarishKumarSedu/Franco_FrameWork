# Function to parse command line arguments
proc parse_args {argc argv} {

  if { $argc != 10 } {
    puts "This script expects the following parameters:"
	puts "-b <path to bit file>"
	puts "-d <device type>"
	puts "-i <server ip:port>"
	puts "-h <hardware target ID>"
	puts "-s <programming speed>"
    puts "$argc"
    puts "$argv"
    exit
  } else {   
    set bit_path "./"
	set device_target ""
	set address "localhost:3121"
	set hw_target ""
	set speed ""
	
    foreach n [list 0 2 4 6 8] {
      set arg_type [lindex $argv $n]
	  if {$arg_type == "-b"}  {
        set bit_path [lindex $argv [expr {$n + 1}]]
      } elseif {$arg_type == "-d"}  {
        set device_target [lindex $argv [expr {$n + 1}]]
	  } elseif {$arg_type == "-i"} {
        set address [lindex $argv [expr {$n + 1}]]
      } elseif {$arg_type == "-h"}  {
        set hw_target [lindex $argv [expr {$n + 1}]]
      } elseif {$arg_type == "-s"}  {
        set speed [lindex $argv [expr {$n + 1}]]
      }
    }
    return [list $bit_path $device_target $address $hw_target $speed]
  }
  return {}
}

# Extract all the command line arguments
set params [parse_args $argc $argv]
set bit_path [lindex $params 0]
set device_target [lindex $params 1]
set address [lindex $params 2]
set hw_target [lindex $params 3]
set speed [lindex $params 4]

open_hw

# A lot of this information can be found through the Vivado HW manager GUI
connect_hw_server -url $address
current_hw_target [get_hw_targets */xilinx_tcf/$hw_target]
set_property PARAM.FREQUENCY $speed [get_hw_targets */xilinx_tcf/$hw_target]
open_hw_target
current_hw_device [get_hw_devices $device_target]
refresh_hw_device -update_hw_probes false [lindex [get_hw_devices $device_target] 0]
set_property PROBES.FILE {} [get_hw_devices $device_target]
set_property FULL_PROBES.FILE {} [get_hw_devices $device_target]
set_property PROGRAM.FILE $bit_path [get_hw_devices $device_target]
program_hw_devices [get_hw_devices $device_target]
close_hw_target