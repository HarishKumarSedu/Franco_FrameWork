
# Function to parse command line arguments
proc parse_args {argc argv} {

  if { $argc != 8 } {
    puts "This script expects the following parameters:"
    puts "-i <server ip:port>"
    puts "-b <path to bit file>"
	puts "-h <hardware target ID>"
	puts "-d <Device type>"
    puts "$argc"
    puts "$argv"
    exit
  } else {
    set address "localhost:3121"
    set path "./"
	set hw_target ""
	set device_target ""
    foreach n [list 0 2 4 6] {
      set arg_type [lindex $argv $n]

      if {$arg_type == "-i"} {
        set address [lindex $argv [expr {$n + 1}]]
      } elseif {$arg_type == "-b"}  {
        set path [lindex $argv [expr {$n + 1}]]
      } elseif {$arg_type == "-h"}  {
        set hw_target [lindex $argv [expr {$n + 1}]]
      } elseif {$arg_type == "-d"}  {
        set device_target [lindex $argv [expr {$n + 1}]]
      }
    }
    return [list $address $path $hw_target $device_target]
  }
  return {}
}

# Extract all the command line arguments
set params [parse_args $argc $argv]
set address [lindex $params 0]
set path [lindex $params 1]
set hw_id [lindex $params 2]
set device [lindex $params 3]

open_hw

# A lot of this information can be found through the Vivado HW manager GUI
connect_hw_server -url $address
current_hw_target [get_hw_targets */xilinx_tcf/Xilinx/$hw_id]
set_property PARAM.FREQUENCY 12000000 [get_hw_targets */xilinx_tcf/Xilinx/$hw_id]
open_hw_target

current_hw_device [get_hw_devices $device]
refresh_hw_device -update_hw_probes false [lindex [get_hw_devices $device] 0]

set_property PROBES.FILE {} [get_hw_devices $device]
set_property FULL_PROBES.FILE {} [get_hw_devices $device]
set_property PROGRAM.FILE $path [get_hw_devices $device]
program_hw_devices [get_hw_devices $device]
