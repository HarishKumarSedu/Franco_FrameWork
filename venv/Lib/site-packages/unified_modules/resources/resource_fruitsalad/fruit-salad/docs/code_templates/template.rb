################################################################################
###
### Copyright (c) [year-year] Cirrus Logic International (UK) Ltd.
###                           All rights reserved.
###
### This software as well as any related documentation is furnished under
### license and may only be used or copied in accordance with the terms of the
### license. The information in this file is furnished for informational use
### only, is subject to change without notice, and should not be construed as
### a commitment by Cirrus Logic International (UK) Ltd.  Cirrus Logic
### International (UK) Ltd assumes no responsibility or liability for any errors
### or inaccuracies that may appear in this document or any software that may be
### provided in association with this document.
###
### Except as permitted by such license, no part of this document may be
### reproduced, stored in a retrieval system, or transmitted in any form or by
### any means without the express written consent of Cirrus Logic International
### (UK) Ltd or affiliated companies.
###
### @file   <file>.rb
### @brief  <Brief description>
###
### @warning
###    This software is specifically written for Cirrus Logic devices.
###    It may not be used with other devices.
###
################################################################################

#
# Requires
#

#
# Definitions
#

################################################################################
# 
# <ModuleName>
#
# <one-line summary>
#
# <Detailed description of module>
# 
################################################################################
module <module>

    ############################################################################
    ##
    ## Classes
    ##
    ############################################################################
    ############################################################################
    # 
    # <ClassName>
    #
    # <one-line summary>
    #
    # <Detailed description of class>
    #
    ############################################################################
    class <ClassName>

        ########################################################################
        ## 
        ## Accessors
        ##
        ########################################################################

        ########################################################################
        #
        # Reader: @<reader>
        #
        # <description of @reader>
        #
        ########################################################################
        attr_reader :<reader>

        ########################################################################
        #
        # Accessor: <accessor>
        #
        # [An accessor :foo allows module property @foo to be set and retrieved]
        #
        # <description of @accessor>
        #
        ########################################################################
        attr_accessor :<accessor>

        ########################################################################
        ## 
        ## Functions
        ##
        ########################################################################

        ########################################################################
        #
        # @function <function_name>
        #
        # <description>
        #
        # @note Extra things to watch for.
        #
        # @param [<type>]           param1         <description>
        # @param [<type>, <type>]   anotherparam   <description>
        # --- OR ---
        # (no parameters)
        #
        # @return [type] <description>
        #
        # @raise [<exception>] <condition(s), meaning>
        #
        ########################################################################
        def <function_name>( param1, anotherparam )
            return # Do nothing.
        end

    end
end

##################################### END OF FILE ##############################
