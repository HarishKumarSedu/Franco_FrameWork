###############################################################################
###
### Copyright (c) 2014-2015 Cirrus Logic International (UK) Ltd.  All rights reserved.
###
### This software as well as any related documentation is furnished under
### license and may only be used or copied in accordance with the terms of the
### license. The information in this file is furnished for informational use
### only, is subject to change without notice, and should not be construed as
### a commitment by Cirrus Logic International (UK) Ltd.  Cirrus Logic International
### (UK) Ltd assumes no responsibility or liability for any errors or inaccuracies
### that may appear in this document or any software that may be provided in
### association with this document.
###
### Except as permitted by such license, no part of this document may be
### reproduced, stored in a retrieval system, or transmitted in any form or by
### any means without the express written consent of Cirrus Logic International
### (UK) Ltd or affiliated companies.
###
### @file   NullSalad.rb
### @brief  Basic implementation of fruit salad for a null interface.
###
### @version \$Id: NullSalad.rb 1050 2015-05-20 19:11:02Z aangus $
###
### @warning
###    This software is specifically written for Cirrus Logic devices.
###    It may not be used with other devices.
###
###############################################################################

#
# Includes
#
require 'configuration'
require "fruitsalad_base"
require "device_factory"
require "dummy_analyzer"
require "fileutils"
require "tone_generator"
require "wavefile_analyzer"
require "fruitsalad_utils"

#################################################################################
#
# Basic implementation of Fruit Salad for a null device, i.e. one which does
# nothing for any given test.
#
#################################################################################
module FruitSalad

    extend WavefileAnalyzer
    extend FruitSaladDeviceFactory
    extend ToneGenerator

    #############################################################################
    #
    # Device Specialisation
    #
    #############################################################################
    class NullSalad < FruitSaladBase::DeviceInterface

        SampleRate = Conf.property( :SampleRate, 48000 )

        def initialize
            @playback_history = []
            @default_usecases = []
        end

        #######################################################################
        #
        # Indicate that we want to make a copy of any recordings played back and
        # so capture the playback.
        #
        #######################################################################
        def record_output()
            @output = "copyOfInput.wav"
        end

        #######################################################################
        # @function playback
        #
        # If record_output has been called it makes a bitwise copy at the
        # filename specified by @output, allowing us to perform analysis as
        # though the output has been recorded.
        #
        # @param [String] file The name of the file to copy
        # @param [Hash]   opts Optional parameters, which will be ignored.
        #
        #######################################################################
        def playback( file, opts={} )
            @playback_history << file
            @simulated_timer += FruitSalad::track_length file
            file = simulated_noise_model.mix_in_noise( file )
            unless nil == @output
                FileUtils::copy( file, @output )
            end
        end

        #######################################################################
        # @function playtime
        #
        # It gives the total playback time.
        #
        # @return [Float] The total playback time
        #
        #######################################################################
        def playtime
            return @simulated_timer
        end

        #######################################################################
        #
        # @function multitrack_playback
        #
        # Emulate multitrack playback by merging a number of mono wavfiles
        # into a single mono wave file for analysis.
        #
        # @param [Array<Array>] track_list List of [filename, channel number]
        #                                  pairs.
        #
        #######################################################################
        def multitrack_playback( track_list )
            unless @output.nil?
                loaded_tracks = []
                track_list.each do |filename, channel|
                    data = FruitSaladUtils::read_wavefile( filename, SampleRate )
                    data.map! { |x| x[0] }
                    loaded_tracks << data
                end
                # Mix
                out_data = loaded_tracks.transpose.map do |frame|
                    channels = frame.length
                    [ frame.reduce(:+) / channels ]
                end
                FruitSalad::write_waveform( @output, out_data )
            end
        end

        #######################################################################
        #
        # Per device initialisation for the null target. Resets the simulated
        # timer to 0.
        #
        #######################################################################
        def per_device_setup
            @simulated_timer = 0
        end

        #######################################################################
        #
        # Return the time taken to perform all scenario actions up to this point.
        #
        # @return [Float] The time taken since pre-test set-up, in seconds.
        #
        #######################################################################
        def time_taken
            return @simulated_timer
        end

    end

end

# Configure the Device Factory to use our specialised device.
FruitSalad.type = FruitSalad::NullSalad

##################################### END OF FILE ###############################