################################################################################
###
### Copyright (c) 2016 Cirrus Logic International (UK) Ltd.  All rights reserved.
###
### This software as well as any related documentation is furnished under
### license and may only be used or copied in accordance with the terms of the
### license. The information in this file is furnished for informational use
### only, is subject to change without notice, and should not be construed as
### a commitment by Cirrus Logic International (UK) Ltd.  Cirrus Logic International
### (UK) Ltd assumes no responsibility or liability for any errors or inaccuracies
### that may appear in this document or any software that may be provided in
### association with this document.
###
### Except as permitted by such license, no part of this document may be
### reproduced, stored in a retrieval system, or transmitted in any form or by
### any means without the express written consent of Cirrus Logic International
### (UK) Ltd or affiliated companies.
###
### @file setup_target.rb
### @brief  This script is used to setup the target.
###
### Warning
###   This software is specifically written for Cirrus Logic devices.
###   It may not be used with other devices.
###
################################################################################

#
# Includes
#
require 'logfw'


class SetupTarget

    ############################################################################
    # @function initialize
    #
    # Configures target ready to run tests.
    #
    # @param [String] target_platform  Required target platform name
    #                                     Eg.wisce, remote, null etc.,
    #
    ############################################################################
    def initialize( target_platform )
        platform_lookup( target_platform )
        require "#{ENV['FruitSaladTarget']}"
    end

    ############################################################################
    # @function available_platforms
    #
    # Lookup available *Salad.rb files available within FRUITSALAD_HOME.
    #
    # @note All *Salad files should be located within the src/targets directory.
    #
    # (no parameters)
    #
    # @return [Array<String>] Array of *Salad.rb files available for use.
    #
    ############################################################################
    def available_platforms
        @target_dir = File.join( ENV['FRUITSALAD_HOME'], 'src/targets/' )
        entries = Dir.entries( @target_dir )
        entries.select!{ |file| file.match( /(\w+)Salad\.rb/ ) }
        return entries
    end

    ############################################################################
    # @function platform_lookup
    #
    # Lookup the target specific FruitSalad file (will be loaded as part of
    # test script startup).
    #
    # @note Will terminate FruitSalad if an ambiguity is detected or no such
    #       file is available to load.
    #
    # @param target_platform [String] Required target.
    #
    #
    ############################################################################
    def platform_lookup( target_platform )
        requested_platform ||= 'null' # default to null
        platforms = available_platforms

        if platforms.empty?
            raise $LOG.error( 'No targets available, is src/targets empty?' )
        end

        platforms.select!{ |file| file.match( /^#{target_platform}Salad.rb$/i )}
        target_platform = platforms.first
        # set an environment variable to allow script to require the correct target.
        ENV['FruitSaladTarget'] = File.join( @target_dir, target_platform )
    end

end