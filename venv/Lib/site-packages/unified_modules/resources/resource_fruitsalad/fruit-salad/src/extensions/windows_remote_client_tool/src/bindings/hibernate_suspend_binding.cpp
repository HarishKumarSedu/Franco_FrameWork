////////////////////////////////////////////////////////////////////////////////
//
// Copyright (c) 2014-2015 Cirrus Logic International (UK) Ltd.  All rights reserved.
//
// This software as well as any related documentation is furnished under 
// license and may only be used or copied in accordance with the terms of the 
// license. The information in this file is furnished for informational use 
// only, is subject to change without notice, and should not be construed as 
// a commitment by Cirrus Logic International (UK) Ltd.  Cirrus Logic International
// (UK) Ltd assumes no responsibility or liability for any errors or inaccuracies
// that may appear in this document or any software that may be provided in
// association with this document. 
//
// Except as permitted by such license, no part of this document may be 
// reproduced, stored in a retrieval system, or transmitted in any form or by 
// any means without the express written consent of Cirrus Logic International
// (UK) Ltd or affiliated companies. 
//
/// @file hibernate_suspend_binding.cpp
/// @brief  Bindings for DLL functions provided by hibernate_suspend.cpp of WinDriverTestAPI.
///
/// @version \$Id: hibernate_suspend_binding.cpp 659 2015-01-06 15:11:33Z emmas $
///
/// @warning
///   This software is specifically written for Cirrus Logic devices.
///   It may not be used with other devices.
///
//////////////////////////////////////////////////////////////////////////////////
// Includes
//
#include "../stdafx.h"
#include "../functions.h"
#include "../bindings.h"

// Client code declarations.
DLL bool HibernateForDuration( UINT32 );
DLL bool SuspendForDuration( UINT32 );

///////////////////////////////////////////////////////////////////////////////
///
/// Function: HibernateForDurationBinding
///
/// @brief Binding for HibernateForDuration from WinDriverTestAPI.dll
///
/// Instruct the system to enter a hibernation state for a duration.
///
/// @param arguments A vector<string> of size 1, the only element corresponding
//                   to a 32bit unsigned integer specifying the duration to
//                   hibernate for in milliseconds.
///
/// @return -1 if the arguments are malformed, else the normal return value of
//             HibernateForDuration.
///
///////////////////////////////////////////////////////////////////////////////
BINDING( HibernateForDurationBinding )
{
    int returnValue = FAILURE;
    UINT32 duration;

    // Check number of arguments
    if ( !MinimumNumberOfArguments( arguments, 1, "HibernateForDuration" ) )
    {
        goto done;
    }

    // Unpack duration argument.
    duration = IntegerFromString( arguments[0] );

    returnValue = HibernateForDuration( duration );
done:
    return returnValue;
}

///////////////////////////////////////////////////////////////////////////////
///
/// Function: SuspendForDurationBinding
///
/// @brief Binding for SuspendForDuration from WinDriverTestAPI.dll
///
/// Instruct the system to enter a suspend state for a duration.
///
/// @param arguments A vector<string> of size 1, the only element corresponding
///                  to a 32bit unsigned integer specifying the duration to
///                  suspend for in milliseconds.
///
/// @return -1 if the arguments are malformed, else the normal return value of
///         SuspendForDuration.
///
///////////////////////////////////////////////////////////////////////////////
BINDING( SuspendForDurationBinding )
{
    int returnValue = FAILURE;
    UINT32 duration;

    // Check number of arguments.
    if ( !MinimumNumberOfArguments( arguments, 1, "SuspendForDuration" ) )
    {
        goto done;
    }

    // Unpack duration argument.
    duration = IntegerFromString( arguments[0] );
    
    returnValue = SuspendForDuration( duration );
done:
    return returnValue;
}

/////////////////////////////////////// END OF FILE ///////////////////////////
