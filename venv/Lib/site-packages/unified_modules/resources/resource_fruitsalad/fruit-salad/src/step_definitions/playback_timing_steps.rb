###############################################################################
###
### Copyright (c) 2014-2015 Cirrus Logic International (UK) Ltd.  All rights reserved.
###
### This software as well as any related documentation is furnished under
### license and may only be used or copied in accordance with the terms of the
### license. The information in this file is furnished for informational use
### only, is subject to change without notice, and should not be construed as
### a commitment by Cirrus Logic International (UK) Ltd.  Cirrus Logic International
### (UK) Ltd assumes no responsibility or liability for any errors or inaccuracies
### that may appear in this document or any software that may be provided in
### association with this document.
###
### Except as permitted by such license, no part of this document may be
### reproduced, stored in a retrieval system, or transmitted in any form or by
### any means without the express written consent of Cirrus Logic International
### (UK) Ltd or affiliated companies.
###
### @file playback_timing_steps.rb
### @brief Step definition file for comparing the playback time.
###
### @version \$Id: playback_timing_steps.rb 996 2015-04-07 13:50:54Z emmas $
###
### @warning
###    This software is specifically written for Cirrus Logic devices.
###    It may not be used with other devices.
###
###############################################################################

###############################################################################
#
# @!method Then_the_time_taken_is_within_seconds_of_the_length_of_filename
#
# Compare the time taken so far as part of this test to the length of a named
# .wav file. Intended to be called after the playback of an input recording to
# compare the actual playback time with the length of the input.
#
#       Usage:
#       Then the time taken is within <error> s of the length of <audio_file>
#
# @example Then the time taken is within 1s of the length of "foobar.wav"
#
# @param error    The acceptable margin for error in the measurement
# @param filename The name of the file to compare the playback length against.
#
# @raise [RunTimeError] If playback time is not equal to expected time.
#
###############################################################################
Then( /^(?:the )?time taken(?: is)?(?: within)? (#{Number}) ?s(?: of)?(?: the)? length(?: of)? "(.+)"$/ ) do |error, filename|
    FruitSalad::get_device().end_capture()
    playback_time = FruitSalad::get_device().playtime
    expected_time = FruitSalad::track_length filename

    unless ( playback_time - expected_time ).abs < error.to_f
        raise "playback_time was #{playback_time} instead of #{expected_time}"
    end
end

############################## END OF FILE ####################################