/*******************************************************************************
 *
 * Copyright (c) 2014-2015 Cirrus Logic International (UK) Ltd.  All rights reserved.
 *
 * This software as well as any related documentation is furnished under 
 * license and may only be used or copied in accordance with the terms of the 
 * license. The information in this file is furnished for informational use 
 * only, is subject to change without notice, and should not be construed as 
 * a commitment by Cirrus Logic International (UK) Ltd.  Cirrus Logic International
 * (UK) Ltd assumes no responsibility or liability for any errors or inaccuracies
 * that may appear in this document or any software that may be provided in
 * association with this document. 
 *
 * Except as permitted by such license, no part of this document may be 
 * reproduced, stored in a retrieval system, or transmitted in any form or by 
 * any means without the express written consent of Cirrus Logic International
 * (UK) Ltd or affiliated companies. 
 *
 * @file   stdafx.h
 * @brief  Standard preprocessor directives for precompiled header.
 *
 * @version \$Id: stdafx.h 722 2015-01-19 15:44:10Z emmas $
 *
 * @warning
 *     This software is specifically written for Cirrus Logic devices.
 *     It may not be used with other devices.
 *
 ******************************************************************************/
// stdafx.h : include file for standard system include files,
// or project specific include files that are used frequently, but
// are changed infrequently
//
#pragma once
//
// Includes
//
#include "targetver.h"

// Windows Header Files:
#include <windows.h>
#include <PowrProf.h>
#include <setupapi.h>
#include <tchar.h>
#include <iostream>
#include <string>
#include <comdef.h>
#include <TlHelp32.h>
#include <Shellapi.h>

// Our Header Files:
#include "WinDriverTestAPI.h"

// Using
using std::wstring;

//
// Link Libraries
//
#pragma comment( lib, "setupapi.lib" )
#pragma comment( lib, "PowrProf.lib" )
#pragma comment( lib, "ole32.lib" )
#pragma comment( lib, "Shell32.lib" )

//
// Macros 
//
#define MEM_CLEAR( buf )   memset( buf, 0, sizeof( buf ) )
#define COUNT_OF( buf ) ( sizeof( buf ) / sizeof( buf[ 0 ] ) )

////////////////////////////////////////// END OF FILE ////////////////////////
