###############################################################################
###
### Copyright (c) 2015 Cirrus Logic International (UK) Ltd.  All rights reserved.
###
### This software as well as any related documentation is furnished under
### license and may only be used or copied in accordance with the terms of the
### license. The information in this file is furnished for informational use
### only, is subject to change without notice, and should not be construed as
### a commitment by Cirrus Logic International (UK) Ltd.  Cirrus Logic International
### (UK) Ltd assumes no responsibility or liability for any errors or inaccuracies
### that may appear in this document or any software that may be provided in
### association with this document.
###
### Except as permitted by such license, no part of this document may be
### reproduced, stored in a retrieval system, or transmitted in any form or by
### any means without the express written consent of Cirrus Logic International
### (UK) Ltd or affiliated companies.
###
### @file   windows_jack_control.rb
### @brief  Connect and disconnect jacks as part of a test Scenario under Windows.
###
### @version \$Id: windows_jack_control.rb 827 2015-02-03 10:22:41Z emmas $
###
### @warning
###    This software is specifically written for Cirrus Logic devices.
###    It may not be used with other devices.
###
###############################################################################

#
# Requires
#
require 'configuration'
require 'wmctl_invoker'
require 'logfw'

###############################################################################
#
# Shared function implementations between WindowsSalad and WindowsRemoteSalad
# for controlling jack detection using wmctl virtualjack.
#
###############################################################################
module WindowsJackControl

    # Is FruitSalad being run from Jenkins or other CI system?
    Unattended = Conf.property( :Unattended, false )
    LocalJackControl = WMCTLInvokerLocal
    RemoteJackControl = WMCTLInvokerRemote

    ###########################################################################
    #
    # @function connect_jack
    #
    # Connect a headset to the test device's headset jack.
    #
    # @param [Bool] output True if the headset should have a playback endpoint
    # @param [Bool] input  True if the headset should have a recording endpoint
    #
    ###########################################################################
    def connect_jack( output, input )
        if Unattended
            @wmctl.virtualjack( false ) # Disable virtual jack and enable
                                        # physical jack
            raise "Headphones not connected" unless @wmctl.headphones_connected?
            raise "Microphone not connected" unless @wmctl.mic_connected?
        else
            @wmctl.update
            while output!=@wmctl.headphones_connected? || input!=@wmctl.mic_connected?
                $LOG.info "Jack not present. Please connect headset jack."
                $LOG.info "PRESS ENTER TO CONTINUE"
                STDIN.readline
                @wmctl.update
            end
        end
    end

    ###########################################################################
    #
    # @function disconnect_jack
    #
    # Disconnect a headset from the test device's headset jack and playback from
    # speakers.
    #
    # (no parameters)
    #
    ###########################################################################
    def disconnect_jack
        if Unattended
            @wmctl.virtualjack( true, false, false ) # Disable physical jack
        else
            @wmctl.update
            while @wmctl.headphones_connected? || @wmctl.mic_connected?
                $LOG.info "Jack present. Please disconnect headset jack."
                $LOG.info "PRESS ENTER TO CONTINUE"
                STDIN.readline
                @wmctl.update
            end
        end
    end
end

################################### END OF FILE ###############################