////////////////////////////////////////////////////////////////////////////////
//
// Copyright (c) 2016 Cirrus Logic International (UK) Ltd. All rights reserved.
//
// This software as well as any related documentation is furnished under
// license and may only be used or copied in accordance with the terms of the
// license. The information in this file is furnished for informational use
// only, is subject to change without notice, and should not be construed as
// a commitment by Cirrus Logic International (UK) Ltd.  Cirrus Logic International
// (UK) Ltd assumes no responsibility or liability for any errors or inaccuracies
// that may appear in this document or any software that may be provided in
// association with this document.
//
// Except as permitted by such license, no part of this document may be
// reproduced, stored in a retrieval system, or transmitted in any form or by
// any means without the express written consent of Cirrus Logic International
// (UK) Ltd or affiliated companies.
//
/// @file   pops_clicks.h
/// @brief  Pops and clicks detection header file.
///
/// @warning
///   This software is specifically written for Cirrus Logic devices.
///   It may not be used with other devices.
///
////////////////////////////////////////////////////////////////////////////////
//
// Defines
//
#ifndef POPS_CLICKS_H
#define POPS_CLICKS_H

#define  N      512 //Frame length
#define  N2     1024
//blackman harris window coefficients
#define  A0     .35875f
#define  A1     .48829f
#define  A2     .14128f
#define  A3     .01168f

//PI value
#define  M_PI   3.14159265358979323846

#define  FFT_LENGTH   512
#define  WAVEHEADER_SIZE  44

//fix to float conversion
#define  POW15  32768
//Algorithm controlling parameters
#define  TRANSIENT_FLAG_THRESHOLD   420
#define  BETA     2.5
//Hop length in window
#define  H        128
#define  H2       256
#define  LAST_SAMPLES 384
#define  ROWN     512
#define  LENGTH   512
#define  WLEN     512
//2 channel stream
#define  STEREO 2

#ifdef POPS_CLICKS_EXPORTS
#define POPS_CLICKS_API __declspec(dllexport)
#else
#define POPS_CLICKS_API __declspec(dllimport)
#endif

//
// Enums
//
typedef enum { FILEOPEN_ERROR = -1,
               NO_POPS = 0,
               POPS_DETECTED = 1,
               NO_MEMORY = 2
             } PopRetCode;

////////////////////////////////////////////////////////////////////////////////
// Function prototypes
////////////////////////////////////////////////////////////////////////////////

extern "C"
{
///////////////////////////////////////////////////////////////////////////////
///
// Function: PopsClicksDetection
///
/// @brief    Performs pops and clicks detection in a file.
///
/// @param filename      Reference file path.
/// @param pop_time      Array which has times of detection of pops and clicks.
/// @param pop_time_size Size of array pop_time
/// @param pop_count     Count of pops and clicks detected.
///
/// @retval FILEOPEN_ERROR   Couldn't open file.
/// @retval NO_POPS          No pops in file.
/// @retval POPS_DETECTED    Pops detected in file.
/// @retval NO_MEMORY        Memory allocation error.
///
///////////////////////////////////////////////////////////////////////////////
POPS_CLICKS_API PopRetCode PopsClicksDetection( char *, float *, int , int *);
}

#endif // POPS_CLICKS_H
/////////////////////////////END OF FILE///////////////////////////////////////