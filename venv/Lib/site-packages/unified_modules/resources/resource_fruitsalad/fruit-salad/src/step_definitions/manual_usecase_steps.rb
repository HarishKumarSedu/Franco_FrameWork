###############################################################################
###
### Copyright (c) 2014-2015 Cirrus Logic International (UK) Ltd.  All rights reserved.
###
### This software as well as any related documentation is furnished under
### license and may only be used or copied in accordance with the terms of the
### license. The information in this file is furnished for informational use
### only, is subject to change without notice, and should not be construed as
### a commitment by Cirrus Logic International (UK) Ltd.  Cirrus Logic International
### (UK) Ltd assumes no responsibility or liability for any errors or inaccuracies
### that may appear in this document or any software that may be provided in
### association with this document.
###
### Except as permitted by such license, no part of this document may be
### reproduced, stored in a retrieval system, or transmitted in any form or by
### any means without the express written consent of Cirrus Logic International
### (UK) Ltd or affiliated companies.
###
### @file manual_usecase_steps.rb
### @brief cucumber steps definition for loading and verification of usecases.
###
### @warning
###    This software is specifically written for Cirrus Logic devices.
###    It may not be used with other devices.
###
#################################################################################

###############################################################################
#
# @!method Given_use_case
#
# Load a use case script explicitly. The nature of the use case script depends on
# the target device.
#
# Against WISCE targets, the use case script is a device configuration file created
# in WISCE.
#
# Against Android and other Linux-based targets the use case script is a CSV of
# tinymix control names and the value to set them to.
#
# Against Windows targets (and the Null target) there are no use case scripts and
# this statement is ignored.
#
#       Usage:
#       Given use case "<usecase>"
#
# @example Given use case "Playback_to_Line_Out"
#
# @param usecase The name of the use case script to load, without any file extensions if applicable
#
###############################################################################
Given( /use ?case "(.*)"$/ ) do |usecase|
    FruitSalad::get_device().usecase( usecase )
end

###############################################################################
#
# @!method Then_mixer_property_foo_equals_bar
#
# Verify one of the hardware properties has an expected value.
#
#       Usage:
#       Then mixer property <alsa_property> = <value>
#
# @note Only reads tinyalsa settings.
#
# @example Then mixer property "HPOUT1L" = "AIF1RX1"
#
# @param alsa_property The name of the mixer property to query
# @param value         The value to assert the property is equal to
#
###############################################################################
Then( /^mixer property "(.*)" ?= ?"(.*)"$/ ) do |key, expected|
    actual = FruitSalad::get_device().mixer_property( key )
    unless actual == expected
        raise "Mixer property was #{actual}."
    end
end

###############################################################################
#
# @!method Given_I_load_the_binfile
#
# Load the given bin file.
#
#       Usage:
#       Given I load the binfile hello_galaxy.bin
#
# @param binfile The Name of the binfile to be loaded.
#
###############################################################################
Given( /^I load the binfile "(.*)"$/ ) do | binfile |
    FruitSalad::get_device().usecase_from_file( binfile, type: '.bin' )
end

###############################################################################
#
# @!method Given_I_enrol_the_speaker
#
# Enrol the speaker.
#
#       Usage:
#       Given I enrol the speaker hello_galaxy
#       Given I enrol the speaker hello_galaxy in format packed
#
# @param binfile The Name of the user to be loaded.
# @param format  The format of the user to be loaded.
#
###############################################################################
Given( /^I enrol the speaker "(\w+)"(?: in format "(\w+)")?$/ ) do | binfile, format |
    if format.nil?
        user_to_enrol = binfile
    else
        user_to_enrol = binfile + "_" + format
    end
    FruitSalad::get_device().usecase_from_file( user_to_enrol, type: '.bin' )
end


############################ END OF FILE ######################################