# encoding: utf-8
###############################################################################
### Copyright (c) 2015 Cirrus Logic International (UK) Ltd.  All rights reserved.
###
### This software as well as any related documentation is furnished under
### license and may only be used or copied in accordance with the terms of the
### license. The information in this file is furnished for informational use
### only, is subject to change without notice, and should not be construed as
### a commitment by Cirrus Logic International (UK) Ltd.  Cirrus Logic International
### (UK) Ltd assumes no responsibility or liability for any errors or inaccuracies
### that may appear in this document or any software that may be provided in
### association with this document.
###
### Except as permitted by such license, no part of this document may be
### reproduced, stored in a retrieval system, or transmitted in any form or by
### any means without the express written consent of Cirrus Logic International
### (UK) Ltd or affiliated companies.
###
### @file  firmware_interface.rb
### @brief Root class for all firmware test components.
###
### @warning
###   This software is specifically written for Cirrus Logic devices.
###   It may not be used with other devices.
###
###############################################################################

###############################################################################
#
# Encapsulates all of the high-level functionality expected from all firmware
# into a common interface.
#
###############################################################################
class FirmwareInterface
    #
    # Constant for the message to be reported when a firmware cannot be located
    # on a core after loading.
    #
    LoadingUnsuccessfulMessage = 'Requested firmware was not loaded '         \
                                 'successfully - check details (e.g. '        \
                                 'revision and clocking)'

    ###########################################################################
    #
    # @function initialize
    #
    # Default constructor. Assigns the owning DeviceInterface to the attribute
    # '@device'.
    #
    # @param [DeviceInterface] device The parent device object.
    #
    ###########################################################################
    def initialize( device )
        @device = device
    end

    ###########################################################################
    #
    # @function load
    #
    # Load the firmware onto the test target.
    #
    # @param [Fixnum] dsp_core_index  The index core to load the firmware onto.
    #                                 0-indexed.
    # @param [Hash]   options         The optional keyword arguments.
    #
    # @option options [Boolean] :autostart         If true, the firmware will be
    #                                              started immediately after
    #                                              loading, defaults to false.
    # @option options [String]  :firmware_file     Overrides the default
    #                                              mechanism for finding this
    #                                              firmware and loads a named
    #                                              file instead.
    # @option options [String]  :firmware_revision Requested firmware revision.
    #
    # @raise [RuntimeError] If no firmware file to load was specified/found.
    # @raise [RuntimeError] If the firmware fails to match the requested
    #                       revision after loading, or otherwise fails checks
    #                       (wrong name, core etc.).
    #
    ###########################################################################
    def load( dsp_core_index, options={} )
       raise Cucumber::Pending
    end

    ###########################################################################
    #
    # @function start
    #
    # Begin running this firmware.
    #
    # @note The firmware should be loaded first.
    #
    ###########################################################################
    def start()
        raise Cucumber::Pending
    end

end
################################# END OF FILE #################################