/*
 * Copyright (C) 2013 Wolfson Microelectronics plc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#ifndef UNSHORTEN_DEFS_H
#define UNSHORTEN_DEFS_H

/*#define INCLUDE_PASSTHRU_DATA */
#ifdef _DEBUG
#define IF_DEBUG(x)     x
#else
#define IF_DEBUG(x)
#endif

#ifndef __ADSP2__
typedef signed char     s8;
typedef signed short    s16;
typedef signed long     s32;
typedef unsigned char   u8;
typedef unsigned short  u16;
typedef unsigned long   u32;
typedef s16             Sample;

#ifdef __VC32__
typedef signed __int64		s64;
typedef unsigned __int64	u64;
#else
typedef signed long long	s64;
typedef unsigned long long	u64;
#endif
#endif

#define MACHINE_WORD_SIZE   24
#define MAX_SIGNED_WORD     0x7fffff

#define BITS_PER_SAMPLE_V   16
#define MAX_SAMPLE_VALUE    32767
#define MIN_SAMPLE_VALUE    (-32768)
#define BITS_PER_ADSP_WORD  24
#define SAMPLE_MASK_V       ((1<<BITS_PER_SAMPLE_V)-1)
#define BITS_TO_ADSP_WORDS(n)   (((n)+BITS_PER_ADSP_WORD-1)/BITS_PER_ADSP_WORD)
#define BLOCK_SIZE_SAMPLES  240
#define BLOCK_SIZE_WORDS_V  BITS_TO_ADSP_WORDS(BLOCK_SIZE_SAMPLES*BITS_PER_SAMPLE_V)
#define NUM_ORDERS      4
#define SAMPLES_CARRIED     (NUM_ORDERS - 1)

#define TYPE_FIELD_BITS     4
#define TYPE_FIELD_MASK     ((1<<TYPE_FIELD_BITS)-1)
#ifdef INCLUDE_PASSTHRU_DATA
#define LENGTH_FIELD_BITS   9
#else
#define LENGTH_FIELD_BITS   8
#endif
#define LENGTH_FIELD_MASK   ((1<<LENGTH_FIELD_BITS)-1)
#define HN_FIELD_BITS       4
#define HN_FIELD_MASK       ((1<<HN_FIELD_BITS)-1)

#define MAX_BLOCK_SIZE_V    (BLOCK_SIZE_WORDS_V + 1)
#ifdef INCLUDE_PASSTHRU_DATA
#define MAX_BLOCK_SIZE      LENGTH_FIELD_MASK
#else
#define MAX_BLOCK_SIZE      MAX_BLOCK_SIZE_V
#endif

/* extract record type from first word */
#define RECORD_TYPE(fw)     ((fw) & TYPE_FIELD_MASK)

/* extract record size from first word */
#define RECORD_SIZE(fw)     (((fw) >> TYPE_FIELD_BITS) & LENGTH_FIELD_MASK)

/* extract previous record size from first word */
#define RECORD_PREV_SIZE(fw) (((fw) >> (TYPE_FIELD_BITS + LENGTH_FIELD_BITS)) & LENGTH_FIELD_MASK)

#define COMPR_RECORD_ORDER0 0
#define COMPR_RECORD_ORDER1 1
#define COMPR_RECORD_ORDER2 2
#define COMPR_RECORD_ORDER3 3
#define COMPR_RECORD_VERBATIM   4

#endif
