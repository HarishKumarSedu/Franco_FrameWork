###############################################################################
###
### Copyright (c) 2014-2015 Cirrus Logic International (UK) Ltd.  All rights reserved.
###
### This software as well as any related documentation is furnished under
### license and may only be used or copied in accordance with the terms of the
### license. The information in this file is furnished for informational use
### only, is subject to change without notice, and should not be construed as
### a commitment by Cirrus Logic International (UK) Ltd.  Cirrus Logic International
### (UK) Ltd assumes no responsibility or liability for any errors or inaccuracies
### that may appear in this document or any software that may be provided in
### association with this document.
###
### Except as permitted by such license, no part of this document may be
### reproduced, stored in a retrieval system, or transmitted in any form or by
### any means without the express written consent of Cirrus Logic International
### (UK) Ltd or affiliated companies.
###
### @file power_transition.feature
### @brief Test whether expected power state transitions occur with the windows driver.
###
### @version \$Id: power_transition_steps.rb 876 2015-02-19 10:00:38Z emmas $
###
### @warning
###    This software is specifically written for Cirrus Logic devices.
###    It may not be used with other devices.
###
###############################################################################

###############################################################################
#
# @private
#
###############################################################################
MINUTES_TO_MILISECONDS = 60e3
###############################################################################
#
# @private
#
###############################################################################
FIVE_MINUTES = 5 * MINUTES_TO_MILISECONDS

###############################################################################
#
# @!method Given_the_codec_is_in_power_state
#
# Wait until our device enters the named power state through idleing.
#
#       Usage:
#       Given the codec is in power state D<state>
#
# @example Given the codec is in power state D0
# @example Given the codec is in power state D3
#
# @param state The windows driver power state
#
###############################################################################
Given( /^the codec is in power state D(#{Digits})$/ ) do |state|
    if state.to_i == 0
        FruitSalad.get_device().wake
    end
    FruitSalad::get_device().wait_until_state( state, FIVE_MINUTES )
end

###############################################################################
#
# @!method Then_the_codec_enters_power_state_within_duration
#
# Wait until our device enters the named power state through idling.
#
#       Usage:
#       Then the codec enters power state D<state> within <duration> minutes
#
# @example Then the codec enters power state D3 within 2 minutes
#
# @param state   The windows driver power state
# @param duration How long to wait for the desired transition before a timeout
#                 occurs
#
###############################################################################
Then( /^the codec enters power state D(#{Digits}) within (#{Number}) minutes?$/ ) do |state, timeout|
    FruitSalad.get_device().end_capture
    FruitSalad::get_device().wait_until_state( state, timeout*MINUTES_TO_MILISECONDS )
end

################################## END OF FILE ################################