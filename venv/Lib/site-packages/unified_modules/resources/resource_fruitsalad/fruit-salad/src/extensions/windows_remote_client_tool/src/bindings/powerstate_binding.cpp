////////////////////////////////////////////////////////////////////////////////
//
// Copyright (c) 2014-2015 Cirrus Logic International (UK) Ltd.  All rights reserved.
//
// This software as well as any related documentation is furnished under 
// license and may only be used or copied in accordance with the terms of the 
// license. The information in this file is furnished for informational use 
// only, is subject to change without notice, and should not be construed as 
// a commitment by Cirrus Logic International (UK) Ltd.  Cirrus Logic International
// (UK) Ltd assumes no responsibility or liability for any errors or inaccuracies
// that may appear in this document or any software that may be provided in
// association with this document. 
//
// Except as permitted by such license, no part of this document may be 
// reproduced, stored in a retrieval system, or transmitted in any form or by 
// any means without the express written consent of Cirrus Logic International
// (UK) Ltd or affiliated companies. 
//
/// @file powerstate_binding.cpp
/// @brief  Bindings for the functionality provided by powerstate.cpp within WinDriverTestAPI.dll
///
/// @version \$Id: powerstate_binding.cpp 659 2015-01-06 15:11:33Z emmas $
///
/// @warning
///   This software is specifically written for Cirrus Logic devices.
///   It may not be used with other devices.
///
////////////////////////////////////////////////////////////////////////////////
//
// Includes
//
#include "../stdafx.h"
#include "../functions.h"
#include "../bindings.h"

#include <PowrProf.h>

#pragma comment( lib, "PowrProf.lib" )

// Client code declarations.
DLL bool CodecDevicePowerState( PDEVICE_POWER_STATE );

///////////////////////////////////////////////////////////////////////////////
///
/// Function: CodecDevicePowerState
///
/// @brief Binding for CodecDevicePowerState provided by WinDriverTestAPI.dll
///
/// Obtain the current power state for the codec device.
///
/// (no parameters)
///
/// @return -1 on failure, else the current codec power state.
///
///////////////////////////////////////////////////////////////////////////////
BINDING( CodecDevicePowerStateBinding )
{
	UNREFERENCED_PARAMETER( arguments );
    int returnValue = FAILURE;
    DEVICE_POWER_STATE state;
    bool success;

    success = CodecDevicePowerState( &state );
    if ( !success ) // On failure
    {
        goto done;
    }

    returnValue = state;
done:
    return returnValue;
}

////////////////////////////////// END OF FILE ////////////////////////////////
