###############################################################################
###
### Copyright (c) 2015 Cirrus Logic International (UK) Ltd. All rights reserved.
###
### This software as well as any related documentation is furnished under
### license and may only be used or copied in accordance with the terms of the
### license. The information in this file is furnished for informational use
### only, is subject to change without notice, and should not be construed as
### a commitment by Cirrus Logic International (UK) Ltd.  Cirrus Logic
### International (UK) Ltd assumes no responsibility or liability for any
### errors or inaccuracies that may appear in this document or any software
### that may be provided in association with this document.
###
### Except as permitted by such license, no part of this document may be
### reproduced, stored in a retrieval system, or transmitted in any form or by
### any means without the express written consent of Cirrus Logic International
### (UK) Ltd or affiliated companies.
###
### @file per_channel_sines.feature
### @brief Acceptance test for playback and verification of sending sinewaves
### to individual channels.
###
### @warning
###    This software is specifically written for Cirrus Logic devices.
###    It may not be used with other devices.
###
###############################################################################
#
# Acceptance test for playing, to each channel, a different sinewave and
# verifying that output i.e. that local maxima of the spectra occur in the
# correct places.
#
###############################################################################
@core_regression
Feature: Per-channel sinewave playback
    We should be able to play a signal consisting of different sinewaves to
    different audio channels.

    ###########################################################################
    #
    # Capture the output for analysis in all of these tests.
    #
    ###########################################################################
    Background:
        Given I am recording the output

    ###########################################################################
    #
    # We should be able to test for the absence of frequencies in a recording
    # other than two tone channel tests
    #
    ###########################################################################
    @hw_setup_tests
    Scenario: Separate channel playback of 1000 and 2000 Hz sinewaves there
              should be no other spikes
        When I play for 5 seconds the sinewaves:
            | frequency | channel |
            | 1000 Hz   | 0       |
            | 2000 Hz   | 1       |
        Then the output was not silence
        And the output contains tones with error 5 Hz:
            | frequency |
            | 1000 Hz   |
            | 2000 Hz   |
        And the output does not contain tones in bands:
            | low     | high    |
            | 0 Hz    | 995 Hz  |
            | 1005 Hz | 1995 Hz |
            | 2005 Hz | 4 kHz   |

    ###########################################################################
    #
    # We should be able to scan a complex file and find a lot of signals.
    # Trying to match it against a single, sine, frequency will fail because it
    # is noise rather than a simple tone. This verifies that our analysis isn't
    # fudging the results too much.
    #
    ###########################################################################
    @core_regression
    Scenario: Analyse a complex signal for its dominant tones
        When I play 5 seconds of white noise
        Then the output was not silence
        Then {FAIL} the output contains tones with error 1000 Hz:
            |frequency|
            | 1000 Hz |

    ###########################################################################
    #
    # We should be able to test for the absence of frequencies in a recording
    #
    ###########################################################################
    @hw_setup_tests
    Scenario: When playing 1kHz sine there should be no other spikes
        When I play a 1 kHz sine wave for 3 seconds
        Then the output does not contain tones in bands:
            | low     | high  |
            | 0 Hz    | 995 Hz|
            | 1005 Hz | 4 kHz |

#################################### END OF FILE ##############################
