###############################################################################
###
### Copyright (c) 2014-2015 Cirrus Logic International (UK) Ltd.  All rights reserved.
###
### This software as well as any related documentation is furnished under 
### license and may only be used or copied in accordance with the terms of the 
### license. The information in this file is furnished for informational use 
### only, is subject to change without notice, and should not be construed as 
### a commitment by Cirrus Logic International (UK) Ltd.  Cirrus Logic International
### (UK) Ltd assumes no responsibility or liability for any errors or inaccuracies
### that may appear in this document or any software that may be provided in
### association with this document. 
###
### Except as permitted by such license, no part of this document may be 
### reproduced, stored in a retrieval system, or transmitted in any form or by 
### any means without the express written consent of Cirrus Logic International
### (UK) Ltd or affiliated companies. 
###
### @file digital_playback.feature
### @brief basic smoke-test for digital playback
###
### @version \$Id: digital_playback.feature 808 2015-01-29 17:45:20Z emmas $
###
### @warning
###    This software is specifically written for Cirrus Logic devices.
###    It may not be used with other devices.
###
###############################################################################
#
# Basic digital playback tests which check playback from various sources and
# verify recorded output.
#
#################################################################################
@core_regression
Feature: DigitalPlayback
    We should be able to playback an input signal and verify that the sound was
    correct.

    #############################################################################
    #
    # Background
    #
    # Describes the assumptions and context shared by all scenarios within this
    # feature.
    #
    #############################################################################
    Background:
        Given I am connected to a device

    #############################################################################
    #
    # Play a test sound and verify that the output was non-silent.
    #
    #############################################################################
    Scenario: Playback from a file.
        Given I am recording the output
        When I play the audio file "resources/test.wav"
        Then the output was not silence

        
    #############################################################################
    #
    # Play a test sound and verify that the output was sufficiently similar to
    # the original recording.
    #
    #############################################################################
    Scenario: The recording of a file should be similar to the original.
        Given I am recording the output
        When I play the audio file "resources/test.wav"
        Then the output matches the audio file "resources/test.wav"

    ###########################################################################
    #
    # Test our similarity analysis by comparing recorded white noise (simulating
    # broken hardware) against a clear signal.
    #
    ###########################################################################
    Scenario: Radically different audio should not be similar.
        Given I am recording the output
        When I play 5 seconds of white noise
        Then the output doesn't match audio file "resources/test.wav"

    ###########################################################################
    #
    # Assert that a silent input produces a silent output
    #
    ###########################################################################
    @hw_setup_tests
    Scenario: A silent input recording should produce no output when played
        Given I am recording the output
        When I play the audio file "resources/silence.wav"
        Then the output was silence

    ###########################################################################
    #
    # Set up some lead-in and lead-out time.
    #
    ###########################################################################
    Scenario: Set 3 seconds of lead in, and 1 second of lead out.
        Given I am recording the output
        And 3 seconds of lead in
        And 1 second of lead out
        When I play the audio file "resources/test.wav"
        Then the time taken is within 5.5 s of the length of "resources/test.wav"

    ###########################################################################
    #
    # Chop off given duration from a long stream at a random place
    #
    # @note The chopped output file will be generated in tmp folder with
    #       'chopped_' as prefix.
    #       For example if the input filename is file then the output is
    #       generated at tmp/chopped_file
    #
    ###########################################################################
    Scenario: Chop off 3 seconds from long stream at a random place
        When I chop off "3" seconds at a random place of "resources/test.wav"
        Then the "tmp/chopped_test.wav" is of length "3" seconds

    #############################################################################
    #
    # Play a test sound and verify that the output has no phase difference
    # between channels.
    #
    #############################################################################
    Scenario: Playback from a file.
        Given I am recording the output
        When I play the audio file "resources/sine_1000.wav"
        Then the output has no phase difference between channels

################################## END OF FILE ##################################
