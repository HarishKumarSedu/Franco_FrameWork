#!/usr/bin/ruby
# encoding: utf-8
################################################################################
### Copyright (c) 2014 Cirrus Logic International (UK) Ltd.  All rights reserved.
###
### This software as well as any related documentation is furnished under
### license and may only be used or copied in accordance with the terms of the
### license. The information in this file is furnished for informational use
### only, is subject to change without notice, and should not be construed as
### a commitment by Cirrus Logic International (UK) Ltd.  Cirrus Logic International
### (UK) Ltd assumes no responsibility or liability for any errors or inaccuracies
### that may appear in this document or any software that may be provided in
### association with this document.
###
### Except as permitted by such license, no part of this document may be
### reproduced, stored in a retrieval system, or transmitted in any form or by
### any means without the express written consent of Cirrus Logic International
### (UK) Ltd or affiliated companies.
###
### @file   testFruitSaladRun.rb
### @brief  Testing basic fruitsalad functionality running from internal and external directories.
###
### @version \$Id: testFruitSaladRun.rb 544 2014-12-02 14:51:06Z aangus $
###
### @warning
###   This software is specifically written for Cirrus Logic devices.
###   It may not be used with other devices.
################################################################################
# ensure that the gem version of test-unit is loaded
# otherwise the report generation will not occur.
gem 'test-unit'
require 'test/unit'
require 'fileutils'

exit unless ENV['TARGET'].nil?

# the original directory from which this script started executing.
ORIG_DIR = Dir.getwd
# define a constant that points to the location of this checkouts local instal location.
FRUITSALAD_HOME = File.dirname(File.expand_path(__FILE__)) + '/..'

ORIG_PATH = ENV['PATH']

class TestFruitSaladRun < Test::Unit::TestCase

    ###########################################################################
    #
    #    @function    setup
    #
    #    Setting Environment variables and moving to parent fruit-salad directory
    #
    ###########################################################################
    def setup
        ENV['FRUITSALAD_HOME'] = nil
        ENV['RUBYPATH'] = FRUITSALAD_HOME
        Dir.chdir(FRUITSALAD_HOME)
        ENV['PATH'] = ORIG_PATH
    end

    ###########################################################################
    #
    #    @function    create_local_salad
    #
    #    create a subdirectory with a single feature file
    #
    #    @param [String] target_fname Name of folder for local salad created.
    #
    ###########################################################################
    def create_local_salad( target_fname )
        unless File.exists?( target_fname )
            Dir.mkdir( target_fname )
        end
        FileUtils.copy("#{FRUITSALAD_HOME}/example_features/tone_generation.feature", "#{target_fname}/tone_generation.feature")
    end

    ###########################################################################
    #
    #    @function    test_create_local_salad
    #
    #    test for local salad created.
    #
    ###########################################################################
    def test_create_local_salad
        create_local_salad( 'test_local_features' )
        assert( File.exists?( 'test_local_features' ), 'local directory not created' )
        assert( File.exists?('test_local_features/tone_generation.feature'), 'feature file missing' )
    end

    ###########################################################################
    #
    #    @function    test_fail
    #
    #    test for wrong scenario of fruitsalad.rb
    #
    ###########################################################################
    def test_fail
        cmd = 'ruby fruitsalad.rb'
        system(cmd)
        assert_equal(1, $?.exitstatus, 'Program should exit unsuccessfully')
    end

    ###########################################################################
    #
    #    @function    test_local_feature_exe
    #
    #    test for fruitsalad.exe from local salad created.
    #
    ###########################################################################
    def test_local_feature_exe
        create_local_salad('test_local_features')
        Dir.chdir('test_local_features')
        ENV['PATH'] =   ENV['PATH'] + File::PATH_SEPARATOR + FRUITSALAD_HOME
        cmd = "fruitsalad.exe null -f tone_generation.feature"
        system(cmd)
        assert_equal(0, $?.exitstatus, 'Program should exit successfully')

        #
        # Moving to back to directory from which this script started executing,
        # because when executed through rakefile the scripts
        # which are triggered after this script will fail due to path issues.
        #
        Dir.chdir( ORIG_DIR )
        ENV['FRUITSALAD_HOME'] = FRUITSALAD_HOME
    end

    ###########################################################################
    #
    #    @function    test_exe
    #
    #    test for fruitsalad.exe.
    #
    ###########################################################################
    def test_exe
        cmd = 'fruitsalad.exe null -f example_features\tone_generation.feature'
        system(cmd)
        assert_equal(0, $?.exitstatus, 'Program should exit successfully')
    end

    ###########################################################################
    #
    #    @function    test_in
    #
    #    test for fruitsalad.rb
    #
    ###########################################################################
    def test_in
        cmd = 'ruby fruitsalad.rb null -f example_features\tone_generation.feature'
        system(cmd)
        assert_equal(0, $?.exitstatus, 'Program should exit successfully')
    end

    ###########################################################################
    #
    #    @function    test_local_feature
    #
    #    test for fruitsalad.rb from local salad created.
    #
    ###########################################################################
    def test_local_feature
        create_local_salad('test_local_features')
        Dir.chdir('test_local_features')
        cmd = "ruby -S fruitsalad.rb null -f tone_generation.feature"
        system(cmd)
        assert_equal(0, $?.exitstatus, 'Program should exit successfully')
    end

end
################################### END OF FILE ##############################