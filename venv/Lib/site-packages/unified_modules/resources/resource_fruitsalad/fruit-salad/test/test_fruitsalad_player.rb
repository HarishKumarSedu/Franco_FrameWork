#!/usr/bin/ruby
# encoding: utf-8
################################################################################
### Copyright (c) 2014 Cirrus Logic International (UK) Ltd.  All rights reserved.
###
### This software as well as any related documentation is furnished under 
### license and may only be used or copied in accordance with the terms of the 
### license. The information in this file is furnished for informational use 
### only, is subject to change without notice, and should not be construed as 
### a commitment by Cirrus Logic International (UK) Ltd.  Cirrus Logic International
### (UK) Ltd assumes no responsibility or liability for any errors or inaccuracies
### that may appear in this document or any software that may be provided in
### association with this document. 
###
### Except as permitted by such license, no part of this document may be 
### reproduced, stored in a retrieval system, or transmitted in any form or by 
### any means without the express written consent of Cirrus Logic International
### (UK) Ltd or affiliated companies. 
###
### @file   test_fruitsalad_player.rb
### @brief  Testing fruitsalad_player functionality.
###
### @version \$Id: test_fruitsalad_player.rb 544 2014-12-02 14:51:06Z aangus $
###
### @warning
###   This software is specifically written for Cirrus Logic devices.
###   It may not be used with other devices.
################################################################################
# ensure that the gem version of test-unit is loaded
# otherwise the report generation will not occur.
gem 'test-unit'
require 'test/unit'

require_relative '../src/fruitsalad_env_setup.rb'

class TestFruitSaladPlayer < Test::Unit::TestCase     
    def test_set_up_and_terminate
        daemon = Thread.start do
            `bin\\fruitsalad_player_daemon.exe`
            assert_equal( 0, $?.exitstatus, 'fruitsalad_player_daemon exited with an error code' ) 
        end
        sleep( 0.2 )
        `bin\\fruitsalad_player.exe set_up -p 2 -r 2 -s 44100 -b 2048`
        assert_equal( 0, $?.exitstatus, 'fruitsalad_player failed to set up' )
        `bin\\fruitsalad_player.exe terminate`
        assert_equal( 0, $?.exitstatus, 'fruitsalad_player failed to terminate' )
        daemon.join(1)
    end

    def test_invalid_options
        `bin\\fruitsalad_player.exe eeeeeeee`
        assert_equal( 1, $?.exitstatus, '(invalid command test): fruitsalad_player did not return proper error code' )
        `bin\\fruitsalad_player.exe eeeeeeeee -p 2 -r 4`
        assert_equal( 1, $?.exitstatus, '(invalid command with options test): fruitsalad_player did not return proper error code' )
        `bin\\fruitsalad_player.exe set_up -p 2 -r 4 -L`
        assert_equal( 1, $?.exitstatus, '(invalid opion test): fruitsalad_player did not return proper error code' )
        `bin\\fruitsalad_player.exe play`
        assert_equal( 1, $?.exitstatus, '(required option test): fruitsalad_player did not return proper error code' )
    end

    def test_without_deamon_running
        `bin\\fruitsalad_player.exe set_up`
        assert_equal( 3, $?.exitstatus, 'fruitsalad_player did not return proper error code' )
        `bin\\fruitsalad_player.exe play -f test.wav`
        assert_equal( 3, $?.exitstatus, 'fruitsalad_player did not return proper error code' )
        `bin\\fruitsalad_player.exe record -f test.wav`
        assert_equal( 3, $?.exitstatus, 'fruitsalad_player did not return proper error code' )
        `bin\\fruitsalad_player.exe terminate`
        assert_equal( 3, $?.exitstatus, 'fruitsalad_player did not return proper error code' )
    end
end
################################### END OF FILE ###############################
