#!/usr/bin/ruby
################################################################################
### Copyright (c) 2015 Cirrus Logic International (UK) Ltd.  All rights reserved.
###
### This software as well as any related documentation is furnished under
### license and may only be used or copied in accordance with the terms of the
### license. The information in this file is furnished for informational use
### only, is subject to change without notice, and should not be construed as
### a commitment by Cirrus Logic International (UK) Ltd.  Cirrus Logic International
### (UK) Ltd assumes no responsibility or liability for any errors or inaccuracies
### that may appear in this document or any software that may be provided in
### association with this document.
###
### Except as permitted by such license, no part of this document may be
### reproduced, stored in a retrieval system, or transmitted in any form or by
### any means without the express written consent of Cirrus Logic International
### (UK) Ltd or affiliated companies.
###
### @file   testDiscontinuityDetection.rb
### @brief  Testing audio discontinuity detection functionality.
###
### @warning
###   This software is specifically written for Cirrus Logic devices.
###   It may not be used with other devices.
################################################################################
# ensure that the gem version of test-unit is loaded
# otherwise the report generation will not occur.
gem 'test-unit'
require 'test/unit'

require_relative '../src/fruitsalad_env_setup.rb'
require_relative '../src/discontinuity.rb'

exit unless ENV['TARGET'].nil?

class TestDiscontinuityDetect < Test::Unit::TestCase
    def testDiscontinuityDetection
        exitCode = NativeDiscontinuity::discontinuity(
                                        'resources/Driving_Before_DSP.wav',
                                        'resources/Driving_After_DSP.wav' )
        assert_equal( :DISC_DETECTED, exitCode,
                      'Discontinuity has not been detected though there is discontinuity' )
        exitCode = NativeDiscontinuity::discontinuity(
                                        'resources/Driving_Before_DSP.wav',
                                        'resources/Driving_Before_DSP.wav' )
        assert_equal( :NO_DISCONTINUITY, exitCode,
                      'Discontinuity detected though there is no discontinuity' )
    end
end
################################### END OF FILE ###############################
