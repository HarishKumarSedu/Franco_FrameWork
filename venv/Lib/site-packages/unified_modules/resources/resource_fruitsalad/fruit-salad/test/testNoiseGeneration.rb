################################################################################
### Copyright (c) 2015 Cirrus Logic International (UK) Ltd.  All rights reserved.
###
### This software as well as any related documentation is furnished under
### license and may only be used or copied in accordance with the terms of the
### license. The information in this file is furnished for informational use
### only, is subject to change without notice, and should not be construed as
### a commitment by Cirrus Logic International (UK) Ltd.  Cirrus Logic International
### (UK) Ltd assumes no responsibility or liability for any errors or inaccuracies
### that may appear in this document or any software that may be provided in
### association with this document.
###
### Except as permitted by such license, no part of this document may be
### reproduced, stored in a retrieval system, or transmitted in any form or by
### any means without the express written consent of Cirrus Logic International
### (UK) Ltd or affiliated companies.
###
### @file   testNoiseGeneration.rb
### @brief  Tests of FruitSalad methods for generating background noise.
###
### @version \$Id: testNoiseGeneration.rb 899 2015-02-26 13:45:02Z emmas $
###
### @warning
###   This software is specifically written for Cirrus Logic devices.
###   It may not be used with other devices.
################################################################################

#
# Requires
#
gem 'test-unit'
require 'test/unit'

require_relative '../src/fruitsalad_env_setup.rb'
require 'fruitsalad_utils.rb'
require 'tone_generator'
require 'wavefile_analyzer'
require 'simulated_noise'

exit unless ENV['TARGET'].nil?

###############################################################################
#
# Unit test for simulated noise generation as part of playback in FruitSalad.
#
###############################################################################
class TestNoiseGeneration < Test::Unit::TestCase
    include ToneGenerator
    include WavefileAnalyzer

    ###########################################################################
    #
    # @function test_attenuate_noise
    #
    # Verify that our method for attenuating our noise signal based on RMS values
    # works plausibly.
    #
    # (no parameters)
    #
    ###########################################################################
    def test_attenuate_noise
        desired_amplitude = 0.5
        noise_model = SimulatedNoiseModel.new

        mls_noise = generate_mls_whitenoise( 7 )
        mls_noise = FruitSaladUtils::read_wavefile( mls_noise, 48000 ).transpose[0]
        out_samples = noise_model.attenuate_noise( desired_amplitude, mls_noise )

        assert_equal( desired_amplitude, rms( out_samples ).round( 3 ) )
    end
end

################################## END OF FILE ################################
