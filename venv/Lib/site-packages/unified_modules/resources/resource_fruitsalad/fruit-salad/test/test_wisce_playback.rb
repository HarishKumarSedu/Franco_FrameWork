################################################################################
### Copyright (c) 2015 Cirrus Logic International (UK) Ltd. All rights reserved.
###
### This software as well as any related documentation is furnished under
### license and may only be used or copied in accordance with the terms of the
### license. The information in this file is furnished for informational use
### only, is subject to change without notice, and should not be construed as
### a commitment by Cirrus Logic International (UK) Ltd.  Cirrus Logic International
### (UK) Ltd assumes no responsibility or liability for any errors or inaccuracies
### that may appear in this document or any software that may be provided in
### association with this document.
###
### Except as permitted by such license, no part of this document may be
### reproduced, stored in a retrieval system, or transmitted in any form or by
### any means without the express written consent of Cirrus Logic International
### (UK) Ltd or affiliated companies.
###
### @file   testWISCEPlayback.rb
### @brief  Testing WISCE playback functionality.
###
### @warning
###   This software is specifically written for Cirrus Logic devices.
###   It may not be used with other devices.
################################################################################
# ensure that the gem version of test-unit is loaded
# otherwise the report generation will not occur.
gem 'test-unit'
require 'test/unit'

require_relative '../src/fruitsalad_env_setup.rb'
require_relative '../src/targets/WISCESalad.rb'
require 'src/configuration'

unless ENV['TARGET'].nil?
    exit unless ENV['TARGET'] =~ /wisce/i
end
###############################################################################
#
# Unit test for WISCE playback functionality.
#
###############################################################################
class TestWISCEPlayback < Test::Unit::TestCase

    ###########################################################################
    #
    # @function testWISCEPlayback
    #
    # Verifying WISCE playback method functionality on passing optional
    # parameter - blocking for both true and false.
    #
    # (no parameters)
    #
    ###########################################################################
    def testWISCEPlayback

        test_file = 'resources/utterance21_topright.wav'
        assert( File.exists?( test_file ) )

        @device = FruitSalad.get_device()
        @device.setup

        @device.playback( test_file, channels: 1, blocking: true )
        playback_status = @device.playback_completed?
        assert_equal( playback_status, true, 'Blocking not happening' )

        @device.playback( test_file, channels: 1, blocking: false )
        playback_status = @device.playback_completed?
        assert_equal( playback_status, false, 'Playback failed to process in simultaneously' )

        while( 1 )
            playback_status = @device.playback_completed?
            if( playback_status == true )
                break
            end
        end

        @device.end_playback()

    end
end
################################### END OF FILE ###############################
