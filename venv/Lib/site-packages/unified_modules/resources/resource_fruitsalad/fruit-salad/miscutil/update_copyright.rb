###############################################################################
###
### Copyright (c) 2014-2015 Cirrus Logic International (UK) Ltd.  All rights reserved.
###
### This software as well as any related documentation is furnished under 
### license and may only be used or copied in accordance with the terms of the 
### license. The information in this file is furnished for informational use 
### only, is subject to change without notice, and should not be construed as 
### a commitment by Cirrus Logic International (UK) Ltd.  Cirrus Logic International
### (UK) Ltd assumes no responsibility or liability for any errors or inaccuracies
### that may appear in this document or any software that may be provided in
### association with this document. 
###
### Except as permitted by such license, no part of this document may be 
### reproduced, stored in a retrieval system, or transmitted in any form or by 
### any means without the express written consent of Cirrus Logic International
### (UK) Ltd or affiliated companies. 
###
### @file   update_copyright.rb
### @brief  Update Ruby Copyright headers from Wolfson to Cirrus.
###
### @version \$Id: update_copyright.rb 650 2015-01-05 15:01:10Z emmas $
###
### @warning
###    This software is specifically written for Cirrus Logic devices.
###    It may not be used with other devices.
###
###############################################################################

CURRENT_YEAR = "2015"

def fix_file( filename )
    file = File.new( filename, 'r' )
    contents = file.read
    file.close

    raise "#{filename} malformed" unless /^###? Copyright \(c\) ([\d\-]*)/ =~ contents
    copyright_year = /^###? Copyright \(c\) (\d*)/.match(contents)[1]
    if copyright_year != "#{CURRENT_YEAR}"
        copyright_year = "#{copyright_year}-#{CURRENT_YEAR}"
    end
    file_name = /^###? @file (.*)$/.match(contents)[1]
    brief = /^###? @brief (.*)$/.match(contents)[1]

    line_number = 0
    hrule_number = 0
    contents.each_line do |line|
        hrule_number += 1 if line =~ /^\#{70}/
        
        if hrule_number == 2
            break
        end

        line_number += 1
    end
    raise "#{filename} is malformed." unless hrule_number == 2

    contents = contents.each_line
    contents = contents.drop(line_number+1)
    contents = contents.collect {|i| i}
    contents = contents.join("")

    new_header = "###############################################################################
###
### Copyright (c) #{copyright_year} Cirrus Logic International (UK) Ltd.  All rights reserved.
###
### This software as well as any related documentation is furnished under 
### license and may only be used or copied in accordance with the terms of the 
### license. The information in this file is furnished for informational use 
### only, is subject to change without notice, and should not be construed as 
### a commitment by Cirrus Logic International (UK) Ltd.  Cirrus Logic International
### (UK) Ltd assumes no responsibility or liability for any errors or inaccuracies
### that may appear in this document or any software that may be provided in
### association with this document. 
###
### Except as permitted by such license, no part of this document may be 
### reproduced, stored in a retrieval system, or transmitted in any form or by 
### any means without the express written consent of Cirrus Logic International
### (UK) Ltd or affiliated companies. 
###
### @file #{file_name}
### @brief #{brief}
###
### @version \\$Id: update_copyright.rb 650 2015-01-05 15:01:10Z emmas $
###
### @warning
###    This software is specifically written for Cirrus Logic devices.
###    It may not be used with other devices.
###
###############################################################################
"

    contents = new_header << contents

    file = File.new( filename, 'w' )
    file.write contents
    file.close
end

def fix_each_file
    files = Dir.glob( './**/*.rb' )
    files.each do |file|
        fix_file file
    end
end

if __FILE__ == $0
    if ARGV.length > 0
        ARGV.each do |file|
            fix_file file
    end
    else
        fix_each_file
    end
end

################################ END OF FILE ##################################
