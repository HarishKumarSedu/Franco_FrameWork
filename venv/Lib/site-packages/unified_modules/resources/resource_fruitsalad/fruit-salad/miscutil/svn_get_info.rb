################################################################################
###
### Copyright (c) 2014 Wolfson Microelectronics plc.  All rights reserved.
###
### This software as well as any related documentation is furnished under 
### license and may only be used or copied in accordance with the terms of the 
### license. The information in this file is furnished for informational use 
### only, is subject to change without notice, and should not be construed as 
### a commitment by Wolfson Microelectronics plc. Wolfson Microelectronics plc
### assumes no responsibility or liability for any errors or inaccuracies that
### may appear in this document or any software that may be provided in
### association with this document. 
###
### Except as permitted by such license, no part of this document may be 
### reproduced, stored in a retrieval system, or transmitted in any form or by 
### any means without the express written consent of Wolfson Microelectronics plc. 
###
### @file   svn_get_info.rb
### @brief  Ruby script to extract the version tag and head SVN revision from SVN info.
###
### @version \$Id: svn_get_info.rb 257 2014-10-16 12:22:05Z emmas $
###
### Warning
###   This software is specifically written for Wolfson devices. It may not be
###   used with other devices.
###
#################################################################################

###############################################################################
#
# This script calls SVN Info and uses regular expressions to mine data to produce
# the following helper txt files:
#   * svn_info.txt: A dump of the output from 'svn info'.
#   * version.txt: The current release version number checked out or the name
#           of the branch i.e. trunk.
#   * revision.txt: The SVN head revision number of the checked out branch or tag.
#
###############################################################################

###############################################################################
#
# Runs the command svn info and grabs the output as text. The output is also
# copied to a text file called svn_info.txt for use by other utilities.
#
###############################################################################
def svn_info
    svn_info = `svn info`
    file = File.new( "svn_info.txt", "wb" )
    file.print svn_info
    file.close
    return svn_info
end

###############################################################################
#
# Extracts the current, tagged, version or release name from the svn info and
# writes it to a text file called version.txt so it can be read by our cygwin
# build script.
#
###############################################################################
def version
    version = svn_info.lines.grep( /^Relative URL:/ )
    version = version[0]

    if /\^\/trunk/ =~ version
        version = "trunk"
    elsif /\^\/tags\/releases\/(.*)/ =~ version
        version = $1
    else
        version = "unknown"
    end

    file = File.new( "version.txt", "wb" )
    file.print version
    file.close
    return version
end

###############################################################################
#
# Extracts the SVN revision number associated with the checked out tag and writes
# it to a text file called revision.txt so it can be read by our cygwin build
# script.
#
###############################################################################
def revision
    revision = svn_info.lines.grep( /^Revision:/ )
    revision = revision[0]
    /(\d+)/ =~ revision
    revision = $1
    
    file = File.new( "revision.txt", "wb" )
    file.print revision
    file.close
    return revision
end

if __FILE__ == $0
    puts "::SVN Info::"
    puts "#{svn_info}"
    puts "::Release Version::"
    puts "#{version}"
    puts "::SVN Revision::"
    puts "#{revision}"
end
