Metadata-Version: 2.1
Name: um-framework
Version: 2.3.0
Summary: test framework for BSP tests
Home-page: https://docs.cirrus.com/display/ST/Unified+Testing
License: UNKNOWN
Platform: osx
Platform: win32
Requires-Python: >=3.7.5
Requires-Dist: unified-modules-resources

BSP System Test Framework
=========================

BST System Test(BST) Framework is a test framework built using Unified Modules(UM)
to automate and test SCS BSP projects.

Description
-----------

BST framework package is a set of Python base classes designed to ease the
automation of BSP tests. It is developed by the Deuce BSP SQA team and focuses on creating
functional test area base classes applicable to all SCS based BSP projects.

This package contains BST framework, distributed as the ``bst-framework`` package.
Please note that this package depends on ``unified-modules-resources`` and ``unified-modules-core``.


List of Base Classes
--------------------
**BstFramework**
BSP System Test Framework class inherited from UM-core TestFramework class.
Provides a test system setting up the required resources on both Test Controller and Test Head.
BstBaseTest
BSP System Test Base class inherited from UM-core BaseTest(Pytest based class) class.
Configures the BSP device, system details for testing the BSP using both SCS python API
and SCS GUI.

**BaseGuiSquish**
Base class for automating GUI tests using Squish GUI automation tool. This class configures and starts squish
server and squish runner to execute a squish GUI test for a BSP installed in SCS application.
This class also collects the result metrics and test evidence after executing the squish script.
Parent class: BstBaseTest

**BaseNonGuiRegisterMap**
Base class for automating non-GUI register map tests for SCS schema based BSPs.
BSP register map is also referred to as device definition xml file.
This class uses SCS Link Python API resource object as DUT to perform register/bit field reads and writes.
Parent class: BstBaseTest

**BaseGuiRegisterMap**
Base class for automating GUI register map tests for SCS schema based BSPs using Squish.
This class uses Squish resource object controlling SCS IDE as the DUT to perform register/bit field reads and writes.
Parent class: BaseGuiSquish

**BaseGuiFileExecWithAudio**
Base class for automating GUI based BSP audio tests using Squish and APX resource objects.
This class uses Squish resource object controlling SCS IDE as the DUT to execute
Jython script via SCS File->Execute feature.
After executing the Jython script to configure a group of BSP registers, test plays audio by executing
a signal path or a sequence in an APX project using APX resource library object (controls APX hardware)
Parent class: BaseGuiSquish


Installation
------------

Bst Framework has ``setuptools`` support. The current, proper, way of
installing it is to generate a ``wheel`` package from its sources and install
that package using ``pip``.

To generate the ``wheel`` package, run from the ``bst_framework`` source directory:

.. code-block:: sh

    $ python setup.py bdist_wheel

After execution, package should have been generated in the ``dist`` subfolder.
The generated package can then be installed running:

.. code-block:: sh

    $ python -m pip install --user <bst-framework-package>.whl


How to use
----------

Inherit a test script from one of the BST base classes(not BstFramework)

.. code-block::
   class Ts1ScsLinkSanity(BstBaseTest):


Development
-----------

Developers can install BST framework package in a special mode called editable mode. In that mode,
sources can be modified in place without having to generate and reinstall the ``wheel`` package for every change
made to the code.

To install the package in editable mode, run, from the ``bst_framework`` directory:

.. code-block:: sh

    $ python -m pip install --user --editable .


