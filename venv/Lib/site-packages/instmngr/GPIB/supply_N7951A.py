# -*- coding: utf-8 -*-
"""
@author: dkaroly
"""
from supply_N7950A import Supply_N7950A
import sys


idnString = 'N7951A'

# TODO: Are there SCPI cmds for selecting what is displayed on the the LCD display ?

class Supply_N7951A(Supply_N7950A):
    """Class for controlling Keysight N7951A power supply"""

    rating_volts = 20  # Volts for N7951A, 9.0 for N7950A.
    rating_amps = 50   # Amps for N7951A, 100 for N7950A.
    rating_ohms = 0.4  # Ohms for N7951A, 0.1 for N7950A.

    def __init__(self, rmHandle):
        """ Constructs an object of class Supply_N7951A.

        Args:
            rmHandle - reference to a pyvisa.resources.gpib.GPIBInstrument object
                       which has been initialized to the address of the instrument.
                       rmHandle comes from the method instMgr.checkout, which
                       creates the object using
                       :meth:'pyvisa.highlevel.ResourceManager.open_resource'.
        """



        self.rmHandle = rmHandle

        self.cfg_timeout = 5
        self.cfg_max_disp_list_errors = 10

        self.status_clear()      # Clears all previous errors that might block command execution.


# ===============================================================================

if __name__ == "__main__":
    import os
    import time

    mgrRootDir = os.path.abspath(os.path.join(os.path.dirname(sys.argv[0]), '..'))
    sys.path.append(mgrRootDir)
    print("MGRROOTDIR" + '-' * 10 + mgrRootDir)

    from InstMgr import InstMgr

    instMgr = InstMgr()

    ps = instMgr.checkout(objName='supply', interface='GPIB', addr=25, moduleSuffix='N7951A')

    ps.reset()

    print()

    print(ps.getIdn())

    ps.reset()  # Puts everything back to factory defaults - output OFF.

