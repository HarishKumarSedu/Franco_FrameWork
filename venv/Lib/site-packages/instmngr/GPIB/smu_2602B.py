# -*- coding: utf-8 -*-
"""
Created on Mon Jun 11 16:48:10 2018

@author: dzhang
Version: 1.1

History:    
    1.1 - add second channel function
    1.0 - first version with single channel enabled

Function List:
    __init__(rmHandle)
    reset()
    setSrcParam(param='ch1autorangev',val='on')
    setOutputState(src=1,val='off')
    setMeasParam(param='ch1autorangev',val='on')
    getSrcInComplianceLimit(src=1)
    getMeas(src=1,val='voltage')
    getIdn()
    close()

    configVSrc(src=1, vlevel=1.8, ilimit=0.1)
    configIMeas(src=1, spd=1, filtercount=10)
"""

import time
import logging
from smu_2602A import Smu_2602A

idnString = 'Model 2602B'

class Smu_2602B(Smu_2602A):

    def __init__(self,rmHandle):
        self.rmHandle = rmHandle
        self.logger = logging.getLogger('marv.inst.Smu_2602B')
        self.logger.info('Initializing Smu_2602B instrument')
    

        
    
if __name__ == "__main__":
    import os,sys
    mgrRootDir = os.path.abspath(os.path.join(os.path.dirname(sys.argv[0]),'..'))
    sys.path.append(mgrRootDir)

    import InstMgr
    instMgr = InstMgr.InstMgr()
    smu = instMgr.checkout(interface='GPIB',addr=26,moduleSuffix='2602B')
    smu.reset()
#    print(smu.getIdn())
    
    setupList1 = [('ch1autorangev','off'),
                 ('ch1autorangei','on'),
                 ('ch1voltRange', 2),
                 ('ch1function', 'V'),
                 ('ch1offMode', 'highz'),
                 ('ch1voltLevel', 0),
                 ('ch1voltLimit', 0.01),
                 ('ch1currLimit', 0.1),
                 ]
    for param,val in setupList1:
        print(param, val)
        smu.setSrcParam(param=param, val=val)
    smu.setOutputState(src=1, val='on')
    
    smu.configVSrc()
    smu.setOutputState(src=1,val='on')
    smu.configVSrc(src=2)
    smu.setOutputState(src=2,val='on')
    time.sleep(2)
    complianceState = smu.getSrcInComplianceLimit(src=1)
    complianceState = smu.getSrcInComplianceLimit(src=2)
    smu.configIMeas(src=1)
    print(smu.getMeas(src=1,param='current'))
    smu.configIMeas(src=2)
    print(smu.getMeas(src=2,param='current'))
    
    smu.close()
    pass    
