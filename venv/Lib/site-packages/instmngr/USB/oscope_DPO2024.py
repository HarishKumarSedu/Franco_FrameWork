# -*- coding: utf-8 -*-
"""
Created on Wed Nov 4 15:13:30 2020

@author: dkaroly
"""

import sys
import logging
import time
import struct
import oscope_MSO2024B

idnString = 'DPO2024'


# need dict with all settings
#  setting, mnemonic value, actual scpi value map if string / min/max limits if decimal, flag for whether value is changed.
#   --also need to be able to tell it how to generate the SCPI string given dict values.
#  with flag, can provide procs to read dict & update dict and also to get valid values.
#  update dict proc can have parameter to commit all changes to instrument.

# 

class Oscope_DPO2024(oscope_MSO2024B.Oscope_MSO2024B):

    def __init__(self, rmHandle):
        self.rmHandle = rmHandle
        self.logger = logging.getLogger('marv.inst.Oscope_DPO2024')
        self.logger.info('Initializing Oscope_DPO2024 instrument')


if __name__ == "__main__":
    import os, sys

    mgrRootDir = os.path.abspath(os.path.join(os.path.dirname(sys.argv[0]), '..'))
    sys.path.append(mgrRootDir)

    import InstMgr

    instMgr = InstMgr.InstMgr()
    scope = instMgr.checkout(interface='USB', addr='C012764', moduleSuffix='DPO2024')
    scope.reset()
    print(scope.getIdn())

    scope.setInstParam('recordLength', '1k')

#    scope.close()
    pass