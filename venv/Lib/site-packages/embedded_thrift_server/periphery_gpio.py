from cirrusvue.core.connection.native.periphery.gpio import GPIO


class PeripheryGpio:
    """
    This periphery gpio class is used so the same function calls can be used in the ah_ctrl_server gpio functions between the audio and zdc. The audiohub
    uses gpiod package which is not inlcuded in the zdc image - these functions use cirrusvue.core.connection.native.periphery.gpio.GPIO functions.
    """
    def __init__(self, gpio_chip: int, line_num: int):
        self.controller = GPIO(f'/dev/gpiochip{gpio_chip}', line_num, 'high')
        self.gpio_chip = gpio_chip
        self.line_num = line_num
        self.DIRECTION_OUTPUT = 'out'
        self.DIRECTION_INPUT = 'in'
        self._is_requested = False
        self._consumer = None

    def is_used(self):
        return False

    def is_requested(self):
        return self._is_requested

    def set_value(self, value):
        self.controller.write(bool(value))

    def get_value(self):
        return int(self.controller.read())

    def direction(self): #get direction
        return self.controller.direction

    def request(self, consumer, type): #set direction
        self.controller.direction = type
        self._is_requested = True
        self._consumer = consumer

    def release(self):
        self._is_requested = False

    def consumer(self):
        return self._consumer