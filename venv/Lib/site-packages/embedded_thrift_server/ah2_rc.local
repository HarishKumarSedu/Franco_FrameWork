#!/bin/sh -e
#
# ah2_rc.local
#
# This script is executed at the end of each multiuser runlevel.
# Make sure that the script will "exit 0" on success or any other
# value on error.
#
# In order to enable or disable this script just change the execution
# bits.
#
# By default this script does nothing.

if [ -f /var/log/rc.local.log ]; then mv /var/log/rc.local.log /var/log/rc.local.log.last; fi
exec 1>/var/log/rc.local.log 2>&1 # send stdout and stderr from ah2_rc.local to a log file
set -x # tell sh to display commands before execution

#stty cols 132 rows 75

rm -f /home/cirruslink/autoip.log
rm -f /var/lib/avahi-autoipd/*

# Release FPGA reset (AXI-GPIO)
#GPIO=905
#echo $GPIO > /sys/class/gpio/export
#echo out > /sys/class/gpio/gpio$GPIO/direction
#echo 1 > /sys/class/gpio/gpio$GPIO/value

# RiELease FPGA reset (EMIO)
GPIO=61
echo $GPIO > /sys/class/gpio/export
echo out > /sys/class/gpio/gpio$GPIO/direction
echo 1 > /sys/class/gpio/gpio$GPIO/value

# Export Device Detected GPIO (EMIO)
GPIO=62
echo $GPIO > /sys/class/gpio/export

# Disable Zynq QSPI buffer and release XMOS reset
/usr/local/bin/ah2config xmos_rst_deassert xmos_qspi_odis

touch /etc/avahi/services/cirrus-link.service
/etc/audiohub-dev-det &

/etc/cdc_ether
/etc/usb_vbus_det # This probably isn't needed since AH2 is bus powered

/usr/bin/python3 -B /home/ahrm/ahrm_update_check.py
/usr/bin/python3 -B /home/ahrm/ahrm.py --startup

/usr/local/bin/xi2c -d /dev/i2c-3 -p 0x60 -r 0x70 -a write -v 00
/usr/local/bin/xi2c -d /dev/i2c-3 -p 0x60 -r 0x02 -a write -v FF:FF:FF

/usr/bin/python3 -B /home/ah2autoexec/ah2autoexec.py

. /etc/val_ah_config.sh

exit 0
