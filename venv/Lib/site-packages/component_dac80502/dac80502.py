from cl_test_station.components.dacs.dac.dac import Dac
from typing import Union

class Dac80502(Dac):
    """Implementation of Dac80502"""
    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)

    def initialize(self, **kwargs):
        super().initialize()

    def trigger_sw_ldac(self):
        """
        Trigger software LDAC to update enabled channels

        :return: None
        :rtype: None
        """
        self.NO_BLOCK.TRIGGER.LDAC.value = 1

    @property
    def div(self) -> int:
        """
        Divides ref voltage by 1 or 2

        0 = ref voltage unaffected
        1 = ref voltage divided by 2

        :return: Actual integer ref voltage is divided by
        :rtype: int
        """
        return self.CONFIG.GAIN.REF_DIV.value + 1

    @div.setter
    def div(self, new_div: int):
        if new_div in (2, 1):
            self.CONFIG.GAIN.REF_DIV.value = new_div - 1
            self.ref_voltage = self.ref_voltage
        else:
            raise ValueError('Invalid div value. Div value can be 1 or 2')