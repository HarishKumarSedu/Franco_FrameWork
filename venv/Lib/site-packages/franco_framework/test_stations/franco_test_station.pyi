from builtins import NoneType
from builtins import bool
from builtins import classmethod
from builtins import dict
from builtins import float
from builtins import int
from builtins import list
from builtins import object
from builtins import staticmethod
from builtins import str
from cl_test_station.board.board import Board
from cl_test_station.components.component.component import Component
from cl_test_station.components.component.component import ReadFieldsOptimizer
from cl_test_station.components.component.component import WriteFieldsOptimizer
from cl_test_station.components.eeprom.eeprom import Eeprom
from cl_test_station.gpio.digital_pin import DigitalPin
from cl_test_station.gpio.enums import PinDirection
from cl_test_station.gpio.pin import Pin
from cl_test_station.host_controllers.audiohub_controller.audiohub_controller import AudioHubController
from cl_test_station.host_controllers.audiohub_controller.audiohub_controller import AudioHubController as audio_hub
from cl_test_station.interfaces.i2c_interface import I2cInterface
from cl_test_station.multisource.multisourceabc import MultiSourceABC
from cl_test_station.multisource.tso_group import TSOGroupableMixin
from cl_test_station.register_map.block import Block
from cl_test_station.register_map.custom_block import CustomBlock
from cl_test_station.register_map.field import Field
from cl_test_station.register_map.field import InternalAccessModes
from cl_test_station.register_map.register import Register
from cl_test_station.test_station import TestStation
from cl_test_station.test_station_object import TestStationObject
from cl_test_station.utilities.ts_logging import TsLoggingAdapter
from cl_test_station.utilities.tso_container import TsoContainer
from component_dac80502.dac80502 import Dac80502 as offset_dac_1
from component_dac80502.dac80502 import Dac80502 as offset_dac_2
from franco_framework.boards.ee00l10_dc.ee00l10_dc import EE00L10Dc
from franco_framework.boards.ee00l10_mb.ee00l10_mb import EE00L10MB
from franco_framework.components.franco.franco import Franco as franco
from franco_framework.components.temp_sensor.tmp117 import Tmp117 as temp_sensor
from typing import _SpecialForm
import cl_test_station
from typing import *
class FrancoTestStation(TestStation):
    audio_hub:audio_hub
    class_fields:list
    class_type:str
    config:dict
    config_file:NoneType
    config_files:NoneType
    def connect_all_controllers(self):pass
    container:NoneType
    create_path:staticmethod
    database_component_name:str
    def disable_mb_power(self):pass
    dump_class_fields:classmethod
    dump_class_fields_csv:classmethod
    class eeb(EE00L10MB):
        def build_dut_rails(self):pass
        def build_rails(self):pass
        class_fields:list
        class_type:str
        config:dict
        def config_dacs(self):pass
        config_file:NoneType
        config_files:NoneType
        create_path:staticmethod
        database_id:None
        database_id_field_name:NoneType
        dump_class_fields:classmethod
        dump_class_fields_csv:classmethod
        class dut_dc(EE00L10Dc):
            class_fields:list
            class_type:str
            config:dict
            config_file:NoneType
            config_files:NoneType
            create_path:staticmethod
            database_id:None
            database_id_field_name:NoneType
            dump_class_fields:classmethod
            dump_class_fields_csv:classmethod
            class eeprom_dc(Eeprom):
                GLOBAL:Block
                IVM:Block
                ReadFieldsOptimizer:ReadFieldsOptimizer
                WriteFieldsOptimizer:WriteFieldsOptimizer
                active_controller:AudioHubController
                active_interface:I2cInterface
                address:int
                alias_base_name:NoneType
                alias_file:NoneType
                alias_path:NoneType
                aliases:dict
                class block_apis(TsoContainer):
                    def add_resource(self, resource: Any, ref_name: str = None, force: bool = False):pass
                    class_fields:list
                    class_type:str
                    config:dict
                    config_file:NoneType
                    config_files:NoneType
                    create_path:staticmethod
                    dump_class_fields:classmethod
                    dump_class_fields_csv:classmethod
                    def dump_resources(self):pass
                    excluded_classes:NoneType
                    def gen_pyi(self, *args, indent: int = 0, **kwargs) -> Tuple[str, Set[Tuple[str, str]]]:pass
                    generate_stubs:bool
                    get_class_fields:classmethod
                    get_class_fields_table:classmethod
                    has_dynamic_attrs:bool
                    import_error_log:str
                    def inner(self, *args, **kwargs):pass
                    def items(self):pass
                    def keys(self):pass
                    load_yaml:staticmethod
                    log:TsLoggingAdapter
                    path:str
                    def pop(self, key: str):pass
                    def inner(self, *args, **kwargs):pass
                    protect_resources:bool
                    ref_name:str
                    remove_fields:classmethod
                    remove_tags:classmethod
                    resource_type:CustomBlock
                    resources:dict
                    valid_config_files:dict
                    valid_configs:list
                    def values(self):pass
                    # Resources (may be duplicates)
                block_apis:block_apis
                block_config:NoneType
                block_config_file:NoneType
                block_config_name:str
                block_config_path:str
                block_map:dict
                blocks:dict
                bus_num:int
                class_fields:list
                class_type:str
                config:dict
                config_file:NoneType
                config_files:NoneType
                def configure(self, config, *args, **kwargs):pass
                def construct_objects(self, *args, **kwargs):pass
                control_interfaces:dict
                create_path:staticmethod
                create_rtl_aliases:bool
                custom_blocks:dict
                default_iface:str
                diff_file_auto_download:bool
                diff_file_name:NoneType
                diff_file_path:NoneType
                diff_file_request_url:str
                dump_class_fields:classmethod
                dump_class_fields_csv:classmethod
                eeprom_type:str
                excluded_classes:NoneType
                field_regs_bitpos_dict:dict
                class flattened_fields(TsoContainer):
                    def add_resource(self, resource: Any, ref_name: str = None, force: bool = False):pass
                    class_fields:list
                    class_type:str
                    config:dict
                    config_file:NoneType
                    config_files:NoneType
                    create_path:staticmethod
                    dump_class_fields:classmethod
                    dump_class_fields_csv:classmethod
                    def dump_resources(self):pass
                    excluded_classes:NoneType
                    def gen_pyi(self, *args, indent: int = 0, **kwargs) -> Tuple[str, Set[Tuple[str, str]]]:pass
                    generate_stubs:bool
                    get_class_fields:classmethod
                    get_class_fields_table:classmethod
                    has_dynamic_attrs:bool
                    import_error_log:str
                    def inner(self, *args, **kwargs):pass
                    def items(self):pass
                    def keys(self):pass
                    load_yaml:staticmethod
                    log:TsLoggingAdapter
                    path:str
                    def pop(self, key: str):pass
                    def inner(self, *args, **kwargs):pass
                    protect_resources:bool
                    ref_name:str
                    remove_fields:classmethod
                    remove_tags:classmethod
                    resource_type:Field
                    resources:dict
                    valid_config_files:dict
                    valid_configs:list
                    def values(self):pass
                    # Resources (may be duplicates)
                flattened_fields:flattened_fields
                full_clive_history:bool
                get_class_fields:classmethod
                get_class_fields_table:classmethod
                has_dynamic_attrs:bool
                host_controllers:dict
                i2c0_57:I2cInterface
                i2c_interface_eeprom:I2cInterface
                import_error_log:str
                def initialize(self, **kwargs):pass
                interfaces:dict
                internal_field_access:InternalAccessModes
                load_yaml:staticmethod
                loaded_register_map_path:str
                log:TsLoggingAdapter
                new_block_name:str
                new_reg_name:str
                old_block_name:str
                old_reg_name:str
                path:str
                rcs_group_map:NoneType
                ref_name:str
                reg_addr_map:dict
                reg_match_enable_flag:bool
                register_map_name:str
                register_map_path:str
                registers:dict
                remove_fields:classmethod
                remove_tags:classmethod
                repair_check:bool
                repair_record:list
                reset_time:float
                resources:dict
                revision_override:NoneType
                scs_device_name:NoneType
                server_present:bool
                def shutdown(self, **kwargs):pass
                transaction_log_path:NoneType
                transaction_logging_enable:bool
                valid_config_files:dict
                valid_configs:list
                verify_writes:bool
                class GLOBAL(Block):
                        class BOARD_ID_3(Register):
                            class BOARD_ID(Field): pass
                        BOARD_ID_3:BOARD_ID_3
                        class BOARD_ID_2(Register):
                            class BOARD_ID(Field): pass
                        BOARD_ID_2:BOARD_ID_2
                        class BOARD_ID_1(Register):
                            class BOARD_ID(Field): pass
                        BOARD_ID_1:BOARD_ID_1
                        class BOARD_ID_0(Register):
                            class BOARD_ID(Field): pass
                        BOARD_ID_0:BOARD_ID_0
                        class REVISION_LETTER(Register):
                            class CARD_TYPE(Field): pass
                            class REVISION_LETTER(Field): pass
                        REVISION_LETTER:REVISION_LETTER
                        class REVISION_NUMBER(Register):
                            class REVISION_NUMBER(Field): pass
                        REVISION_NUMBER:REVISION_NUMBER
                        class DUT_ID_1(Register):
                            class DUT_ID(Field): pass
                        DUT_ID_1:DUT_ID_1
                        class DUT_ID_0(Register):
                            class DUT_ID(Field): pass
                        DUT_ID_0:DUT_ID_0
                        class MAP_REV(Register):
                            class EEPROM_MAP_REV(Field): pass
                        MAP_REV:MAP_REV
                        class BST_IL_PH1_OFFSETCAL_1(Register):
                            class BST_IL_PH1_OFFSETCAL(Field): pass
                        BST_IL_PH1_OFFSETCAL_1:BST_IL_PH1_OFFSETCAL_1
                        class BST_IL_PH1_OFFSETCAL_0(Register):
                            class BST_IL_PH1_OFFSETCAL(Field): pass
                        BST_IL_PH1_OFFSETCAL_0:BST_IL_PH1_OFFSETCAL_0
                        class BST_IL_PH2_OFFSETCAL_1(Register):
                            class BST_IL_PH2_OFFSETCAL(Field): pass
                        BST_IL_PH2_OFFSETCAL_1:BST_IL_PH2_OFFSETCAL_1
                        class BST_IL_PH2_OFFSETCAL_0(Register):
                            class BST_IL_PH2_OFFSETCAL(Field): pass
                        BST_IL_PH2_OFFSETCAL_0:BST_IL_PH2_OFFSETCAL_0
                        class BST_IL_PH3_OFFSETCAL_1(Register):
                            class BST_IL_PH3_OFFSETCAL(Field): pass
                        BST_IL_PH3_OFFSETCAL_1:BST_IL_PH3_OFFSETCAL_1
                        class BST_IL_PH3_OFFSETCAL_0(Register):
                            class BST_IL_PH3_OFFSETCAL(Field): pass
                        BST_IL_PH3_OFFSETCAL_0:BST_IL_PH3_OFFSETCAL_0
                        class BST_IL_PH4_OFFSETCAL_1(Register):
                            class BST_IL_PH4_OFFSETCAL(Field): pass
                        BST_IL_PH4_OFFSETCAL_1:BST_IL_PH4_OFFSETCAL_1
                        class BST_IL_PH4_OFFSETCAL_0(Register):
                            class BST_IL_PH4_OFFSETCAL(Field): pass
                        BST_IL_PH4_OFFSETCAL_0:BST_IL_PH4_OFFSETCAL_0
                        class BST_IL_PH1_GAINERR_0(Register):
                            class BST_IL_PH1_GAINERR(Field): pass
                        BST_IL_PH1_GAINERR_0:BST_IL_PH1_GAINERR_0
                        class BST_IL_PH1_GAINERR_1(Register):
                            class BST_IL_PH1_GAINERR(Field): pass
                        BST_IL_PH1_GAINERR_1:BST_IL_PH1_GAINERR_1
                        class BST_IL_PH2_GAINERR_0(Register):
                            class BST_IL_PH2_GAINERR(Field): pass
                        BST_IL_PH2_GAINERR_0:BST_IL_PH2_GAINERR_0
                        class BST_IL_PH2_GAINERR_1(Register):
                            class BST_IL_PH2_GAINERR(Field): pass
                        BST_IL_PH2_GAINERR_1:BST_IL_PH2_GAINERR_1
                        class BST_IL_PH3_GAINERR_0(Register):
                            class BST_IL_PH3_GAINERR(Field): pass
                        BST_IL_PH3_GAINERR_0:BST_IL_PH3_GAINERR_0
                        class BST_IL_PH3_GAINERR_1(Register):
                            class BST_IL_PH3_GAINERR(Field): pass
                        BST_IL_PH3_GAINERR_1:BST_IL_PH3_GAINERR_1
                        class BST_IL_PH4_GAINERR_0(Register):
                            class BST_IL_PH4_GAINERR(Field): pass
                        BST_IL_PH4_GAINERR_0:BST_IL_PH4_GAINERR_0
                        class BST_IL_PH4_GAINERR_1(Register):
                            class BST_IL_PH4_GAINERR(Field): pass
                        BST_IL_PH4_GAINERR_1:BST_IL_PH4_GAINERR_1
                        class TRIM_STATUS(Register):
                            class IVM_TRIM_DONE(Field): pass
                            class DAC_TRIM_DONE(Field): pass
                        TRIM_STATUS:TRIM_STATUS
                        class TOP_MARK_W(Register):
                            class TOP_MARK_W(Field): pass
                        TOP_MARK_W:TOP_MARK_W
                        class TOP_MARK_XX_1(Register):
                            class TOP_MARK_XX(Field): pass
                        TOP_MARK_XX_1:TOP_MARK_XX_1
                        class TOP_MARK_XX_0(Register):
                            class TOP_MARK_XX(Field): pass
                        TOP_MARK_XX_0:TOP_MARK_XX_0
                        class TOP_MARK_YY_1(Register):
                            class TOP_MARK_YY(Field): pass
                        TOP_MARK_YY_1:TOP_MARK_YY_1
                        class TOP_MARK_YY_0(Register):
                            class TOP_MARK_YY(Field): pass
                        TOP_MARK_YY_0:TOP_MARK_YY_0
                GLOBAL:GLOBAL
                class IVM(Block):
                        class REG_TRIM0_DS_AON_VBUS_OVP_TRIM(Register):
                            class DS_AON_VBUS_OVP_TRIM(Field): pass
                        REG_TRIM0_DS_AON_VBUS_OVP_TRIM:REG_TRIM0_DS_AON_VBUS_OVP_TRIM
                        class REG_TRIM0_DS_VREF0P6_TRIM(Register):
                            class DS_VREF0P6_TRIM(Field): pass
                        REG_TRIM0_DS_VREF0P6_TRIM:REG_TRIM0_DS_VREF0P6_TRIM
                        class REG_TRIM0_DS_VREF_VBUSLDO_TRIM(Register):
                            class DS_VREF_VBUSLDO_TRIM(Field): pass
                        REG_TRIM0_DS_VREF_VBUSLDO_TRIM:REG_TRIM0_DS_VREF_VBUSLDO_TRIM
                        class REG_TRIM0_DS_VMAINBG_TRIM(Register):
                            class DS_VMAINBG_TRIM(Field): pass
                        REG_TRIM0_DS_VMAINBG_TRIM:REG_TRIM0_DS_VMAINBG_TRIM
                        class REG_TRIM0_DS_AON_VDDSNS_OVP_TRIM(Register):
                            class DS_AON_VDDSNS_OVP_TRIM(Field): pass
                        REG_TRIM0_DS_AON_VDDSNS_OVP_TRIM:REG_TRIM0_DS_AON_VDDSNS_OVP_TRIM
                        class REG_TRIM0_DS_DCO_FREQ_CAL_TRIM(Register):
                            class DS_DCO_FREQ_CAL_TRIM(Field): pass
                        REG_TRIM0_DS_DCO_FREQ_CAL_TRIM:REG_TRIM0_DS_DCO_FREQ_CAL_TRIM
                        class REG_TRIM1_DS_REF_TEMPCO_TRIM(Register):
                            class DS_REF_TEMPCO_TRIM(Field): pass
                        REG_TRIM1_DS_REF_TEMPCO_TRIM:REG_TRIM1_DS_REF_TEMPCO_TRIM
                        class REG_TRIM1_DS_REF_TRIM(Register):
                            class DS_REF_TRIM(Field): pass
                        REG_TRIM1_DS_REF_TRIM:REG_TRIM1_DS_REF_TRIM
                        class REG_TRIM1_SPARE_R54(Register):
                            class SPARE_R54(Field): pass
                        REG_TRIM1_SPARE_R54:REG_TRIM1_SPARE_R54
                        class REG_TRIM1_TEMP_ERROR_THLD(Register):
                            class TEMP_ERROR_THLD(Field): pass
                        REG_TRIM1_TEMP_ERROR_THLD:REG_TRIM1_TEMP_ERROR_THLD
                        class REG_TRIM1_TEMP_GAIN_OTP_VAL(Register):
                            class TEMP_GAIN_OTP_VAL(Field): pass
                        REG_TRIM1_TEMP_GAIN_OTP_VAL:REG_TRIM1_TEMP_GAIN_OTP_VAL
                        class REG_TRIM1_TEMP_OFFSET_OTP_VAL_0(Register):
                            class TEMP_OFFSET_OTP_VAL(Field): pass
                        REG_TRIM1_TEMP_OFFSET_OTP_VAL_0:REG_TRIM1_TEMP_OFFSET_OTP_VAL_0
                        class REG_TRIM1_TEMP_OFFSET_OTP_VAL_1(Register):
                            class TEMP_OFFSET_OTP_VAL(Field): pass
                        REG_TRIM1_TEMP_OFFSET_OTP_VAL_1:REG_TRIM1_TEMP_OFFSET_OTP_VAL_1
                        class REG_TRIM2_DS_LDO1P2_RZERO1_TRIM_B(Register):
                            class DS_LDO1P2_RZERO1_TRIM_B(Field): pass
                        REG_TRIM2_DS_LDO1P2_RZERO1_TRIM_B:REG_TRIM2_DS_LDO1P2_RZERO1_TRIM_B
                        class REG_TRIM2_DS_LDO1P2_MODE2_XTOR(Register):
                            class DS_LDO1P2_MODE2_XTOR(Field): pass
                        REG_TRIM2_DS_LDO1P2_MODE2_XTOR:REG_TRIM2_DS_LDO1P2_MODE2_XTOR
                        class REG_TRIM2_DS_LDO1P2_COMP_VREF_TRIM(Register):
                            class DS_LDO1P2_COMP_VREF_TRIM(Field): pass
                        REG_TRIM2_DS_LDO1P2_COMP_VREF_TRIM:REG_TRIM2_DS_LDO1P2_COMP_VREF_TRIM
                        class REG_TRIM2_DS_LDO1P2_COMP_TRIM_HYS(Register):
                            class DS_LDO1P2_COMP_TRIM_HYS(Field): pass
                        REG_TRIM2_DS_LDO1P2_COMP_TRIM_HYS:REG_TRIM2_DS_LDO1P2_COMP_TRIM_HYS
                        class REG_TRIM2_DS_LDO1P2_VREF_TRIM(Register):
                            class DS_LDO1P2_VREF_TRIM(Field): pass
                        REG_TRIM2_DS_LDO1P2_VREF_TRIM:REG_TRIM2_DS_LDO1P2_VREF_TRIM
                        class REG_TRIM3_DS_PH4_INDCS_TRIM_GAIN_S4(Register):
                            class DS_PH4_INDCS_TRIM_GAIN_S4(Field): pass
                        REG_TRIM3_DS_PH4_INDCS_TRIM_GAIN_S4:REG_TRIM3_DS_PH4_INDCS_TRIM_GAIN_S4
                        class REG_TRIM3_DS_PH4_INDCS_TRIM_GAIN_S1(Register):
                            class DS_PH4_INDCS_TRIM_GAIN_S1(Field): pass
                        REG_TRIM3_DS_PH4_INDCS_TRIM_GAIN_S1:REG_TRIM3_DS_PH4_INDCS_TRIM_GAIN_S1
                        class REG_TRIM3_DS_PH4_INDCS_MIR_TRIM_S4(Register):
                            class DS_PH4_INDCS_MIR_TRIM_S4(Field): pass
                        REG_TRIM3_DS_PH4_INDCS_MIR_TRIM_S4:REG_TRIM3_DS_PH4_INDCS_MIR_TRIM_S4
                        class REG_TRIM3_DS_PH4_INDCS_MIR_TRIM_S1(Register):
                            class DS_PH4_INDCS_MIR_TRIM_S1(Field): pass
                        REG_TRIM3_DS_PH4_INDCS_MIR_TRIM_S1:REG_TRIM3_DS_PH4_INDCS_MIR_TRIM_S1
                        class REG_TRIM3_SPARE_R5C(Register):
                            class SPARE_R5C(Field): pass
                        REG_TRIM3_SPARE_R5C:REG_TRIM3_SPARE_R5C
                        class REG_TRIM3_DS_PH24_INDCS_TRIM_BUF(Register):
                            class DS_PH24_INDCS_TRIM_BUF(Field): pass
                        REG_TRIM3_DS_PH24_INDCS_TRIM_BUF:REG_TRIM3_DS_PH24_INDCS_TRIM_BUF
                        class REG_TRIM3_DS_PH13_INDCS_TRIM_BUF(Register):
                            class DS_PH13_INDCS_TRIM_BUF(Field): pass
                        REG_TRIM3_DS_PH13_INDCS_TRIM_BUF:REG_TRIM3_DS_PH13_INDCS_TRIM_BUF
                        class REG_TRIM4_DS_PH4_INDCS_TRIM_FINE_ZC_S4(Register):
                            class DS_PH4_INDCS_TRIM_FINE_ZC_S4(Field): pass
                        REG_TRIM4_DS_PH4_INDCS_TRIM_FINE_ZC_S4:REG_TRIM4_DS_PH4_INDCS_TRIM_FINE_ZC_S4
                        class REG_TRIM4_DS_PH4_INDCS_TRIM_FINE_ZC_S1(Register):
                            class DS_PH4_INDCS_TRIM_FINE_ZC_S1(Field): pass
                        REG_TRIM4_DS_PH4_INDCS_TRIM_FINE_ZC_S1:REG_TRIM4_DS_PH4_INDCS_TRIM_FINE_ZC_S1
                        class REG_TRIM4_DS_PH4_INDCS_TRIM_ZC_S4(Register):
                            class DS_PH4_INDCS_TRIM_ZC_S4(Field): pass
                        REG_TRIM4_DS_PH4_INDCS_TRIM_ZC_S4:REG_TRIM4_DS_PH4_INDCS_TRIM_ZC_S4
                        class REG_TRIM4_DS_PH4_INDCS_TRIM_ZC_S1(Register):
                            class DS_PH4_INDCS_TRIM_ZC_S1(Field): pass
                        REG_TRIM4_DS_PH4_INDCS_TRIM_ZC_S1:REG_TRIM4_DS_PH4_INDCS_TRIM_ZC_S1
                        class REG_TRIM4_DS_PH4_INDCS_TRIM_OFFSET_S4(Register):
                            class DS_PH4_INDCS_TRIM_OFFSET_S4(Field): pass
                        REG_TRIM4_DS_PH4_INDCS_TRIM_OFFSET_S4:REG_TRIM4_DS_PH4_INDCS_TRIM_OFFSET_S4
                        class REG_TRIM4_DS_PH4_INDCS_TRIM_OFFSET_S1(Register):
                            class DS_PH4_INDCS_TRIM_OFFSET_S1(Field): pass
                        REG_TRIM4_DS_PH4_INDCS_TRIM_OFFSET_S1:REG_TRIM4_DS_PH4_INDCS_TRIM_OFFSET_S1
                        class REG_TRIM5_DS_PH3_INDCS_TRIM_GAIN_S4(Register):
                            class DS_PH3_INDCS_TRIM_GAIN_S4(Field): pass
                        REG_TRIM5_DS_PH3_INDCS_TRIM_GAIN_S4:REG_TRIM5_DS_PH3_INDCS_TRIM_GAIN_S4
                        class REG_TRIM5_DS_PH3_INDCS_TRIM_GAIN_S1(Register):
                            class DS_PH3_INDCS_TRIM_GAIN_S1(Field): pass
                        REG_TRIM5_DS_PH3_INDCS_TRIM_GAIN_S1:REG_TRIM5_DS_PH3_INDCS_TRIM_GAIN_S1
                        class REG_TRIM5_DS_PH3_INDCS_MIR_TRIM_S4(Register):
                            class DS_PH3_INDCS_MIR_TRIM_S4(Field): pass
                        REG_TRIM5_DS_PH3_INDCS_MIR_TRIM_S4:REG_TRIM5_DS_PH3_INDCS_MIR_TRIM_S4
                        class REG_TRIM5_DS_PH3_INDCS_MIR_TRIM_S1(Register):
                            class DS_PH3_INDCS_MIR_TRIM_S1(Field): pass
                        REG_TRIM5_DS_PH3_INDCS_MIR_TRIM_S1:REG_TRIM5_DS_PH3_INDCS_MIR_TRIM_S1
                        class REG_TRIM6_DS_PH3_INDCS_TRIM_FINE_ZC_S4(Register):
                            class DS_PH3_INDCS_TRIM_FINE_ZC_S4(Field): pass
                        REG_TRIM6_DS_PH3_INDCS_TRIM_FINE_ZC_S4:REG_TRIM6_DS_PH3_INDCS_TRIM_FINE_ZC_S4
                        class REG_TRIM6_DS_PH3_INDCS_TRIM_FINE_ZC_S1(Register):
                            class DS_PH3_INDCS_TRIM_FINE_ZC_S1(Field): pass
                        REG_TRIM6_DS_PH3_INDCS_TRIM_FINE_ZC_S1:REG_TRIM6_DS_PH3_INDCS_TRIM_FINE_ZC_S1
                        class REG_TRIM6_DS_PH3_INDCS_TRIM_ZC_S4(Register):
                            class DS_PH3_INDCS_TRIM_ZC_S4(Field): pass
                        REG_TRIM6_DS_PH3_INDCS_TRIM_ZC_S4:REG_TRIM6_DS_PH3_INDCS_TRIM_ZC_S4
                        class REG_TRIM6_DS_PH3_INDCS_TRIM_ZC_S1(Register):
                            class DS_PH3_INDCS_TRIM_ZC_S1(Field): pass
                        REG_TRIM6_DS_PH3_INDCS_TRIM_ZC_S1:REG_TRIM6_DS_PH3_INDCS_TRIM_ZC_S1
                        class REG_TRIM6_DS_PH3_INDCS_TRIM_OFFSET_S4(Register):
                            class DS_PH3_INDCS_TRIM_OFFSET_S4(Field): pass
                        REG_TRIM6_DS_PH3_INDCS_TRIM_OFFSET_S4:REG_TRIM6_DS_PH3_INDCS_TRIM_OFFSET_S4
                        class REG_TRIM6_DS_PH3_INDCS_TRIM_OFFSET_S1(Register):
                            class DS_PH3_INDCS_TRIM_OFFSET_S1(Field): pass
                        REG_TRIM6_DS_PH3_INDCS_TRIM_OFFSET_S1:REG_TRIM6_DS_PH3_INDCS_TRIM_OFFSET_S1
                        class REG_TRIM7_DS_PH2_INDCS_TRIM_GAIN_S4(Register):
                            class DS_PH2_INDCS_TRIM_GAIN_S4(Field): pass
                        REG_TRIM7_DS_PH2_INDCS_TRIM_GAIN_S4:REG_TRIM7_DS_PH2_INDCS_TRIM_GAIN_S4
                        class REG_TRIM7_DS_PH2_INDCS_TRIM_GAIN_S1(Register):
                            class DS_PH2_INDCS_TRIM_GAIN_S1(Field): pass
                        REG_TRIM7_DS_PH2_INDCS_TRIM_GAIN_S1:REG_TRIM7_DS_PH2_INDCS_TRIM_GAIN_S1
                        class REG_TRIM7_DS_PH2_INDCS_MIR_TRIM_S4(Register):
                            class DS_PH2_INDCS_MIR_TRIM_S4(Field): pass
                        REG_TRIM7_DS_PH2_INDCS_MIR_TRIM_S4:REG_TRIM7_DS_PH2_INDCS_MIR_TRIM_S4
                        class REG_TRIM7_DS_PH2_INDCS_MIR_TRIM_S1(Register):
                            class DS_PH2_INDCS_MIR_TRIM_S1(Field): pass
                        REG_TRIM7_DS_PH2_INDCS_MIR_TRIM_S1:REG_TRIM7_DS_PH2_INDCS_MIR_TRIM_S1
                        class REG_TRIM8_DS_PH2_INDCS_TRIM_FINE_ZC_S4(Register):
                            class DS_PH2_INDCS_TRIM_FINE_ZC_S4(Field): pass
                        REG_TRIM8_DS_PH2_INDCS_TRIM_FINE_ZC_S4:REG_TRIM8_DS_PH2_INDCS_TRIM_FINE_ZC_S4
                        class REG_TRIM8_DS_PH2_INDCS_TRIM_FINE_ZC_S1(Register):
                            class DS_PH2_INDCS_TRIM_FINE_ZC_S1(Field): pass
                        REG_TRIM8_DS_PH2_INDCS_TRIM_FINE_ZC_S1:REG_TRIM8_DS_PH2_INDCS_TRIM_FINE_ZC_S1
                        class REG_TRIM8_DS_PH2_INDCS_TRIM_ZC_S4(Register):
                            class DS_PH2_INDCS_TRIM_ZC_S4(Field): pass
                        REG_TRIM8_DS_PH2_INDCS_TRIM_ZC_S4:REG_TRIM8_DS_PH2_INDCS_TRIM_ZC_S4
                        class REG_TRIM8_DS_PH2_INDCS_TRIM_ZC_S1(Register):
                            class DS_PH2_INDCS_TRIM_ZC_S1(Field): pass
                        REG_TRIM8_DS_PH2_INDCS_TRIM_ZC_S1:REG_TRIM8_DS_PH2_INDCS_TRIM_ZC_S1
                        class REG_TRIM8_DS_PH2_INDCS_TRIM_OFFSET_S4(Register):
                            class DS_PH2_INDCS_TRIM_OFFSET_S4(Field): pass
                        REG_TRIM8_DS_PH2_INDCS_TRIM_OFFSET_S4:REG_TRIM8_DS_PH2_INDCS_TRIM_OFFSET_S4
                        class REG_TRIM8_DS_PH2_INDCS_TRIM_OFFSET_S1(Register):
                            class DS_PH2_INDCS_TRIM_OFFSET_S1(Field): pass
                        REG_TRIM8_DS_PH2_INDCS_TRIM_OFFSET_S1:REG_TRIM8_DS_PH2_INDCS_TRIM_OFFSET_S1
                        class REG_TRIM9_DS_PH1_INDCS_TRIM_GAIN_S4(Register):
                            class DS_PH1_INDCS_TRIM_GAIN_S4(Field): pass
                        REG_TRIM9_DS_PH1_INDCS_TRIM_GAIN_S4:REG_TRIM9_DS_PH1_INDCS_TRIM_GAIN_S4
                        class REG_TRIM9_DS_PH1_INDCS_TRIM_GAIN_S1(Register):
                            class DS_PH1_INDCS_TRIM_GAIN_S1(Field): pass
                        REG_TRIM9_DS_PH1_INDCS_TRIM_GAIN_S1:REG_TRIM9_DS_PH1_INDCS_TRIM_GAIN_S1
                        class REG_TRIM9_DS_PH1_INDCS_MIR_TRIM_S4(Register):
                            class DS_PH1_INDCS_MIR_TRIM_S4(Field): pass
                        REG_TRIM9_DS_PH1_INDCS_MIR_TRIM_S4:REG_TRIM9_DS_PH1_INDCS_MIR_TRIM_S4
                        class REG_TRIM9_DS_PH1_INDCS_MIR_TRIM_S1(Register):
                            class DS_PH1_INDCS_MIR_TRIM_S1(Field): pass
                        REG_TRIM9_DS_PH1_INDCS_MIR_TRIM_S1:REG_TRIM9_DS_PH1_INDCS_MIR_TRIM_S1
                        class REG_TRIM10_DS_PH1_INDCS_TRIM_FINE_ZC_S4(Register):
                            class DS_PH1_INDCS_TRIM_FINE_ZC_S4(Field): pass
                        REG_TRIM10_DS_PH1_INDCS_TRIM_FINE_ZC_S4:REG_TRIM10_DS_PH1_INDCS_TRIM_FINE_ZC_S4
                        class REG_TRIM10_DS_PH1_INDCS_TRIM_FINE_ZC_S1(Register):
                            class DS_PH1_INDCS_TRIM_FINE_ZC_S1(Field): pass
                        REG_TRIM10_DS_PH1_INDCS_TRIM_FINE_ZC_S1:REG_TRIM10_DS_PH1_INDCS_TRIM_FINE_ZC_S1
                        class REG_TRIM10_DS_PH1_INDCS_TRIM_ZC_S4(Register):
                            class DS_PH1_INDCS_TRIM_ZC_S4(Field): pass
                        REG_TRIM10_DS_PH1_INDCS_TRIM_ZC_S4:REG_TRIM10_DS_PH1_INDCS_TRIM_ZC_S4
                        class REG_TRIM10_DS_PH1_INDCS_TRIM_ZC_S1(Register):
                            class DS_PH1_INDCS_TRIM_ZC_S1(Field): pass
                        REG_TRIM10_DS_PH1_INDCS_TRIM_ZC_S1:REG_TRIM10_DS_PH1_INDCS_TRIM_ZC_S1
                        class REG_TRIM10_DS_PH1_INDCS_TRIM_OFFSET_S4(Register):
                            class DS_PH1_INDCS_TRIM_OFFSET_S4(Field): pass
                        REG_TRIM10_DS_PH1_INDCS_TRIM_OFFSET_S4:REG_TRIM10_DS_PH1_INDCS_TRIM_OFFSET_S4
                        class REG_TRIM10_DS_PH1_INDCS_TRIM_OFFSET_S1(Register):
                            class DS_PH1_INDCS_TRIM_OFFSET_S1(Field): pass
                        REG_TRIM10_DS_PH1_INDCS_TRIM_OFFSET_S1:REG_TRIM10_DS_PH1_INDCS_TRIM_OFFSET_S1
                        class REG_PWRUP0_RW_0(Register):
                            class DS_NEGCP_EN(Field): pass
                            class DS_IFET_EN(Field): pass
                            class DS_IFET_EN_DEL_DN(Field): pass
                            class DS_IFET_CP_EN(Field): pass
                            class DS_IFET_CP_PD_EN(Field): pass
                            class DS_IFET_CP_SS_EN(Field): pass
                            class DS_IFET_IBUS_EN(Field): pass
                            class DS_IFET_IBUS_EN_D(Field): pass
                        REG_PWRUP0_RW_0:REG_PWRUP0_RW_0
                        class REG_PWRUP0_RW_1(Register):
                            class DS_HVLDO_EN(Field): pass
                            class DS_AON_EN_DETACH(Field): pass
                            class DS_AON_EN_VDDSNS_OVP(Field): pass
                            class DS_AON_EN_VBUS_OVP(Field): pass
                            class DS_PH1_CFLY_SENSE_EN(Field): pass
                            class DS_PH1_CFLY_SENSE_EN_D(Field): pass
                            class DS_PH1_CFLY_EN_CHG(Field): pass
                            class DS_PH1_CFLY_EN_CHG_D(Field): pass
                        REG_PWRUP0_RW_1:REG_PWRUP0_RW_1
                        class REG_PWRUP0_RW_2(Register):
                            class DS_PH2_CFLY_SENSE_EN(Field): pass
                            class DS_PH2_CFLY_SENSE_EN_D(Field): pass
                            class DS_PH2_CFLY_EN_CHG(Field): pass
                            class DS_PH2_CFLY_EN_CHG_D(Field): pass
                            class DS_PH3_CFLY_SENSE_EN(Field): pass
                            class DS_PH3_CFLY_SENSE_EN_D(Field): pass
                            class DS_PH3_CFLY_EN_CHG(Field): pass
                            class DS_PH3_CFLY_EN_CHG_D(Field): pass
                        REG_PWRUP0_RW_2:REG_PWRUP0_RW_2
                        class REG_PWRUP0_RW_3(Register):
                            class DS_PH4_CFLY_SENSE_EN(Field): pass
                            class DS_PH4_CFLY_SENSE_EN_D(Field): pass
                            class DS_PH4_CFLY_EN_CHG(Field): pass
                            class DS_PH4_CFLY_EN_CHG_D(Field): pass
                            class DS_REF_PDNB(Field): pass
                            class DS_LDO1P8_PDNB(Field): pass
                            class DS_PH13_INDCS_EN_BUF(Field): pass
                            class DS_PH24_INDCS_EN_BUF(Field): pass
                        REG_PWRUP0_RW_3:REG_PWRUP0_RW_3
                        class REG_PWRUP1_RW_0(Register):
                            class DS_PH1_DRV_EN(Field): pass
                            class DS_PH1_DRV_EN_D(Field): pass
                            class DS_PH1_DRV_BST_EN(Field): pass
                            class DS_PH1_INDCS_PP_EN(Field): pass
                            class DS_PH1_INDCS_PP_EN_D(Field): pass
                            class DS_PH1_INDCS_EN_OCP(Field): pass
                            class DS_PH1_INDCS_EN_ZC(Field): pass
                            class DS_PH1_INDCS_FORCE_AZ(Field): pass
                        REG_PWRUP1_RW_0:REG_PWRUP1_RW_0
                        class REG_PWRUP1_RW_1(Register):
                            class DS_PH2_DRV_EN(Field): pass
                            class DS_PH2_DRV_EN_D(Field): pass
                            class DS_PH2_DRV_BST_EN(Field): pass
                            class DS_PH2_INDCS_PP_EN(Field): pass
                            class DS_PH2_INDCS_PP_EN_D(Field): pass
                            class DS_PH2_INDCS_EN_OCP(Field): pass
                            class DS_PH2_INDCS_EN_ZC(Field): pass
                            class DS_PH2_INDCS_FORCE_AZ(Field): pass
                        REG_PWRUP1_RW_1:REG_PWRUP1_RW_1
                        class REG_PWRUP1_RW_2(Register):
                            class DS_PH3_DRV_EN(Field): pass
                            class DS_PH3_DRV_EN_D(Field): pass
                            class DS_PH3_DRV_BST_EN(Field): pass
                            class DS_PH3_INDCS_PP_EN(Field): pass
                            class DS_PH3_INDCS_PP_EN_D(Field): pass
                            class DS_PH3_INDCS_EN_OCP(Field): pass
                            class DS_PH3_INDCS_EN_ZC(Field): pass
                            class DS_PH3_INDCS_FORCE_AZ(Field): pass
                        REG_PWRUP1_RW_2:REG_PWRUP1_RW_2
                        class REG_PWRUP1_RW_3(Register):
                            class DS_PH4_DRV_EN(Field): pass
                            class DS_PH4_DRV_EN_D(Field): pass
                            class DS_PH4_DRV_BST_EN(Field): pass
                            class DS_PH4_INDCS_PP_EN(Field): pass
                            class DS_PH4_INDCS_PP_EN_D(Field): pass
                            class DS_PH4_INDCS_EN_OCP(Field): pass
                            class DS_PH4_INDCS_EN_ZC(Field): pass
                            class DS_PH4_INDCS_FORCE_AZ(Field): pass
                        REG_PWRUP1_RW_3:REG_PWRUP1_RW_3
                        class REG_PWRUP2_RW_0(Register):
                            class DS_PH1_DRV_BST12_EN(Field): pass
                            class DS_PH1_DRV_BOOST_PRCHG_LSH_EN(Field): pass
                            class DS_PH2_DRV_BST12_EN(Field): pass
                            class DS_PH2_DRV_BOOST_PRCHG_LSH_EN(Field): pass
                            class DS_PH3_DRV_BST12_EN(Field): pass
                            class DS_PH3_DRV_BOOST_PRCHG_LSH_EN(Field): pass
                            class DS_PH4_DRV_BST12_EN(Field): pass
                            class DS_PH4_DRV_BOOST_PRCHG_LSH_EN(Field): pass
                        REG_PWRUP2_RW_0:REG_PWRUP2_RW_0
                        class REG_PWRUP2_RW_1(Register):
                            class DS_INDCS_BUCK_MODE(Field): pass
                            class DS_DRV_PRCHG_MODE_SEL(Field): pass
                            class TEMP_ENABLE(Field): pass
                            class DS_PH4_DRV_WPU_EN(Field): pass
                            class DS_PH3_DRV_WPU_EN(Field): pass
                            class DS_PH2_DRV_WPU_EN(Field): pass
                            class DS_PH1_DRV_WPU_EN(Field): pass
                            class DS_PH4_INDCS_REPLICA_AON(Field): pass
                        REG_PWRUP2_RW_1:REG_PWRUP2_RW_1
                        class REG_PWRUP2_RW_2(Register):
                            class DS_PH3_INDCS_REPLICA_AON(Field): pass
                            class DS_PH2_INDCS_REPLICA_AON(Field): pass
                            class DS_PH1_INDCS_REPLICA_AON(Field): pass
                            class DS_PH1_DRV_BST2_POR_BOOST(Field): pass
                            class DS_PH2_DRV_BST2_POR_BOOST(Field): pass
                            class DS_PH3_DRV_BST2_POR_BOOST(Field): pass
                            class DS_PH4_DRV_BST2_POR_BOOST(Field): pass
                            class DS_PH1_DRV_BST2_WPU(Field): pass
                        REG_PWRUP2_RW_2:REG_PWRUP2_RW_2
                        class REG_PWRUP2_RW_3(Register):
                            class DS_PH2_DRV_BST2_WPU(Field): pass
                            class DS_PH3_DRV_BST2_WPU(Field): pass
                            class DS_PH4_DRV_BST2_WPU(Field): pass
                            class DS_INDCS_CLR_OCP(Field): pass
                        REG_PWRUP2_RW_3:REG_PWRUP2_RW_3
                        class REG_AON_RW_0(Register):
                            class DS_AON_VDDSNS_OVP_SEL(Field): pass
                            class DS_AON_EN_VBUS_UVLO_B(Field): pass
                            class DS_AON_EN_VDDSNS_UVLO_B(Field): pass
                            class DS_AON_EN_VBUSVSVDD_B(Field): pass
                            class DS_AON_EN_VDDA_POR_B(Field): pass
                        REG_AON_RW_0:REG_AON_RW_0
                        class REG_AON_RW_1(Register):
                            class DS_AON_EN_VDDAON_POR_B(Field): pass
                            class DS_AON_EN_VDDD_POR_B(Field): pass
                            class DS_AON_EN_VDDHV_POR_B(Field): pass
                            class DS_AON_EN_VDDIO_POR_B(Field): pass
                            class DS_VMAINBG_HTOL(Field): pass
                            class DS_AON_VBUS_OVP_SEL(Field): pass
                            class DS_AON_OSC_DIS(Field): pass
                        REG_AON_RW_1:REG_AON_RW_1
                        class REG_AON_RW_2(Register):
                            class DS_AON_SPARE(Field): pass
                            class DS_AON_EN_DUMMYLOAD(Field): pass
                            class DS_AON_RSTB_MASK(Field): pass
                            class SPARE_R24(Field): pass
                        REG_AON_RW_2:REG_AON_RW_2
                        class REG_LDOS_RW_0(Register):
                            class DS_LDO1P2_HIZ(Field): pass
                            class DS_LDO1P2_CLAMP_PDNB(Field): pass
                            class DS_LDO1P2_DIRECTDRIVE(Field): pass
                            class DS_LDO1P2_START(Field): pass
                            class DS_LDO1P2_LPWRBIAS(Field): pass
                            class DS_LDO1P2_MODE2_RES(Field): pass
                            class DS_LDO1P2_CLK_MISSING(Field): pass
                            class DS_LDO1P2_VIS_ENA(Field): pass
                        REG_LDOS_RW_0:REG_LDOS_RW_0
                        class REG_LDOS_RW_1(Register):
                            class SPARE_R28(Field): pass
                            class DS_LDO1P2_BUF_CUR_2X(Field): pass
                            class DS_LDO1P2_AMP_2X_BIAS_B(Field): pass
                        REG_LDOS_RW_1:REG_LDOS_RW_1
                        class REG_LDOS_RW_2(Register):
                            class DS_LDO1P2_IBIAS_2X_B(Field): pass
                            class DS_LDO1P2_MODE2_SWITCH(Field): pass
                            class DS_LDO1P8_LOW_POW(Field): pass
                            class DS_LDO1P8_SHUNT(Field): pass
                            class DS_HVLDO_SPARE(Field): pass
                            class DS_HVLDO_DUMMYLOAD_EN(Field): pass
                        REG_LDOS_RW_2:REG_LDOS_RW_2
                        class REG_LDOS_RW_3(Register):
                            class DS_HVLDO_PROG(Field): pass
                            class DS_HVLDO_DIS_CL(Field): pass
                            class DS_HVLDO_IBIAS_PROG(Field): pass
                            class DS_HVLDO_PULLDOWN_DISCH_DIS(Field): pass
                        REG_LDOS_RW_3:REG_LDOS_RW_3
                        class REG_DCO_RW_0(Register):
                            class DS_DCO_POLE_SHIFT(Field): pass
                        REG_DCO_RW_0:REG_DCO_RW_0
                        class REG_DCO_RW_1(Register):
                            class DS_DCO_CTRL_LSB(Field): pass
                        REG_DCO_RW_1:REG_DCO_RW_1
                        class REG_DCO_RW_2(Register):
                            class DS_DCO_CTRL(Field): pass
                            class DS_DCO_KVCO_TUNE(Field): pass
                        REG_DCO_RW_2:REG_DCO_RW_2
                        class REG_DCO_RW_3(Register):
                            class DS_DCO_STEER_PDNB(Field): pass
                            class SPARE_R2C(Field): pass
                        REG_DCO_RW_3:REG_DCO_RW_3
                        class REG_CFLY_RW(Register):
                            class DS_CFLY_CURR(Field): pass
                            class DS_CFLY_CHG_SEL(Field): pass
                            class DS_CFLY_DISCHG_SEL(Field): pass
                            class DS_CFLY_LSH_PULSE_SEL(Field): pass
                        REG_CFLY_RW:REG_CFLY_RW
                        class REG_CFLY_RW_SPARE0(Register):
                            class SPARE_R30(Field): pass
                        REG_CFLY_RW_SPARE0:REG_CFLY_RW_SPARE0
                        class REG_CFLY_RW_SPARE1(Register):
                            class SPARE_R30(Field): pass
                        REG_CFLY_RW_SPARE1:REG_CFLY_RW_SPARE1
                        class REG_DRV_INDCS_RW_0(Register):
                            class DS_DRV_SLEW(Field): pass
                            class DS_DRV_LSH_PULSE_SEL(Field): pass
                            class DS_DRV_OC_MASK(Field): pass
                        REG_DRV_INDCS_RW_0:REG_DRV_INDCS_RW_0
                        class REG_DRV_INDCS_RW_1(Register):
                            class SPARE_R34(Field): pass
                        REG_DRV_INDCS_RW_1:REG_DRV_INDCS_RW_1
                        class REG_DRV_INDCS_RW_2(Register):
                            class DS_PH1_INDCS_PROG_OCP(Field): pass
                            class DS_PH2_INDCS_PROG_OCP(Field): pass
                        REG_DRV_INDCS_RW_2:REG_DRV_INDCS_RW_2
                        class REG_DRV_INDCS_RW_3(Register):
                            class DS_PH3_INDCS_PROG_OCP(Field): pass
                            class DS_PH4_INDCS_PROG_OCP(Field): pass
                            class DS_INDCS_PP_SEL(Field): pass
                        REG_DRV_INDCS_RW_3:REG_DRV_INDCS_RW_3
                        class REG_DRV_INDCS_RW_4(Register):
                            class DS_INDCS_SAMPLE_DELAY(Field): pass
                            class DS_INDCS_LSH_SEL_LOW_PULSE(Field): pass
                            class DS_INDCS_ZC_DEG(Field): pass
                            class IL_ZC_DET_SEL(Field): pass
                        REG_DRV_INDCS_RW_4:REG_DRV_INDCS_RW_4
                        class REG_DRV_RW_1(Register):
                            class DS_PH1_DRV_SPARE(Field): pass
                        REG_DRV_RW_1:REG_DRV_RW_1
                        class REG_DRV_RW_2(Register):
                            class DS_PH2_DRV_SPARE(Field): pass
                        REG_DRV_RW_2:REG_DRV_RW_2
                        class REG_DRV_RW_3(Register):
                            class DS_PH3_DRV_SPARE(Field): pass
                        REG_DRV_RW_3:REG_DRV_RW_3
                        class REG_DRV_RW_4(Register):
                            class DS_PH4_DRV_SPARE(Field): pass
                        REG_DRV_RW_4:REG_DRV_RW_4
                        class REG_VBG_THERMAL_RW_0(Register):
                            class DS_REF_LOWPOWERB(Field): pass
                            class DD_REF_CHP_LATCH(Field): pass
                            class DD_REF_CHP(Field): pass
                            class DS_REF_CHP_EN(Field): pass
                            class DS_REF_PROG_ISNS(Field): pass
                            class DS_REF_PROG_VCELL(Field): pass
                        REG_VBG_THERMAL_RW_0:REG_VBG_THERMAL_RW_0
                        class REG_VBG_THERMAL_RW_1(Register):
                            class DS_REF_PROG_VSNS(Field): pass
                            class SPARE_R3C(Field): pass
                        REG_VBG_THERMAL_RW_1:REG_VBG_THERMAL_RW_1
                        class REG_IFET_RW_0(Register):
                            class DS_NEGCP_SEL(Field): pass
                            class DS_NEGCP_PU_DIS(Field): pass
                            class DS_NEGCP_EN_SOFTSTART(Field): pass
                            class IFET_CP_NUM_TCK(Field): pass
                            class DS_IFET_SPARE(Field): pass
                        REG_IFET_RW_0:REG_IFET_RW_0
                        class REG_IFET_RW_1(Register):
                            class DS_IFET_CP_SS_MODE(Field): pass
                            class DS_IFET_CP_LS_PULSE_SET(Field): pass
                            class DS_IFET_CP_LEAKAGE_DIS(Field): pass
                            class DS_IFET_CP_DISOVER_SET(Field): pass
                            class DS_IFET_VDDAON_OFF_DIS(Field): pass
                            class DS_IFET_CP_SS_SET(Field): pass
                        REG_IFET_RW_1:REG_IFET_RW_1
                        class REG_IFET_RW_2(Register):
                            class SPARE0_R40(Field): pass
                            class DS_IFET_CP_SEL(Field): pass
                            class DS_IFET_IUP_SET(Field): pass
                        REG_IFET_RW_2:REG_IFET_RW_2
                        class REG_IFET_RW_3(Register):
                            class DS_IFET_IBUS_SEL(Field): pass
                        REG_IFET_RW_3:REG_IFET_RW_3
                        class REG_DRIVE_STRENGTH_RW_0(Register):
                            class SPI_SCK_DRV(Field): pass
                            class SPI_SS_DRV(Field): pass
                            class SPI_MOSI_DRV(Field): pass
                            class SPI_MISO_DRV(Field): pass
                        REG_DRIVE_STRENGTH_RW_0:REG_DRIVE_STRENGTH_RW_0
                        class REG_DRIVE_STRENGTH_RW_1(Register):
                            class SPI_READY_DRV(Field): pass
                            class DIG_CLK_IN_DRV(Field): pass
                            class VBUS_DET_DRV(Field): pass
                            class ERROR_DET_B_DRV(Field): pass
                        REG_DRIVE_STRENGTH_RW_1:REG_DRIVE_STRENGTH_RW_1
                        class REG_DRIVE_STRENGTH_RW_2(Register):
                            class IL_ZC_DET_DRV(Field): pass
                            class DTEST1_DRV(Field): pass
                            class DTEST2_DRV(Field): pass
                            class GPIO1_DRV(Field): pass
                        REG_DRIVE_STRENGTH_RW_2:REG_DRIVE_STRENGTH_RW_2
                        class REG_DRIVE_STRENGTH_RW_3(Register):
                            class GPIO2_DRV(Field): pass
                        REG_DRIVE_STRENGTH_RW_3:REG_DRIVE_STRENGTH_RW_3
                        class REG_PULL_UP_DOWN_EN_RW_0(Register):
                            class SPI_SCK_PD_EN(Field): pass
                            class SPI_SCK_PRES_EN(Field): pass
                            class SPI_SS_PD_EN(Field): pass
                            class SPI_SS_PRES_EN(Field): pass
                            class SPI_MOSI_PD_EN(Field): pass
                            class SPI_MOSI_PRES_EN(Field): pass
                            class SPI_MISO_PD_EN(Field): pass
                            class SPI_MISO_PRES_EN(Field): pass
                        REG_PULL_UP_DOWN_EN_RW_0:REG_PULL_UP_DOWN_EN_RW_0
                        class REG_PULL_UP_DOWN_EN_RW_1(Register):
                            class SPI_READY_PD_EN(Field): pass
                            class SPI_READY_PRES_EN(Field): pass
                            class DIG_CLK_IN_PD_EN(Field): pass
                            class DIG_CLK_IN_PRES_EN(Field): pass
                            class VBUS_DET_PD_EN(Field): pass
                            class VBUS_DET_PRES_EN(Field): pass
                            class ERROR_DET_B_PD_EN(Field): pass
                            class ERROR_DET_B_PRES_EN(Field): pass
                        REG_PULL_UP_DOWN_EN_RW_1:REG_PULL_UP_DOWN_EN_RW_1
                        class REG_PULL_UP_DOWN_EN_RW_2(Register):
                            class IL_ZC_DET_PD_EN(Field): pass
                            class IL_ZC_DET_PRES_EN(Field): pass
                            class DTEST1_PD_EN(Field): pass
                            class DTEST1_PRES_EN(Field): pass
                            class DTEST2_PD_EN(Field): pass
                            class DTEST2_PRES_EN(Field): pass
                            class GPIO1_PD_EN(Field): pass
                            class GPIO1_PRES_EN(Field): pass
                        REG_PULL_UP_DOWN_EN_RW_2:REG_PULL_UP_DOWN_EN_RW_2
                        class REG_PULL_UP_DOWN_EN_RW_3(Register):
                            class GPIO2_PD_EN(Field): pass
                            class GPIO2_PRES_EN(Field): pass
                        REG_PULL_UP_DOWN_EN_RW_3:REG_PULL_UP_DOWN_EN_RW_3
                        class REG_PULL_INPUT_OUTPUT_EN_RW_0(Register):
                            class SPI_SCK_IE(Field): pass
                            class SPI_SCK_OE(Field): pass
                            class SPI_SS_IE(Field): pass
                            class SPI_SS_OE(Field): pass
                            class SPI_MOSI_IE(Field): pass
                            class SPI_MOSI_OE(Field): pass
                            class SPI_MISO_IE(Field): pass
                            class SPI_MISO_OE(Field): pass
                        REG_PULL_INPUT_OUTPUT_EN_RW_0:REG_PULL_INPUT_OUTPUT_EN_RW_0
                        class REG_PULL_INPUT_OUTPUT_EN_RW_1(Register):
                            class SPI_READY_IE(Field): pass
                            class SPI_READY_OE(Field): pass
                            class DIG_CLK_IN_IE(Field): pass
                            class DIG_CLK_IN_OE(Field): pass
                            class VBUS_DET_IE(Field): pass
                            class VBUS_DET_OE(Field): pass
                            class ERROR_DET_B_IE(Field): pass
                            class ERROR_DET_B_OE(Field): pass
                        REG_PULL_INPUT_OUTPUT_EN_RW_1:REG_PULL_INPUT_OUTPUT_EN_RW_1
                        class REG_PULL_INPUT_OUTPUT_EN_RW_2(Register):
                            class IL_ZC_DET_IE(Field): pass
                            class IL_ZC_DET_OE(Field): pass
                            class DTEST1_IE(Field): pass
                            class DTEST1_OE(Field): pass
                            class DTEST2_IE(Field): pass
                            class DTEST2_OE(Field): pass
                            class GPIO1_IE(Field): pass
                            class GPIO1_OE(Field): pass
                        REG_PULL_INPUT_OUTPUT_EN_RW_2:REG_PULL_INPUT_OUTPUT_EN_RW_2
                        class REG_PULL_INPUT_OUTPUT_EN_RW_3(Register):
                            class GPIO2_IE(Field): pass
                            class GPIO2_OE(Field): pass
                        REG_PULL_INPUT_OUTPUT_EN_RW_3:REG_PULL_INPUT_OUTPUT_EN_RW_3
                IVM:IVM
            eeprom_dc:eeprom_dc
            eeprom_name:NoneType
            def example_board_func(self):pass
            excluded_classes:NoneType
            def get_board_barcode(self) -> str:pass
            get_class_fields:classmethod
            get_class_fields_table:classmethod
            has_dynamic_attrs:bool
            import_error_log:str
            def initialize(self, **kwargs):pass
            load_yaml:staticmethod
            log:TsLoggingAdapter
            path:str
            def program_board_info_to_eeprom(self, barcode_num, board_rev='A0', dc_type='CSP-SD1'):pass
            ref_name:str
            remove_fields:classmethod
            remove_tags:classmethod
            resources:dict
            def shutdown(self, **kwargs):pass
            temp_sensor:temp_sensor
            valid_config_files:dict
            valid_configs:list
        dut_dc:dut_dc
        class eeprom_mb(Eeprom):
            ID:Block
            ReadFieldsOptimizer:ReadFieldsOptimizer
            WriteFieldsOptimizer:WriteFieldsOptimizer
            active_controller:AudioHubController
            active_interface:I2cInterface
            address:int
            alias_base_name:NoneType
            alias_file:NoneType
            alias_path:NoneType
            aliases:dict
            class block_apis(TsoContainer):
                def add_resource(self, resource: Any, ref_name: str = None, force: bool = False):pass
                class_fields:list
                class_type:str
                config:dict
                config_file:NoneType
                config_files:NoneType
                create_path:staticmethod
                dump_class_fields:classmethod
                dump_class_fields_csv:classmethod
                def dump_resources(self):pass
                excluded_classes:NoneType
                def gen_pyi(self, *args, indent: int = 0, **kwargs) -> Tuple[str, Set[Tuple[str, str]]]:pass
                generate_stubs:bool
                get_class_fields:classmethod
                get_class_fields_table:classmethod
                has_dynamic_attrs:bool
                import_error_log:str
                def inner(self, *args, **kwargs):pass
                def items(self):pass
                def keys(self):pass
                load_yaml:staticmethod
                log:TsLoggingAdapter
                path:str
                def pop(self, key: str):pass
                def inner(self, *args, **kwargs):pass
                protect_resources:bool
                ref_name:str
                remove_fields:classmethod
                remove_tags:classmethod
                resource_type:CustomBlock
                resources:dict
                valid_config_files:dict
                valid_configs:list
                def values(self):pass
                # Resources (may be duplicates)
            block_apis:block_apis
            block_config:NoneType
            block_config_file:NoneType
            block_config_name:str
            block_config_path:str
            block_map:dict
            blocks:dict
            bus_num:int
            class_fields:list
            class_type:str
            config:dict
            config_file:NoneType
            config_files:NoneType
            def configure(self, config, *args, **kwargs):pass
            def construct_objects(self, *args, **kwargs):pass
            control_interfaces:dict
            create_path:staticmethod
            create_rtl_aliases:bool
            custom_blocks:dict
            default_iface:str
            diff_file_auto_download:bool
            diff_file_name:NoneType
            diff_file_path:NoneType
            diff_file_request_url:str
            dump_class_fields:classmethod
            dump_class_fields_csv:classmethod
            eeprom_type:str
            excluded_classes:NoneType
            field_regs_bitpos_dict:dict
            class flattened_fields(TsoContainer):
                def add_resource(self, resource: Any, ref_name: str = None, force: bool = False):pass
                class_fields:list
                class_type:str
                config:dict
                config_file:NoneType
                config_files:NoneType
                create_path:staticmethod
                dump_class_fields:classmethod
                dump_class_fields_csv:classmethod
                def dump_resources(self):pass
                excluded_classes:NoneType
                def gen_pyi(self, *args, indent: int = 0, **kwargs) -> Tuple[str, Set[Tuple[str, str]]]:pass
                generate_stubs:bool
                get_class_fields:classmethod
                get_class_fields_table:classmethod
                has_dynamic_attrs:bool
                import_error_log:str
                def inner(self, *args, **kwargs):pass
                def items(self):pass
                def keys(self):pass
                load_yaml:staticmethod
                log:TsLoggingAdapter
                path:str
                def pop(self, key: str):pass
                def inner(self, *args, **kwargs):pass
                protect_resources:bool
                ref_name:str
                remove_fields:classmethod
                remove_tags:classmethod
                resource_type:Field
                resources:dict
                valid_config_files:dict
                valid_configs:list
                def values(self):pass
                # Resources (may be duplicates)
            flattened_fields:flattened_fields
            full_clive_history:bool
            get_class_fields:classmethod
            get_class_fields_table:classmethod
            has_dynamic_attrs:bool
            host_controllers:dict
            i2c0_54:I2cInterface
            i2c_interface_eeprom:I2cInterface
            import_error_log:str
            def initialize(self, **kwargs):pass
            interfaces:dict
            internal_field_access:InternalAccessModes
            load_yaml:staticmethod
            loaded_register_map_path:str
            log:TsLoggingAdapter
            new_block_name:str
            new_reg_name:str
            old_block_name:str
            old_reg_name:str
            path:str
            rcs_group_map:NoneType
            ref_name:str
            reg_addr_map:dict
            reg_match_enable_flag:bool
            register_map_name:str
            register_map_path:str
            registers:dict
            remove_fields:classmethod
            remove_tags:classmethod
            repair_check:bool
            repair_record:list
            reset_time:float
            resources:dict
            revision_override:NoneType
            scs_device_name:NoneType
            server_present:bool
            def shutdown(self, **kwargs):pass
            transaction_log_path:NoneType
            transaction_logging_enable:bool
            valid_config_files:dict
            valid_configs:list
            verify_writes:bool
            class ID(Block):
                    class BARCODE_1(Register):
                        class NUM(Field): pass
                    BARCODE_1:BARCODE_1
                    class BARCODE_0(Register):
                        class NUM(Field): pass
                    BARCODE_0:BARCODE_0
                    class BOARD_3(Register):
                        class DATABASE_ID(Field): pass
                    BOARD_3:BOARD_3
                    class BOARD_2(Register):
                        class DATABASE_ID(Field): pass
                    BOARD_2:BOARD_2
                    class BOARD_1(Register):
                        class DATABASE_ID(Field): pass
                    BOARD_1:BOARD_1
                    class BOARD_0(Register):
                        class DATABASE_ID(Field): pass
                    BOARD_0:BOARD_0
                    class BOARD_REVISION_1(Register):
                        class LETTER(Field): pass
                    BOARD_REVISION_1:BOARD_REVISION_1
                    class BOARD_REVISION_0(Register):
                        class NUMBER(Field): pass
                    BOARD_REVISION_0:BOARD_REVISION_0
                    class EEPROM_MAP(Register):
                        class REVSION(Field): pass
                    EEPROM_MAP:EEPROM_MAP
            ID:ID
        eeprom_mb:eeprom_mb
        eeprom_name:NoneType
        excluded_classes:NoneType
        franco:franco
        def get_board_barcode(self) -> str:pass
        get_class_fields:classmethod
        get_class_fields_table:classmethod
        def get_dac_supply(self, dac_name=''):pass
        has_dynamic_attrs:bool
        import_error_log:str
        def initialize(self, **kwargs):pass
        load_yaml:staticmethod
        log:TsLoggingAdapter
        offset_dac_1:offset_dac_1
        offset_dac_2:offset_dac_2
        path:str
        def power_down_dut_rails(self):pass
        def power_down_rails(self):pass
        def program_board_info_to_eeprom(self, barcode_num, board_rev='A0'):pass
        ref_name:str
        remove_fields:classmethod
        remove_tags:classmethod
        resources:dict
        def set_dac_supply(self, dac_name='', dac_voltage=0.0):pass
        def shutdown(self, **kwargs):pass
        valid_config_files:dict
        valid_configs:list
    eeb:eeb
    def enable_mb_power(self):pass
    def enter_fpga_reset(self):pass
    def enter_franco_adc_reset(self):pass
    def enter_franco_tc_reset(self):pass
    def enter_ripley_reset(self):pass
    def enter_tiadcs_reset(self):pass
    error_count:int
    excluded_classes:list
    def exit_fpga_reset(self):pass
    def exit_franco_adc_reset(self):pass
    def exit_franco_tc_reset(self):pass
    def exit_ripley_reset(self):pass
    def exit_tiadcs_reset(self):pass
    get_class_fields:classmethod
    get_class_fields_table:classmethod
    def get_spi_bus_granted(self):pass
    has_dynamic_attrs:bool
    import_error_log:str
    def initialize(self, **kwargs):pass
    load_yaml:staticmethod
    log:TsLoggingAdapter
    ns_port:int
    path:str
    class pins(TestStationObject):
        def check_fields(self, config=None):pass
        class_fields:list
        class_type:str
        config:dict
        config_file:NoneType
        config_files:NoneType
        def configure(self, config, *args, construct=True, **kwargs):pass
        def construct_objects(self, *args, specific_class=None, **kwargs) -> Dict[str, object]:pass
        create_path:staticmethod
        dump_class_fields:classmethod
        dump_class_fields_csv:classmethod
        excluded_classes:NoneType
        def find_all(self, class_type: Type[TsoType], start_from_top: bool = False) -> List[Tuple[str, TsoType]]:pass
        def find_container(self, class_type):pass
        def find_resource(self, resource_name):pass
        def find_sub_config(self, top_level_config, resource_name=None, resource_class=None):pass
        def find_top_level(self):pass
        class fpga_reset(DigitalPin):
            active_source:typing.Union[cl_test_station.gpio.pin.Pin, NoneType]
            active_source_name:typing.Union[str, NoneType]
            all_source_names:typing.List[str]
            all_sources:typing.Dict[str, typing.Any]
            available_source_names:typing.List[str]
            available_sources:typing.Dict[str, typing.Any]
            belongs_to:list
            class_fields:list
            class_type:str
            config:dict
            config_file:NoneType
            config_files:NoneType
            connect_at_initialization:bool
            connect_function:NoneType
            create_path:staticmethod
            default_direction:PinDirection
            default_output:NoneType
            default_source:str
            direction:<enum 'PinDirection'>
            dump_class_fields:classmethod
            dump_class_fields_csv:classmethod
            excluded_classes:NoneType
            get_class_fields:classmethod
            get_class_fields_table:classmethod
            group_paths:typing.List[str]
            groups:typing.List[cl_test_station.multisource.tso_group.TSOGroup]
            has_dynamic_attrs:bool
            import_error_log:str
            input:<class 'int'>
            invalid_source_names:typing.List[str]
            kind:<enum 'PinKind'>
            load_yaml:staticmethod
            log:TsLoggingAdapter
            output:<class 'int'>
            path:str
            polarity:<enum 'PinPolarity'>
            def post_system_initialize(self, **kwargs):pass
            ref_name:str
            remove_fields:classmethod
            remove_tags:classmethod
            def resolve_source(self, path: str) -> Optional[Pin]:pass
            resources:dict
            sources:dict
            valid_config_files:dict
            valid_configs:list
            value:<class 'int'>
        fpga_reset:fpga_reset
        class franco_tc_reset(DigitalPin):
            active_source:typing.Union[cl_test_station.gpio.pin.Pin, NoneType]
            active_source_name:typing.Union[str, NoneType]
            all_source_names:typing.List[str]
            all_sources:typing.Dict[str, typing.Any]
            available_source_names:typing.List[str]
            available_sources:typing.Dict[str, typing.Any]
            belongs_to:list
            class_fields:list
            class_type:str
            config:dict
            config_file:NoneType
            config_files:NoneType
            connect_at_initialization:bool
            connect_function:NoneType
            create_path:staticmethod
            default_direction:PinDirection
            default_output:NoneType
            default_source:str
            direction:<enum 'PinDirection'>
            dump_class_fields:classmethod
            dump_class_fields_csv:classmethod
            excluded_classes:NoneType
            get_class_fields:classmethod
            get_class_fields_table:classmethod
            group_paths:typing.List[str]
            groups:typing.List[cl_test_station.multisource.tso_group.TSOGroup]
            has_dynamic_attrs:bool
            import_error_log:str
            input:<class 'int'>
            invalid_source_names:typing.List[str]
            kind:<enum 'PinKind'>
            load_yaml:staticmethod
            log:TsLoggingAdapter
            output:<class 'int'>
            path:str
            polarity:<enum 'PinPolarity'>
            def post_system_initialize(self, **kwargs):pass
            ref_name:str
            remove_fields:classmethod
            remove_tags:classmethod
            def resolve_source(self, path: str) -> Optional[Pin]:pass
            resources:dict
            sources:dict
            valid_config_files:dict
            valid_configs:list
            value:<class 'int'>
        franco_tc_reset:franco_tc_reset
        class franco_tc_spi_granted(DigitalPin):
            active_source:typing.Union[cl_test_station.gpio.pin.Pin, NoneType]
            active_source_name:typing.Union[str, NoneType]
            all_source_names:typing.List[str]
            all_sources:typing.Dict[str, typing.Any]
            available_source_names:typing.List[str]
            available_sources:typing.Dict[str, typing.Any]
            belongs_to:list
            class_fields:list
            class_type:str
            config:dict
            config_file:NoneType
            config_files:NoneType
            connect_at_initialization:bool
            connect_function:NoneType
            create_path:staticmethod
            default_direction:PinDirection
            default_output:NoneType
            default_source:str
            direction:<enum 'PinDirection'>
            dump_class_fields:classmethod
            dump_class_fields_csv:classmethod
            excluded_classes:NoneType
            get_class_fields:classmethod
            get_class_fields_table:classmethod
            group_paths:typing.List[str]
            groups:typing.List[cl_test_station.multisource.tso_group.TSOGroup]
            has_dynamic_attrs:bool
            import_error_log:str
            input:<class 'int'>
            invalid_source_names:typing.List[str]
            kind:<enum 'PinKind'>
            load_yaml:staticmethod
            log:TsLoggingAdapter
            output:<class 'int'>
            path:str
            polarity:<enum 'PinPolarity'>
            def post_system_initialize(self, **kwargs):pass
            ref_name:str
            remove_fields:classmethod
            remove_tags:classmethod
            def resolve_source(self, path: str) -> Optional[Pin]:pass
            resources:dict
            sources:dict
            valid_config_files:dict
            valid_configs:list
            value:<class 'int'>
        franco_tc_spi_granted:franco_tc_spi_granted
        class franco_tc_spi_ready(DigitalPin):
            active_source:typing.Union[cl_test_station.gpio.pin.Pin, NoneType]
            active_source_name:typing.Union[str, NoneType]
            all_source_names:typing.List[str]
            all_sources:typing.Dict[str, typing.Any]
            available_source_names:typing.List[str]
            available_sources:typing.Dict[str, typing.Any]
            belongs_to:list
            class_fields:list
            class_type:str
            config:dict
            config_file:NoneType
            config_files:NoneType
            connect_at_initialization:bool
            connect_function:NoneType
            create_path:staticmethod
            default_direction:PinDirection
            default_output:NoneType
            default_source:str
            direction:<enum 'PinDirection'>
            dump_class_fields:classmethod
            dump_class_fields_csv:classmethod
            excluded_classes:NoneType
            get_class_fields:classmethod
            get_class_fields_table:classmethod
            group_paths:typing.List[str]
            groups:typing.List[cl_test_station.multisource.tso_group.TSOGroup]
            has_dynamic_attrs:bool
            import_error_log:str
            input:<class 'int'>
            invalid_source_names:typing.List[str]
            kind:<enum 'PinKind'>
            load_yaml:staticmethod
            log:TsLoggingAdapter
            output:<class 'int'>
            path:str
            polarity:<enum 'PinPolarity'>
            def post_system_initialize(self, **kwargs):pass
            ref_name:str
            remove_fields:classmethod
            remove_tags:classmethod
            def resolve_source(self, path: str) -> Optional[Pin]:pass
            resources:dict
            sources:dict
            valid_config_files:dict
            valid_configs:list
            value:<class 'int'>
        franco_tc_spi_ready:franco_tc_spi_ready
        class franco_tc_spi_request(DigitalPin):
            active_source:typing.Union[cl_test_station.gpio.pin.Pin, NoneType]
            active_source_name:typing.Union[str, NoneType]
            all_source_names:typing.List[str]
            all_sources:typing.Dict[str, typing.Any]
            available_source_names:typing.List[str]
            available_sources:typing.Dict[str, typing.Any]
            belongs_to:list
            class_fields:list
            class_type:str
            config:dict
            config_file:NoneType
            config_files:NoneType
            connect_at_initialization:bool
            connect_function:NoneType
            create_path:staticmethod
            default_direction:PinDirection
            default_output:NoneType
            default_source:str
            direction:<enum 'PinDirection'>
            dump_class_fields:classmethod
            dump_class_fields_csv:classmethod
            excluded_classes:NoneType
            get_class_fields:classmethod
            get_class_fields_table:classmethod
            group_paths:typing.List[str]
            groups:typing.List[cl_test_station.multisource.tso_group.TSOGroup]
            has_dynamic_attrs:bool
            import_error_log:str
            input:<class 'int'>
            invalid_source_names:typing.List[str]
            kind:<enum 'PinKind'>
            load_yaml:staticmethod
            log:TsLoggingAdapter
            output:<class 'int'>
            path:str
            polarity:<enum 'PinPolarity'>
            def post_system_initialize(self, **kwargs):pass
            ref_name:str
            remove_fields:classmethod
            remove_tags:classmethod
            def resolve_source(self, path: str) -> Optional[Pin]:pass
            resources:dict
            sources:dict
            valid_config_files:dict
            valid_configs:list
            value:<class 'int'>
        franco_tc_spi_request:franco_tc_spi_request
        def gen_pyi(self, indent: int = 0, top: bool = False) -> Tuple[str, Set[Tuple[str, str]]]:pass
        def generate_id(self, level: int = 1, recursive: bool = True, dbg_dict: Dict = None) -> int:pass
        get_class_fields:classmethod
        get_class_fields_table:classmethod
        def get_invalid_configs(self):pass
        def get_mro_names(self):pass
        def get_required_packages(self):pass
        def get_ts_logger(self, logger, resources=None):pass
        def get_ts_path(self) -> str:pass
        has_dynamic_attrs:bool
        import_error_log:str
        def initialize(self, standalone=False, **kwargs):pass
        def load_classes_from_module(self, module):pass
        def load_classes_from_path(self, rootdir, prefix, base_cls=None):pass
        def load_paths(self):pass
        load_yaml:staticmethod
        log:TsLoggingAdapter
        class mb_pwr_en(DigitalPin):
            active_source:typing.Union[cl_test_station.gpio.pin.Pin, NoneType]
            active_source_name:typing.Union[str, NoneType]
            all_source_names:typing.List[str]
            all_sources:typing.Dict[str, typing.Any]
            available_source_names:typing.List[str]
            available_sources:typing.Dict[str, typing.Any]
            belongs_to:list
            class_fields:list
            class_type:str
            config:dict
            config_file:NoneType
            config_files:NoneType
            connect_at_initialization:bool
            connect_function:NoneType
            create_path:staticmethod
            default_direction:PinDirection
            default_output:NoneType
            default_source:str
            direction:<enum 'PinDirection'>
            dump_class_fields:classmethod
            dump_class_fields_csv:classmethod
            excluded_classes:NoneType
            get_class_fields:classmethod
            get_class_fields_table:classmethod
            group_paths:typing.List[str]
            groups:typing.List[cl_test_station.multisource.tso_group.TSOGroup]
            has_dynamic_attrs:bool
            import_error_log:str
            input:<class 'int'>
            invalid_source_names:typing.List[str]
            kind:<enum 'PinKind'>
            load_yaml:staticmethod
            log:TsLoggingAdapter
            output:<class 'int'>
            path:str
            polarity:<enum 'PinPolarity'>
            def post_system_initialize(self, **kwargs):pass
            ref_name:str
            remove_fields:classmethod
            remove_tags:classmethod
            def resolve_source(self, path: str) -> Optional[Pin]:pass
            resources:dict
            sources:dict
            valid_config_files:dict
            valid_configs:list
            value:<class 'int'>
        mb_pwr_en:mb_pwr_en
        path:str
        def post_construct_system(self):pass
        def post_system_initialize(self, **kwargs):pass
        ref_name:str
        remove_fields:classmethod
        remove_tags:classmethod
        def resolve_path(self, path: str, start_from_top: bool = True) -> Any:pass
        resources:dict
        class rip_bpic_en1(DigitalPin):
            active_source:typing.Union[cl_test_station.gpio.pin.Pin, NoneType]
            active_source_name:typing.Union[str, NoneType]
            all_source_names:typing.List[str]
            all_sources:typing.Dict[str, typing.Any]
            available_source_names:typing.List[str]
            available_sources:typing.Dict[str, typing.Any]
            belongs_to:list
            class_fields:list
            class_type:str
            config:dict
            config_file:NoneType
            config_files:NoneType
            connect_at_initialization:bool
            connect_function:NoneType
            create_path:staticmethod
            default_direction:PinDirection
            default_output:NoneType
            default_source:str
            direction:<enum 'PinDirection'>
            dump_class_fields:classmethod
            dump_class_fields_csv:classmethod
            excluded_classes:NoneType
            get_class_fields:classmethod
            get_class_fields_table:classmethod
            group_paths:typing.List[str]
            groups:typing.List[cl_test_station.multisource.tso_group.TSOGroup]
            has_dynamic_attrs:bool
            import_error_log:str
            input:<class 'int'>
            invalid_source_names:typing.List[str]
            kind:<enum 'PinKind'>
            load_yaml:staticmethod
            log:TsLoggingAdapter
            output:<class 'int'>
            path:str
            polarity:<enum 'PinPolarity'>
            def post_system_initialize(self, **kwargs):pass
            ref_name:str
            remove_fields:classmethod
            remove_tags:classmethod
            def resolve_source(self, path: str) -> Optional[Pin]:pass
            resources:dict
            sources:dict
            valid_config_files:dict
            valid_configs:list
            value:<class 'int'>
        rip_bpic_en1:rip_bpic_en1
        class rip_bpic_en2(DigitalPin):
            active_source:typing.Union[cl_test_station.gpio.pin.Pin, NoneType]
            active_source_name:typing.Union[str, NoneType]
            all_source_names:typing.List[str]
            all_sources:typing.Dict[str, typing.Any]
            available_source_names:typing.List[str]
            available_sources:typing.Dict[str, typing.Any]
            belongs_to:list
            class_fields:list
            class_type:str
            config:dict
            config_file:NoneType
            config_files:NoneType
            connect_at_initialization:bool
            connect_function:NoneType
            create_path:staticmethod
            default_direction:PinDirection
            default_output:NoneType
            default_source:str
            direction:<enum 'PinDirection'>
            dump_class_fields:classmethod
            dump_class_fields_csv:classmethod
            excluded_classes:NoneType
            get_class_fields:classmethod
            get_class_fields_table:classmethod
            group_paths:typing.List[str]
            groups:typing.List[cl_test_station.multisource.tso_group.TSOGroup]
            has_dynamic_attrs:bool
            import_error_log:str
            input:<class 'int'>
            invalid_source_names:typing.List[str]
            kind:<enum 'PinKind'>
            load_yaml:staticmethod
            log:TsLoggingAdapter
            output:<class 'int'>
            path:str
            polarity:<enum 'PinPolarity'>
            def post_system_initialize(self, **kwargs):pass
            ref_name:str
            remove_fields:classmethod
            remove_tags:classmethod
            def resolve_source(self, path: str) -> Optional[Pin]:pass
            resources:dict
            sources:dict
            valid_config_files:dict
            valid_configs:list
            value:<class 'int'>
        rip_bpic_en2:rip_bpic_en2
        class ripley_reset(DigitalPin):
            active_source:typing.Union[cl_test_station.gpio.pin.Pin, NoneType]
            active_source_name:typing.Union[str, NoneType]
            all_source_names:typing.List[str]
            all_sources:typing.Dict[str, typing.Any]
            available_source_names:typing.List[str]
            available_sources:typing.Dict[str, typing.Any]
            belongs_to:list
            class_fields:list
            class_type:str
            config:dict
            config_file:NoneType
            config_files:NoneType
            connect_at_initialization:bool
            connect_function:NoneType
            create_path:staticmethod
            default_direction:PinDirection
            default_output:NoneType
            default_source:str
            direction:<enum 'PinDirection'>
            dump_class_fields:classmethod
            dump_class_fields_csv:classmethod
            excluded_classes:NoneType
            get_class_fields:classmethod
            get_class_fields_table:classmethod
            group_paths:typing.List[str]
            groups:typing.List[cl_test_station.multisource.tso_group.TSOGroup]
            has_dynamic_attrs:bool
            import_error_log:str
            input:<class 'int'>
            invalid_source_names:typing.List[str]
            kind:<enum 'PinKind'>
            load_yaml:staticmethod
            log:TsLoggingAdapter
            output:<class 'int'>
            path:str
            polarity:<enum 'PinPolarity'>
            def post_system_initialize(self, **kwargs):pass
            ref_name:str
            remove_fields:classmethod
            remove_tags:classmethod
            def resolve_source(self, path: str) -> Optional[Pin]:pass
            resources:dict
            sources:dict
            valid_config_files:dict
            valid_configs:list
            value:<class 'int'>
        ripley_reset:ripley_reset
        def serialize(self, top: bool = False, exclude_classes: List[str] = None, file_path: str = None,
              compress: bool = True) -> Dict[str, Any]:pass
        def shutdown(self, standalone=False, **kwargs):pass
        class system_adcs_reset(DigitalPin):
            active_source:typing.Union[cl_test_station.gpio.pin.Pin, NoneType]
            active_source_name:typing.Union[str, NoneType]
            all_source_names:typing.List[str]
            all_sources:typing.Dict[str, typing.Any]
            available_source_names:typing.List[str]
            available_sources:typing.Dict[str, typing.Any]
            belongs_to:list
            class_fields:list
            class_type:str
            config:dict
            config_file:NoneType
            config_files:NoneType
            connect_at_initialization:bool
            connect_function:NoneType
            create_path:staticmethod
            default_direction:PinDirection
            default_output:NoneType
            default_source:str
            direction:<enum 'PinDirection'>
            dump_class_fields:classmethod
            dump_class_fields_csv:classmethod
            excluded_classes:NoneType
            get_class_fields:classmethod
            get_class_fields_table:classmethod
            group_paths:typing.List[str]
            groups:typing.List[cl_test_station.multisource.tso_group.TSOGroup]
            has_dynamic_attrs:bool
            import_error_log:str
            input:<class 'int'>
            invalid_source_names:typing.List[str]
            kind:<enum 'PinKind'>
            load_yaml:staticmethod
            log:TsLoggingAdapter
            output:<class 'int'>
            path:str
            polarity:<enum 'PinPolarity'>
            def post_system_initialize(self, **kwargs):pass
            ref_name:str
            remove_fields:classmethod
            remove_tags:classmethod
            def resolve_source(self, path: str) -> Optional[Pin]:pass
            resources:dict
            sources:dict
            valid_config_files:dict
            valid_configs:list
            value:<class 'int'>
        system_adcs_reset:system_adcs_reset
        def update_pyi_file(self, pyi_content):pass
        valid_config_files:dict
        valid_configs:list
    pins:pins
    def prepare_host_controllers(self, **kwargs):pass
    ref_name:str
    remove_fields:classmethod
    remove_tags:classmethod
    resources:dict
    def sample_ts_function(self, param1, param2):pass
    def set_spi_bus_request(self, request1_release0 = 1):pass
    def shutdown(self, *args, **kwargs):pass
    station_id:None
    tcorner_instrument_name:str
    test_station_class_type:str
    uses_ts_server:<class 'bool'>
    valid_config_files:dict
    valid_configs:list
    warning_count:int
