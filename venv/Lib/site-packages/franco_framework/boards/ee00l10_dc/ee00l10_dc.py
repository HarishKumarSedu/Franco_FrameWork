from cl_test_station.board.board import Board


class EE00L10Dc(Board):
    """Template Board class"""

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)

    def initialize(self, **kwargs):
        super().initialize(**kwargs)

    def shutdown(self, **kwargs):
        super().shutdown(**kwargs)

    def example_board_func(self):
        """Example Board method definition"""
        # do something
        pass

    def program_board_info_to_eeprom(self, barcode_num, board_rev='A0', dc_type='CSP-SD1'):
        """
        write the barcode_num and baord_rev to eeprom fields
        :param barcode_num: board number read from the barcode
        :type barcode_num: int
        :param board_rev: board rev read from the barcode
        :type board_rev: str
        :param dc_type: baord type read from the barcode
        :type dc_type: str, valid optios: 'CSPSKT', 'CSP-SD1', 'CSP-SD2', 'CSP-SD3', 'CSP-SD4'
        :return:
        :rtype:
        """
        self.eeprom_dc.GLOBAL.MAP_REV.EEPROM_MAP_REV.reset()
        self.eeprom_dc.GLOBAL.BOARD_ID_0.BOARD_ID.value = barcode_num
        self.eeprom_dc.GLOBAL.REVISION_LETTER.REVISION_LETTER.value = int(board_rev[0], 16)
        self.eeprom_dc.GLOBAL.REVISION_NUMBER.REVISION_NUMBER.value = int(board_rev[1], 16)
        dc_types={'CSPSKT':0, 'CSP-SD1':1, 'CSP-SD2':2, 'CSP-SD3':3, 'CSP-SD4':4}
        if dc_type in dc_types.keys():
            dc_type_num = dc_types[dc_type]
        else:
            raise ValueError(f"Invalid input dc_type, valid options are: {dc_types.keys()}")
        self.eeprom_dc.GLOBAL.REVISION_LETTER.CARD_TYPE.value = dc_type_num

    def get_board_barcode(self) -> str:
        """
        note: override method for franco, no database involved, getting info from eeprom
        :return barcode:
        :rtype barcode: str
        """

        barcode_num = self.eeprom_dc.GLOBAL.BOARD_ID_0.BOARD_ID.value
        board_rev_number = self.eeprom_dc.GLOBAL.REVISION_NUMBER.REVISION_NUMBER.value
        board_rev_letter = self.eeprom_dc.GLOBAL.REVISION_LETTER.REVISION_LETTER.value
        dc_type_num = self.eeprom_dc.GLOBAL.REVISION_LETTER.CARD_TYPE.value
        dc_types={'CSPSKT':0, 'CSP-SD1':1, 'CSP-SD2':2, 'CSP-SD3':3, 'CSP-SD4':4}
        if board_rev_number == 0xFF:
            print(f'EEPROM has not been programmed. Please program it by call methd program_board_info_to_eeprom( barcode_num, board_rev="A0")')
            barcode = None
        else:
            board_rev = hex(board_rev_letter)[2:].upper()+hex(board_rev_number)[2:]
            barcode_num_str = str(barcode_num)
            if len(barcode_num_str)==1:
                barcode_num_str = '00' + barcode_num_str
            elif len(barcode_num_str)==2:
                barcode_num_str = '0' + barcode_num_str
            else:
                pass
            dc_type_str = next((k for k in dc_types if dc_types[k] == dc_type_num), None)
            barcode = 'EE00L10-DC-' + dc_type_str + '-' + board_rev +'-' + barcode_num_str
        return barcode
