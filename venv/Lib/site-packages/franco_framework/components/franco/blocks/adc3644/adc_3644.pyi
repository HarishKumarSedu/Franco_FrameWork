from franco_framework.components.franco.franco import Franco
from cl_test_station.utilities.ts_logging import TsLoggingAdapter
from cl_test_station.register_map.register import Register
from cl_test_station.register_map.field import Field
from cl_test_station.register_map.custom_block import CustomBlock
class Adc3644(CustomBlock):
    alias_base_name:str
    alias_file=None
    alias_path:str
    aliases:dict
    base_addr=None
    component:Franco
    container:Franco
    encoded_vec=None
    log:TsLoggingAdapter
    max_addr:int
    min_addr:int
    name:str
    registers:dict
    spanned_fields:dict
    def custom_func(self, arg:int):pass
    def enter_reset(self):pass
    def exit_reset(self):pass
    def reset(self):pass
    def startup_config(self):pass
    class REG_00(Register):
        class RESET(Field): pass
    REG_00:REG_00
    class REG_07(Register):
        class OP_IF_SEL(Field): pass
        class OP_IF_EN(Field): pass
        class OP_IF_MAPPER(Field): pass
    REG_07:REG_07
    class REG_08(Register):
        class PDN_GLOBAL(Field): pass
        class PDN_B(Field): pass
        class PDN_A(Field): pass
        class PDN_REFAMP(Field): pass
        class PDN_CLKBUF(Field): pass
    REG_08:REG_08
    class REG_0A(Register):
        class CMOS_OB_DIS_A(Field): pass
    REG_0A:REG_0A
    class REG_0B(Register):
        class CMOS_OB_DIS_B(Field): pass
    REG_0B:REG_0B
    class REG_0C(Register):
        class CMOS_OB_DIS_C(Field): pass
    REG_0C:REG_0C
    class REG_0D_PDN_GLOBAL_MASK(Register):
        class MASK_BG_DIS(Field): pass
        class MASK_REFAMP(Field): pass
        class MASK_CLKBUF(Field): pass
    REG_0D_PDN_GLOBAL_MASK:REG_0D_PDN_GLOBAL_MASK
    class REG_0E(Register):
        class SE_CLK_EN(Field): pass
        class REF_SEL(Field): pass
        class REF_CTL(Field): pass
        class SPI_SYNC_EN(Field): pass
        class SPI_SYNC(Field): pass
        class SYNC_PIN_EN(Field): pass
    REG_0E:REG_0E
    class REG_11(Register):
        class SE_B(Field): pass
        class SE_A(Field): pass
    REG_11:REG_11
    class REG_13(Register):
        class E_FUSE_LD(Field): pass
    REG_13:REG_13
    class REG_14(Register):
        class CUSTOM_PAT_7_0(Field): pass
    REG_14:REG_14
    class REG_15(Register):
        class CUSTOM_PAT_15_8(Field): pass
    REG_15:REG_15
    class REG_16(Register):
        class CUSTOM_PAT_17_16(Field): pass
        class TEST_PAT_A(Field): pass
        class TEST_PAT_B(Field): pass
    REG_16:REG_16
    class REG_18(Register):
        class DCLKIN_EN(Field): pass
    REG_18:REG_18
    class REG_19(Register):
        class TOG_FCLK(Field): pass
        class FCLK_EN(Field): pass
        class FCLK_DIV(Field): pass
        class FCLK_SRC(Field): pass
    REG_19:REG_19
    class REG_1B(Register):
        class BIT_MAPPER_RES(Field): pass
        class OUT_20B_EN(Field): pass
        class MAPPER_EN(Field): pass
    REG_1B:REG_1B
    class REG_1E(Register):
        class CMOS_DCLK_DEL(Field): pass
    REG_1E:REG_1E
    class REG_1F(Register):
        class TWO_X_DCLK(Field): pass
        class DCLK_OB_EN(Field): pass
        class DCLKIN_EN_DUP(Field): pass
        class LOW_DR_EN(Field): pass
    REG_1F:REG_1F
    class REG_20(Register):
        class FCLK_PAT_7_0(Field): pass
    REG_20:REG_20
    class REG_21(Register):
        class FCLK_PAT_15_8(Field): pass
    REG_21:REG_21
    class REG_22(Register):
        class FCLK_PAT_19_16(Field): pass
    REG_22:REG_22
    class REG_24(Register):
        class DDC_EN(Field): pass
        class DIG_BYP(Field): pass
        class DDC_MUX(Field): pass
        class CH_AVG_EN(Field): pass
    REG_24:REG_24
    class REG_25(Register):
        class MIX_PHASE(Field): pass
        class REAL_OUT(Field): pass
        class DECIMATION(Field): pass
        class DDC_MUX_EN(Field): pass
    REG_25:REG_25
    class REG_26(Register):
        class FS_DIV_4_MIX_B(Field): pass
        class MIX_RES_B(Field): pass
        class MIX_GAIN_B(Field): pass
        class FS_DIV_4_MIX_A(Field): pass
        class MIX_RES_A(Field): pass
        class MIX_GAIN_A(Field): pass
    REG_26:REG_26
    class REG_27(Register):
        class FS_DIV_4_MIX_PH_A(Field): pass
        class Q_DEL_A(Field): pass
        class OP_ORDER_A(Field): pass
    REG_27:REG_27
    class REG_2A(Register):
        class NCO_A_7_0(Field): pass
    REG_2A:REG_2A
    class REG_2B(Register):
        class NCO_A_15_8(Field): pass
    REG_2B:REG_2B
    class REG_2C(Register):
        class NCO_A_23_16(Field): pass
    REG_2C:REG_2C
    class REG_2D(Register):
        class NCO_A_31_24(Field): pass
    REG_2D:REG_2D
    class REG_2E(Register):
        class FS_DIV_4_MIX_PH_B(Field): pass
        class Q_DEL_B(Field): pass
        class OP_ORDER_B(Field): pass
    REG_2E:REG_2E
    class REG_31(Register):
        class NCO_B_7_0(Field): pass
    REG_31:REG_31
    class REG_32(Register):
        class NCO_B_15_8(Field): pass
    REG_32:REG_32
    class REG_33(Register):
        class NCO_B_23_16(Field): pass
    REG_33:REG_33
    class REG_34(Register):
        class NCO_B_31_24(Field): pass
    REG_34:REG_34
    class REG_8F(Register):
        class FORMAT_A(Field): pass
    REG_8F:REG_8F
    class REG_92(Register):
        class FORMAT_B(Field): pass
    REG_92:REG_92
