from builtins import NoneType
from builtins import bool
from builtins import classmethod
from builtins import dict
from builtins import float
from builtins import int
from builtins import list
from builtins import staticmethod
from builtins import str
from cl_test_station.components.component.component import Component
from cl_test_station.components.component.component import ReadFieldsOptimizer
from cl_test_station.components.component.component import WriteFieldsOptimizer
from cl_test_station.host_controllers.audiohub_controller.audiohub_controller import AudioHubController
from cl_test_station.interfaces.i2c_interface import I2cInterface
from cl_test_station.register_map.block import Block
from cl_test_station.register_map.custom_block import CustomBlock
from cl_test_station.register_map.field import Field
from cl_test_station.register_map.field import InternalAccessModes
from cl_test_station.register_map.register import Register
from cl_test_station.test_station_object import TestStationObject
from cl_test_station.utilities.ts_logging import TsLoggingAdapter
from cl_test_station.utilities.tso_container import TsoContainer
from typing import _SpecialForm
import cl_test_station
from typing import *
class Tmp117(Component):
    GLOBAL:Block
    ReadFieldsOptimizer:ReadFieldsOptimizer
    WriteFieldsOptimizer:WriteFieldsOptimizer
    active_controller:AudioHubController
    active_interface:I2cInterface
    alias_base_name:NoneType
    alias_file:NoneType
    alias_path:NoneType
    aliases:dict
    class block_apis(TsoContainer):
        def add_resource(self, resource: Any, ref_name: str = None, force: bool = False):pass
        class_fields:list
        class_type:str
        config:dict
        config_file:NoneType
        config_files:NoneType
        create_path:staticmethod
        dump_class_fields:classmethod
        dump_class_fields_csv:classmethod
        def dump_resources(self):pass
        excluded_classes:NoneType
        def gen_pyi(self, *args, indent: int = 0, **kwargs) -> Tuple[str, Set[Tuple[str, str]]]:pass
        generate_stubs:bool
        get_class_fields:classmethod
        get_class_fields_table:classmethod
        has_dynamic_attrs:bool
        import_error_log:str
        def inner(self, *args, **kwargs):pass
        def items(self):pass
        def keys(self):pass
        load_yaml:staticmethod
        log:TsLoggingAdapter
        path:str
        def pop(self, key: str):pass
        def inner(self, *args, **kwargs):pass
        protect_resources:bool
        ref_name:str
        remove_fields:classmethod
        remove_tags:classmethod
        resource_type:CustomBlock
        resources:dict
        valid_config_files:dict
        valid_configs:list
        def values(self):pass
        # Resources (may be duplicates)
    block_apis:block_apis
    block_config:NoneType
    block_config_file:NoneType
    block_config_name:str
    block_config_path:str
    block_map:dict
    blocks:dict
    class_fields:list
    class_type:str
    config:dict
    config_file:NoneType
    config_files:NoneType
    control_interfaces:dict
    create_path:staticmethod
    create_rtl_aliases:bool
    custom_blocks:dict
    default_iface:str
    diff_file_auto_download:bool
    diff_file_name:NoneType
    diff_file_path:NoneType
    diff_file_request_url:str
    dump_class_fields:classmethod
    dump_class_fields_csv:classmethod
    excluded_classes:NoneType
    field_regs_bitpos_dict:dict
    class flattened_fields(TsoContainer):
        def add_resource(self, resource: Any, ref_name: str = None, force: bool = False):pass
        class_fields:list
        class_type:str
        config:dict
        config_file:NoneType
        config_files:NoneType
        create_path:staticmethod
        dump_class_fields:classmethod
        dump_class_fields_csv:classmethod
        def dump_resources(self):pass
        excluded_classes:NoneType
        def gen_pyi(self, *args, indent: int = 0, **kwargs) -> Tuple[str, Set[Tuple[str, str]]]:pass
        generate_stubs:bool
        get_class_fields:classmethod
        get_class_fields_table:classmethod
        has_dynamic_attrs:bool
        import_error_log:str
        def inner(self, *args, **kwargs):pass
        def items(self):pass
        def keys(self):pass
        load_yaml:staticmethod
        log:TsLoggingAdapter
        path:str
        def pop(self, key: str):pass
        def inner(self, *args, **kwargs):pass
        protect_resources:bool
        ref_name:str
        remove_fields:classmethod
        remove_tags:classmethod
        resource_type:Field
        resources:dict
        valid_config_files:dict
        valid_configs:list
        def values(self):pass
        # Resources (may be duplicates)
    flattened_fields:flattened_fields
    full_clive_history:bool
    get_class_fields:classmethod
    get_class_fields_table:classmethod
    has_dynamic_attrs:bool
    host_controllers:dict
    i2c0_4a:I2cInterface
    import_error_log:str
    interfaces:dict
    internal_field_access:InternalAccessModes
    load_yaml:staticmethod
    loaded_register_map_path:str
    log:TsLoggingAdapter
    new_block_name:str
    new_reg_name:str
    old_block_name:str
    old_reg_name:str
    path:str
    rcs_group_map:NoneType
    def read_temp_degC(self):pass
    ref_name:str
    reg_addr_map:dict
    reg_match_enable_flag:bool
    register_map_name:str
    register_map_path:str
    registers:dict
    regmap_auto_select:bool
    remove_fields:classmethod
    remove_tags:classmethod
    repair_check:bool
    repair_record:list
    reset_time:float
    resources:dict
    revision_override:NoneType
    scs_device_name:NoneType
    server_present:bool
    transaction_log_path:NoneType
    transaction_logging_enable:bool
    valid_config_files:dict
    valid_configs:list
    verify_writes:bool
    class GLOBAL(Block):
            class TEMP(Register):
                class TEMP(Field): pass
            TEMP:TEMP
            class CONFIG(Register):
                class CONFIG(Field): pass
            CONFIG:CONFIG
            class THIGH(Register):
                class LIMIT(Field): pass
            THIGH:THIGH
            class TLOW(Register):
                class LIMIT(Field): pass
            TLOW:TLOW
            class EEPROM(Register):
                class UNLOCK(Field): pass
            EEPROM:EEPROM
            class EEPROM1(Register):
                class EEPROM_REG(Field): pass
            EEPROM1:EEPROM1
            class EEPROM2(Register):
                class EEPROM_REG(Field): pass
            EEPROM2:EEPROM2
            class TEMP_OFFSET(Register):
                class OFFSET_REG(Field): pass
            TEMP_OFFSET:TEMP_OFFSET
            class EEPROM3(Register):
                class EEPROM_REG(Field): pass
            EEPROM3:EEPROM3
            class DEVID(Register):
                class DEVID(Field): pass
            DEVID:DEVID
    GLOBAL:GLOBAL
