Metadata-Version: 2.1
Name: unified-modules-core
Version: 2.3.0
Summary: Unified Modules core framework
Home-page: https://docs.cirrus.com/display/ST/Unified+Testing
License: UNKNOWN
Platform: osx
Platform: win32
Requires-Python: >=3.7.5
Requires-Dist: future
Requires-Dist: junit-xml
Requires-Dist: lxml
Requires-Dist: qacomplete

Unified Modules core
====================

Next generation Cirrus SQA team's set of test modules.


Description
-----------

The Unified Modules package is a set of Python modules designed for ease the
writing of tests. It is developed by the Cirrus SQA team and focuses on code
re-usability.

This sub-package contains Unified Modules' core, distributed as the
``unified-modules-core`` package, including:

- The core test library: the ``test_support`` package.

- The resource server daemon: ``testheadserver.py``.

- A test runner program: ``test_runner.py``.


Installation
------------

Unified Modules' core has ``setuptools`` support. The current, proper, way of
installing it is to generate a ``wheel`` package from its sources and install
that package using ``pip``.

To generate the ``wheel`` package, run from the ``core`` source directory:

.. code-block:: sh

    $ python setup.py bdist_wheel

After execution, package should have been generated in the ``dist`` subfolder.
The generated package can then be installed running:

.. code-block:: sh

    $ python -m pip install --user <unified-modules-core-package>.whl


Execution
---------

Unified Modules' core defines three end-points: one for the test runner, one for
the test-head server and one for the test-head client. Theses modules can be
called from anywhere by running:

.. code-block:: sh

    $ python -m unified_modules.test_runner <arguments>
    $ python -m unified_modules.test_support.testheadserver <arguments>
    $ python -m unified_modules.test_support.testheadclient <arguments>

Use the ``--help``as argument switch to get these modules to print their command
line inteface usage instructions.


Documentation
-------------

Unified Modules' core documentation can be generated from sources by running:

.. code-block:: sh

    $ python setup.py build_sphinx

After execution, HTML content should have been generated in the
``doc/_build/html`` subfolder.


Development
-----------

Developers can install Unified Modules' core package in a special mode called
editable mode. In that mode, sources can be modified in place without having to
generate and reinstall the ``wheel`` package for every change made to the code.

To install the package in editable mode, run, from the ``core`` directory:

.. code-block:: sh

    $ python -m pip install --user --editable .


Testing
-------

Unified Modules' core comes with a ``unittest`` test suite. In order to execute
that test suite, simply run, from the ``core`` directory:

.. code-block:: sh

    $ python setup.py test


