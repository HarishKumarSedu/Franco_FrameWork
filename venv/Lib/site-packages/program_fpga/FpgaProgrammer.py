# This is the wrapper class for program_fpga script
from program_fpga import program_fpga

class FpgaProgramError(Exception):
    # Exception to inform FPGA programming failure when image was not found
    pass

class FpgaProgrammer(object):

    def __init__(self, hw_device=None, bit_file=None, hw_target='auto', speed='auto', mcs_file=None):
        # Configure the attributes for jtag_program
        # Note: Get the hardware device and target names from the Vivado Hardware Manager GUI
        self.hw_device = hw_device # Hardware device name
        self.bit_file = bit_file   # Bit programming file
        self.hw_target = hw_target # Hardware target id
        self.speed = speed         # Programming speed

        # Configure the attributes for cldbprog_program
        self.mcs_file = mcs_file   # Mcs programming file

    def jtag_program(self): 
        # Program the FPGA through JTAG
        result = program_fpga.jtag(self.hw_device, self.bit_file, self.hw_target, self.speed)
        return result

    def cldbprog_program(self):
        # Program the FPGA through cldbprog
        result = program_fpga.cldbprog(self.mcs_file)
        return result