from math import isclose


def check_numeric_vs_list(name, value, values_allowed, rel_tol=0.001):
    """
    Helper function that checks if a value matches and is within a relative tolerance the values_allowed parameter.

    :param name: Name of the value
    :type name: str
    :param value: A value to be checked against the values_allowed.
    :type value: int | float
    :param values_allowed: list or single value that 'value' parameter will be compared to.
    :type values_allowed: int | float | list | tuple | string
    :param rel_tol: The tolerance level the 'value' parameter can be from an element in values_allowed.
    :type rel_tol: int | float
    :return: The value that matches an element in values_allowed. Raise exception if value is None.
    :rtype: in | float
    """
    tmp = [v for v in values_allowed if isclose(value, v, rel_tol=rel_tol)]
    if len(tmp) == 0:
        msg = ", ".join([f"{v:4.2e}" for v in values_allowed])
        raise ValueError(f"Bad {name} {value:4.2e}, should be one of {msg}.")
    value = tmp[0]
    return value
