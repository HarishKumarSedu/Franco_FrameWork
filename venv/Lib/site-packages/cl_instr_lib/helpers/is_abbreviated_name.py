def is_abbreviated_name(name, valid_list):
    """
    Return True if name matches one of the strings in valid_list, where name is only required to consist of at least the
    capitalized characters at the beginning of one of the strings in the the valid_list.

    This provides the same matching scheme that is used in SCPI commands.

    If name contains additional characters beyond portion capitalized in valid_list, name is considered a match only
    if all characters of name match the entry in valid list. Note that case of characters in name is not a  factor in
    determining a match.

    :param name: A name to test against the entries in valid_list.
    :type name: str
    :param valid_list: List of possible names to match against. Required pasrt of match is initial capitalized part
        of each entry.
    :type valid_list:
    :return: True if name matches the required characters of an element of valid_list.
    :rtype: bool
    """

    e_capital = name.upper()
    for v in valid_list:
        if v.upper().startswith(e_capital):
            num_caps = max([i for i, c in enumerate(v) if c.isupper()]) + 1
            if len(name) >= num_caps:
                return True
    return False
