from cl_instr_lib.base_classes.instrument_visa import InstrumentVisa


class SignalGenerator(InstrumentVisa):
    """Base class for SignalGenerators, provides generic methods."""

    def __init__(self, visa_resource_name, logger=None, **kwargs):
        super().__init__(visa_resource_name, logger, **kwargs)
        self._channel_names = None

    def channel_names(self):
        """Return list of names of the attributes that correspond to output channels."""

        return self._channel_names

    def get_channel_obj(self, channel_name):
        """Return a reference to the Channel object given its name as a string."""

        if channel_name not in self._channel_names:
            names_str = ', '.join([f"'{s}'" for s in self._channel_names])
            raise ValueError(f"Bad channel_name '{channel_name}', should be one of: {names_str}.")
        return getattr(self, channel_name)
