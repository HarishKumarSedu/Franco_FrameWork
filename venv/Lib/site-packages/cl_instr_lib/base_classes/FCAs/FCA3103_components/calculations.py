# -----------------------------------------------------------
#                          INCLUDES
# -----------------------------------------------------------
# # Include Instrument Drivers/Helpers
# from cl_instr_lib.base_classes.instrument import Instrument
# from cl_instr_lib.helpers.check_enum_str import check_enum_str
# from cl_instr_lib.helpers.check_range import *
# from cl_instr_lib.helpers.user_delay import progress_bar, seconds_to_hms, wait_visualizer
# import cl_instr_lib.helpers.file_io as file
# # Include python libraries
# from enum import Enum
# import threading
# import time
# import signal
# import numpy as np
# -----------------------------------------------------------
#                            NOTES
# -----------------------------------------------------------
# -----------------------------------------------------------
#                            CLASS
# -----------------------------------------------------------


class Calculations:

    def __init__(self, fca):
        self.fca = fca
        self.write = fca.write
        self.query = fca.query
        self.log = fca.log
        self.log_inst_errors = fca.log_inst_errors
        self.get_inst_errors = fca.get_inst_errors
        self.on_off = fca.on_off

    #  Calculate sub-system
    # --------------------------
    # CALCulate:AVERage:ALL? Returns mean value, standard deviation, min and max value from the current statistics
    # sampling.
    # CALCulate:AVERage:COUNt Sets or returns the number of samples to use in statistics sampling.
    # CALCulate:AVERage:COUNt:CURRent? Returns the number of samples in the current statistics sampling.
    # CALCulate:AVERage:STATe Switches the statistical function on and off or returns the state.
    # CALCulate:AVERage:TYPE Sets or returns the statistical function to be performed.
    # CALCulate:DATA? Fetches data calculated in the post processing block.
    # CALCulate:IMMediate Causes the calculate sub-system to reprocess the statistical function on the sense data
    # without reacquiring the data. Query returns this reprocessed data.

    # CALCulate:LIMit Turns On/Off the limit-monitoring calculations.
    # CALCulate:LIMit:CLEar Resets the instrument that reports its result using the
    # CALCulate:LIMit:FCOunt? query.
    # CALCulate:LIMit:CLEar:AUTO Activates or deactivates automatic reset by INIT of the instrument
    # that reports its result using the CALCulate:LIMit:FCOunt? query.
    # CALCulate:LIMit:FAIL? Returns the result of limit testing.
    # CALCulate:LIMit:FCOunt? Returns the total number of times the set lower and upper limits have been passed since
    # the instrument was last reset.
    # CALCulate:LIMit:FCOunt:LOWer? Returns the number of times the set lower limit was passed since the
    # instrument was last reset.
    # CALCulate:LIMit:FCOunt:UPPer? Returns the number of times the set upper limit was
    # passed since the instrument was last reset
    # CALCulate:LIMit:LOWer Sets or returns the value of the lower limit.
    # CALCulate:LIMit:LOWer:STATe Sets whether the measured value should be checked against the lower limit.
    # CALCulate:LIMit:PCOunt? Returns the number of measurement results between
    # the set lower and upper limits since the instrument was last reset
    # CALCulate:LIMit:UPPer Sets or returns the value of the upper limit.
    # CALCulate:LIMit:UPPer:STATe Sets whether the measured value should be checked against the upper limit.

    # CALCulate:MATH Defines the mathematical expression used for mathematical operations.
    # CALCulate:MATH:STATe Switches on/off the mathematical function.
    # CALCulate:STATe Switches on/off the complete post-processing block.
    # CALCulate:TOTalize:TYPE Selects postprocessing for totalize.
    pass


# -----------------------------------------------------------
#                          END OF FILE
# -----------------------------------------------------------
