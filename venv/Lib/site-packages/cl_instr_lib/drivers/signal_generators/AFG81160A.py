from cl_instr_lib.base_classes.AFGs.Keysight.afg_81k_base import Afg81kBase, ProgrammingBounds


class AFG81160A(Afg81kBase):
    """Driver class for Keysight AFG81160A Dual Output function generator"""

    def __init__(self, visa_resource_name=None, logger=None, **kwargs):

        chan_pgm_bounds = ProgrammingBounds(
            load_z_min=1.0, load_z_max=1_000_000.0,
            ampl_pp_hiz_min=0.1, ampl_pp_hiz_max=10.0,  # Open circuit load, scaled for other loads in function_level.
            phase_min=-180, phase_max=180,
            offset_hiz_min=-10, offset_hiz_max=10,    # Open circuit load, scaled for other loads in function_level.
            voltage_window_hiz_min=-10, voltage_window_hiz_max=10,
            freq_min=1e-6, freq_max={
                'SINE': 500e6, 'SQUARE': 330e6, 'PULSE': 330e6, 'ARB': 120e6, 'RAMP': 20e6
            },
            freq_sine_burst_min=1e-3, freq_sine_burst_max=120e6,
            freq_arb_burst_min=1e-3, freq_arb_burst_max=60e6,
            ramp_symmetry_min=0.0, ramp_symmetry_max=100.0,
            edge_min=2.5e-9,
            duty_min=0.1, duty_max=99.999,
            noise_percent_max=50.0,
            am_depth_percent_max=120.0,
            fm_deviation_max=120e6,
            pm_deviation_max=180.0,
            mod_freq_internal_min=2e-3, mod_freq_internal_max=50e3,
            fsk_keyrate_min=2e-3, fsk_keyrate_max=1e6,
            hop_freq_hz_max=240e6,
            burst_ncycles_min=1, burst_ncycles_max=1_000_000,
            burst_tdelay_sec_max=85.0
        )

        # Setup the simulation code inherited from Instrument.
        super().__init__(visa_resource_name, chan_pgm_bounds, logger,
                         model_re='^81160A$',
                         sim_idn='Agilent Technologies,81160A,MY51401053,2.0.0.0-2.6',
                         sim_opt='Opt. 002,Opt. PAT_330,Opt. PAT_660',
                         **kwargs)


if __name__ == '__main__':
    afg81160a = AFG81160A('GPIB0::15')  # Replace visa_resource_name with None for simulated hardware.
    afg81160a.debug_options(log_scpi=True, unused_args_handling='LOG_UNUSED', inst_error_handling='LOG_ALWAYS')
