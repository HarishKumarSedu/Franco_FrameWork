from cl_instr_lib.base_classes.E36300_base import E36300_base
from cl_instr_lib.base_classes.E36300_base import ProgrammingBounds


class E36313A(E36300_base):
    """Driver class for Keysight E36313A Triple Output Power Supply."""

    def __init__(self, visa_resource_name=None, logger=None, **kwargs):
        # Setup the simulation code inherited from Instrument.
        """ First parameter is command to determine number of channels.
            Not applicable to E36313A, so using 'FIXED: {number of channels}'
        """
        super().__init__(visa_resource_name,
                         ProgrammingBounds(0.0, 6.18, 0.002, 10.3),   # Ch1
                         ProgrammingBounds(0.0, 25.75, 0.001, 2.06),  # Ch2
                         ProgrammingBounds(0.0, 25.75, 0.001, 2.06),  # Ch3
                         logger=logger,
                         model_re='^E36313A$',
                         sim_idn='Keysight Technologies,E36313A,0,2.1-1.0.4-1.12',
                         **kwargs)


if __name__ == '__main__':

    # Replace visa_resource_name with None for simulated hardware.
    # psu = E36313A(None)
    psu = E36313A('GPIB0::1') # Replace visa_resource_name with None for simulated hardware.
    psu.debug_options(log_scpi=True, inst_error_handling='LOG_ALWAYS')

    test_flag = True
    if test_flag:
        from cl_instr_lib.base_classes.E36300_base import self_test
        self_test(psu)
