# -----------------------------------------------------------
#                          INCLUDES
# -----------------------------------------------------------
# Inherit from the base class
from cl_instr_lib.base_classes.eloads.PLZ004WL_base import PLZ004WL_base
# Include Other Instrument Drivers/Helpers
# -----------------------------------------------------------
#                            NOTES
# -----------------------------------------------------------
# -----------------------------------------------------------
#                            CLASS
# -----------------------------------------------------------


class PLZ334WL(PLZ004WL_base):
    """Class for controlling Kikusui Electronic Load Model PLZ334WL."""

    _ratings = dict()
    _ratings['COND'] = {'L': (60e-6, 3.3), 'M': (600e-6, 30.3), 'H': (6e-3, 330), 'units': 'Siemens (mhos)'}
    _ratings['CURR'] = {'L': (0, 1.0), 'M': (0, 10.0), 'H': (0, 100), 'units': 'Amps'}
    _ratings['POW'] = {'L': (0.33, 3.3), 'M': (3.3, 33.0), 'H': (33.0, 330.0), 'units': 'Watts'}
    _ratings['VOLT'] = {'L': (0.3, 4.0), 'H': (0.3, 30), 'units': 'Volts'}
    _ratings['SLEW'] = {'L': (50e-6, 500e-3), 'M': (500e-6, 5.0), 'H': (5.0e-3, 50), 'units': 'Amps/usec'}
    _rating_curr_max = 110  # Amps
    _rating_pow_max = 363   # Watts

    def __init__(self, visa_resource_name=None, logger=None, **kwargs):
        super().__init__(visa_resource_name,
                         logger,
                         model_re='^PLZ334WL$',
                         sim_idn="KIKUSUI,PLZ334WL,AU003271,1.06",
                         **kwargs)


if __name__ == '__main__':
    plz334wl = PLZ334WL('GPIB0::1')
    plz334wl.debug_options(log_scpi=True, inst_error_handling='LOG_ALWAYS')

    test_flag = False
    if test_flag:
        from driver_test_codes.PLZ004WL_test import self_test
        self_test(plz334wl)

# -----------------------------------------------------------
#                          END OF FILE
# -----------------------------------------------------------

